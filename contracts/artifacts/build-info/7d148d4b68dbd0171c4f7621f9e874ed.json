{
	"id": "7d148d4b68dbd0171c4f7621f9e874ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WavyNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\n\r\ncontract WavyNFT is ERC721URIStorage {\r\n\r\n    // token id is a counter\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIds;\r\n\r\n    constructor() ERC721(\"WavyNFT\", \"WAVY\") {\r\n\r\n    }\r\n\r\n    // mint nft to target address\r\n    function awardItem(address addr, string memory tokenURI) public returns (uint256)\r\n    {\r\n        // increment token id\r\n        _tokenIds.increment();\r\n\r\n        // get current item id\r\n        uint256 newItemId = _tokenIds.current();\r\n\r\n        // mint to receipent address\r\n        _mint(addr, newItemId);\r\n\r\n        // set token uri to that token\r\n        _setTokenURI(newItemId, tokenURI);\r\n\r\n        return newItemId;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":613:13619  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1375:1488  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1441:1454  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1441:1446  _name */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1441:1454  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1481  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1471  _symbol */\n  0x01\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1481  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1375:1488  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":613:13619  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":613:13619  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":613:13619  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":5027:5041   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5020:5042   */\n      iszero\n        /* \"#utility.yul\":5002:5043   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2473:2571  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4325:4357   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4307:4358   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4295:4297   */\n      0x20\n        /* \"#utility.yul\":4280:4298   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":4161:4364   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3522:3923  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4711:5041  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5107:5286  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2176:2411  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":10320:10345   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10308:10310   */\n      0x20\n        /* \"#utility.yul\":10293:10311   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":10174:10351   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2635:2737  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4268:4421  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5672  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:3132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4649  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4584:4588  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4625  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4642  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4649  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1657:1661  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1732  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1796  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1748:1796  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1796  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1848  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1812:1848  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1673:1848  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2473:2571  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2527:2540  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2559:2564  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2552:2564  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2473:2571  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4060:4067  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7239  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4079:4152  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8317:8319   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4079:4152  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8299:8320   */\n      mstore\n        /* \"#utility.yul\":8356:8358   */\n      0x2c\n        /* \"#utility.yul\":8336:8354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8329:8359   */\n      mstore\n        /* \"#utility.yul\":8395:8429   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":8375:8393   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8368:8430   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8446:8464   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8439:8481   */\n      mstore\n        /* \"#utility.yul\":8498:8517   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4079:4152  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4170:4194  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4170:4185  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4170:4194  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3522:3923  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3602:3615  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3641  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3633:3640  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3632  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3641  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3602:3641  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3670  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3659:3670  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3659:3661  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3659:3670  to != owner */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9556:9558   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9538:9559   */\n      mstore\n        /* \"#utility.yul\":9595:9597   */\n      0x21\n        /* \"#utility.yul\":9575:9593   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9568:9598   */\n      mstore\n        /* \"#utility.yul\":9634:9668   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":9614:9632   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9607:9669   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":9685:9703   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9678:9709   */\n      mstore\n        /* \"#utility.yul\":9726:9745   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_91\n        /* \"#utility.yul\":9354:9751   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3740:3761  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3740:3802  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3765:3802  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3782:3787  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4649  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3765:3802  isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7071:7073   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7053:7074   */\n      mstore\n        /* \"#utility.yul\":7110:7112   */\n      0x38\n        /* \"#utility.yul\":7090:7108   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7083:7113   */\n      mstore\n        /* \"#utility.yul\":7149:7183   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":7129:7147   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7122:7184   */\n      mstore\n        /* \"#utility.yul\":7220:7246   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":7200:7218   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7193:7247   */\n      mstore\n        /* \"#utility.yul\":7264:7283   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n      tag_91\n        /* \"#utility.yul\":6869:7289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3895:3916  _approve(to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3904:3906  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3908:3915  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3895:3903  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3895:3916  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3592:3923  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3522:3923  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4711:5041  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4941  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4933:4940  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4918  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4941  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4892:4995  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5006:5034  _transfer(from, to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5016:5020  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5026:5033  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5006:5015  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5006:5034  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5107:5286  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5279  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5261  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5263:5265  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5267:5274  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5279  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5256  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5279  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2176:2411  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2283:2299  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2283:2290  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2283:2299  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2317:2336  owner != address(0) */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2309:2382  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7907:7909   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2309:2382  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7889:7910   */\n      mstore\n        /* \"#utility.yul\":7946:7948   */\n      0x29\n        /* \"#utility.yul\":7926:7944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7919:7949   */\n      mstore\n        /* \"#utility.yul\":7985:8019   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":7965:7983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7958:8020   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8036:8054   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8029:8068   */\n      mstore\n        /* \"#utility.yul\":8085:8104   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2309:2382  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":7705:8110   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1986:1993  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2013:2032  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7496:7498   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7478:7499   */\n      mstore\n        /* \"#utility.yul\":7535:7537   */\n      0x2a\n        /* \"#utility.yul\":7515:7533   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7508:7538   */\n      mstore\n        /* \"#utility.yul\":7574:7608   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":7554:7572   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7547:7609   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":7625:7643   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7618:7658   */\n      mstore\n        /* \"#utility.yul\":7675:7694   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_91\n        /* \"#utility.yul\":7294:7700   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2096:2112  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2096:2105  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2096:2112  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2635:2737  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2691:2704  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2723:2730  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2716:2730  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4268:4421  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4362:4414  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4395:4403  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4405:4413  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4362:4380  _setApprovalForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4362:4414  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4268:4421  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5672  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5521:5562  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5554:5561  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5521:5539  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5521:5562  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5513:5616  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5626:5665  _safeTransfer(from, to, tokenId, _data) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5640:5644  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5646:5648  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5650:5657  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5659:5664  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5626:5639  _safeTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5626:5665  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5672  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:3132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7209:7213  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7239  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2876:2889  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9140:9142   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9122:9143   */\n      mstore\n        /* \"#utility.yul\":9179:9181   */\n      0x2f\n        /* \"#utility.yul\":9159:9177   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9152:9182   */\n      mstore\n        /* \"#utility.yul\":9218:9252   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":9198:9216   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9191:9253   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9269:9287   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9262:9307   */\n      mstore\n        /* \"#utility.yul\":9324:9343   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8938:9349   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2988:3009  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3012:3022  _baseURI() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3449:3458  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3373:3465  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3012:3022  _baseURI() */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2988:3022  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3063:3064  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3039:3060  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3039:3064  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3039:3125  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_151\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3091:3098  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3118  tokenId.toString() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3107  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3116  tokenId.toString */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3118  tokenId.toString() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3074:3119  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3039:3125  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3032:3125  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:3132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10995:11166  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11084  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11098  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11122:11145  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11122:11136  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11122:11145  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11113:11159  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10995:11166  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7427:7771  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7520:7524  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7239  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6658:6660   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6640:6661   */\n      mstore\n        /* \"#utility.yul\":6697:6699   */\n      0x2c\n        /* \"#utility.yul\":6677:6695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6670:6700   */\n      mstore\n        /* \"#utility.yul\":6736:6770   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":6716:6734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6709:6771   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":6787:6805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6780:6822   */\n      mstore\n        /* \"#utility.yul\":6839:6858   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":6456:6864   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7619:7632  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7658  ERC721.ownerOf(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7649  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7658  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7619:7658  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7687:7692  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7692  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7683  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7692  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7727  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_169\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7720:7727  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7727  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7716  getApproved(tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7708:7715  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7707  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7716  getApproved(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7727  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7727  spender == owner || getApproved(tokenId) == spender */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7763  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_172\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4584:4588  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4625  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4642  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7731:7763  isApprovedForAll(owner, spender) */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7668:7764  return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender)) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7427:7771  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10324:10884  function _transfer(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10478:10482  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10482  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10474  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10466:10473  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10465  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10474  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10482  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8712:8733   */\n      mstore\n        /* \"#utility.yul\":8769:8771   */\n      0x29\n        /* \"#utility.yul\":8749:8767   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8742:8772   */\n      mstore\n        /* \"#utility.yul\":8808:8842   */\n      0x4552433732313a207472616e73666572206f6620746f6b656e20746861742069\n        /* \"#utility.yul\":8788:8806   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8781:8843   */\n      mstore\n      shl(0xb9, 0x39903737ba1037bbb7)\n        /* \"#utility.yul\":8859:8877   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8852:8891   */\n      mstore\n        /* \"#utility.yul\":8908:8927   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_91\n        /* \"#utility.yul\":8528:8933   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10546:10562  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5899:5901   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5881:5902   */\n      mstore\n        /* \"#utility.yul\":5938:5940   */\n      0x24\n        /* \"#utility.yul\":5918:5936   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5911:5941   */\n      mstore\n        /* \"#utility.yul\":5977:6011   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":5957:5975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5950:6012   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6028:6046   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6021:6055   */\n      mstore\n        /* \"#utility.yul\":6072:6091   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":5697:6097   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10715:10744  _approve(address(0), tokenId) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10736:10743  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10715:10723  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10715:10744  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10770  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10764  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10770  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10775  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10774:10775  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10770  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10775  _balances[from] -= 1 */\n      tag_184\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10774:10775  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10775  _balances[from] -= 1 */\n      tag_185\n      jump\t// in\n    tag_184:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10798  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10794  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10798  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10803  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10802:10803  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10798  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10803  _balances[to] += 1 */\n      tag_186\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10802:10803  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10803  _balances[to] += 1 */\n      tag_187\n      jump\t// in\n    tag_186:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10829  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10820  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10829  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10834  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10850:10877  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10829  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10850:10877  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10324:10884  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11301:11608  function _setApprovalForAll(... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11451:11459  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11442:11459  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11442:11447  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11442:11459  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6304:6306   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6286:6307   */\n      mstore\n        /* \"#utility.yul\":6343:6345   */\n      0x19\n        /* \"#utility.yul\":6323:6341   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6316:6346   */\n      mstore\n        /* \"#utility.yul\":6382:6409   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":6362:6380   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6355:6410   */\n      mstore\n        /* \"#utility.yul\":6427:6445   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_91\n        /* \"#utility.yul\":6102:6451   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11524  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11517  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11524  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11534  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11545  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11560:11601  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":5002:5043   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11560:11601  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11560:11601  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11301:11608  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6534:6841  function _safeTransfer(... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6713  _transfer(from, to, tokenId) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6695:6699  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6703  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6712  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6694  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6713  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6731:6779  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6754:6758  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6760:6762  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6771  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6773:6778  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6731:6753  _checkOnERC721Received */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6731:6779  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6723:6834  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_199\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_202\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_205\n      dup2\n      tag_206\n      jump\t// in\n    tag_205:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_207\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_203)\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_212:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_185\n      jump\t// in\n    tag_215:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_218\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_187\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_208\n      jump\t// in\n    tag_222:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_213)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12161:12939  function _checkOnERC721Received(... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12311:12315  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12331:12344  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12327:12933  if (to.isContract()) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12438  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12402  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12438  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_229\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12417:12421  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12423:12430  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12432:12437  _data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12438  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_230\n      jump\t// in\n    tag_229:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_233\n      swap2\n      dup2\n      add\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      0x01\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12881  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_235\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_240\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_239)\n    tag_240:\n      0x60\n      swap2\n      pop\n    tag_239:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12605:12618  reason.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12601:12867  if (reason.length == 0) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12647:12707  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_199\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12601:12867  if (reason.length == 0) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12819:12825  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12813:12826  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12804:12810  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12800:12802  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12796:12811  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12789:12827  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12881  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_235:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12488:12539  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12481:12539  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_172)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12327:12933  if (to.isContract()) {... */\n    tag_227:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12918:12922  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12161:12939  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_248:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_250:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_51:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_252:\n        /* \"#utility.yul\":343:372   */\n      tag_152\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_248\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_72:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_255:\n        /* \"#utility.yul\":551:580   */\n      tag_256\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_248\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_257\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_248\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_40:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_259:\n        /* \"#utility.yul\":833:862   */\n      tag_260\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_248\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_261\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_248\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:2119   */\n    tag_64:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1084:1090   */\n      dup1\n        /* \"#utility.yul\":1092:1098   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup1\n        /* \"#utility.yul\":1153:1156   */\n      0x80\n        /* \"#utility.yul\":1141:1150   */\n      dup6\n        /* \"#utility.yul\":1132:1139   */\n      dup8\n        /* \"#utility.yul\":1128:1151   */\n      sub\n        /* \"#utility.yul\":1124:1157   */\n      slt\n        /* \"#utility.yul\":1121:1174   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1170:1171   */\n      0x00\n        /* \"#utility.yul\":1167:1168   */\n      dup1\n        /* \"#utility.yul\":1160:1172   */\n      revert\n        /* \"#utility.yul\":1121:1174   */\n    tag_263:\n        /* \"#utility.yul\":1193:1222   */\n      tag_264\n        /* \"#utility.yul\":1212:1221   */\n      dup6\n        /* \"#utility.yul\":1193:1222   */\n      tag_248\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1183:1222   */\n      swap4\n      pop\n        /* \"#utility.yul\":1241:1279   */\n      tag_265\n        /* \"#utility.yul\":1275:1277   */\n      0x20\n        /* \"#utility.yul\":1264:1273   */\n      dup7\n        /* \"#utility.yul\":1260:1278   */\n      add\n        /* \"#utility.yul\":1241:1279   */\n      tag_248\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1231:1279   */\n      swap3\n      pop\n        /* \"#utility.yul\":1326:1328   */\n      0x40\n        /* \"#utility.yul\":1315:1324   */\n      dup6\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"#utility.yul\":1298:1330   */\n      calldataload\n        /* \"#utility.yul\":1288:1330   */\n      swap2\n      pop\n        /* \"#utility.yul\":1381:1383   */\n      0x60\n        /* \"#utility.yul\":1370:1379   */\n      dup6\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"#utility.yul\":1353:1385   */\n      calldataload\n        /* \"#utility.yul\":1404:1422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1445:1447   */\n      dup1\n        /* \"#utility.yul\":1437:1443   */\n      dup3\n        /* \"#utility.yul\":1434:1448   */\n      gt\n        /* \"#utility.yul\":1431:1465   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1431:1465   */\n    tag_266:\n        /* \"#utility.yul\":1499:1505   */\n      dup2\n        /* \"#utility.yul\":1488:1497   */\n      dup8\n        /* \"#utility.yul\":1484:1506   */\n      add\n        /* \"#utility.yul\":1474:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1544:1551   */\n      dup8\n        /* \"#utility.yul\":1537:1541   */\n      0x1f\n        /* \"#utility.yul\":1533:1535   */\n      dup4\n        /* \"#utility.yul\":1529:1542   */\n      add\n        /* \"#utility.yul\":1525:1552   */\n      slt\n        /* \"#utility.yul\":1515:1570   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1566:1567   */\n      0x00\n        /* \"#utility.yul\":1563:1564   */\n      dup1\n        /* \"#utility.yul\":1556:1568   */\n      revert\n        /* \"#utility.yul\":1515:1570   */\n    tag_267:\n        /* \"#utility.yul\":1602:1604   */\n      dup2\n        /* \"#utility.yul\":1589:1605   */\n      calldataload\n        /* \"#utility.yul\":1624:1626   */\n      dup2\n        /* \"#utility.yul\":1620:1622   */\n      dup2\n        /* \"#utility.yul\":1617:1627   */\n      gt\n        /* \"#utility.yul\":1614:1650   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1630:1648   */\n      tag_269\n      tag_211\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1705:1707   */\n      0x40\n        /* \"#utility.yul\":1699:1708   */\n      mload\n        /* \"#utility.yul\":1673:1675   */\n      0x1f\n        /* \"#utility.yul\":1759:1772   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1755:1777   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1779:1781   */\n      0x3f\n        /* \"#utility.yul\":1751:1782   */\n      add\n        /* \"#utility.yul\":1747:1787   */\n      and\n        /* \"#utility.yul\":1735:1788   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1803:1821   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1823:1845   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1800:1846   */\n      or\n        /* \"#utility.yul\":1797:1869   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1849:1867   */\n      tag_271\n      tag_211\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1889:1899   */\n      dup2\n        /* \"#utility.yul\":1885:1887   */\n      0x40\n        /* \"#utility.yul\":1878:1900   */\n      mstore\n        /* \"#utility.yul\":1924:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1922   */\n      dup2\n        /* \"#utility.yul\":1909:1927   */\n      mstore\n        /* \"#utility.yul\":1964:1971   */\n      dup11\n        /* \"#utility.yul\":1959:1961   */\n      0x20\n        /* \"#utility.yul\":1954:1956   */\n      dup5\n        /* \"#utility.yul\":1950:1952   */\n      dup8\n        /* \"#utility.yul\":1946:1957   */\n      add\n        /* \"#utility.yul\":1942:1962   */\n      add\n        /* \"#utility.yul\":1939:1972   */\n      gt\n        /* \"#utility.yul\":1936:1989   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1982:1983   */\n      dup1\n        /* \"#utility.yul\":1975:1987   */\n      revert\n        /* \"#utility.yul\":1936:1989   */\n    tag_272:\n        /* \"#utility.yul\":2041:2043   */\n      dup3\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"#utility.yul\":2032:2034   */\n      dup7\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2015:2021   */\n      dup4\n        /* \"#utility.yul\":2011:2026   */\n      add\n        /* \"#utility.yul\":1998:2044   */\n      calldatacopy\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2076:2078   */\n      dup5\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2064:2079   */\n      add\n        /* \"#utility.yul\":2060:2084   */\n      add\n        /* \"#utility.yul\":2053:2088   */\n      mstore\n        /* \"#utility.yul\":2107:2113   */\n      dup1\n        /* \"#utility.yul\":2097:2113   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:2119   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2124:2471   */\n    tag_60:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_274:\n        /* \"#utility.yul\":2289:2318   */\n      tag_275\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_248\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2279:2318   */\n      swap2\n      pop\n        /* \"#utility.yul\":2368:2370   */\n      0x20\n        /* \"#utility.yul\":2357:2366   */\n      dup4\n        /* \"#utility.yul\":2353:2371   */\n      add\n        /* \"#utility.yul\":2340:2372   */\n      calldataload\n        /* \"#utility.yul\":2415:2420   */\n      dup1\n        /* \"#utility.yul\":2408:2421   */\n      iszero\n        /* \"#utility.yul\":2401:2422   */\n      iszero\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2391:2423   */\n      eq\n        /* \"#utility.yul\":2381:2441   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2434:2435   */\n      dup1\n        /* \"#utility.yul\":2427:2439   */\n      revert\n        /* \"#utility.yul\":2381:2441   */\n    tag_276:\n        /* \"#utility.yul\":2460:2465   */\n      dup1\n        /* \"#utility.yul\":2450:2465   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2124:2471   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2730   */\n    tag_36:\n        /* \"#utility.yul\":2544:2550   */\n      0x00\n        /* \"#utility.yul\":2552:2558   */\n      dup1\n        /* \"#utility.yul\":2605:2607   */\n      0x40\n        /* \"#utility.yul\":2593:2602   */\n      dup4\n        /* \"#utility.yul\":2584:2591   */\n      dup6\n        /* \"#utility.yul\":2580:2603   */\n      sub\n        /* \"#utility.yul\":2576:2608   */\n      slt\n        /* \"#utility.yul\":2573:2625   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2621:2622   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      dup1\n        /* \"#utility.yul\":2611:2623   */\n      revert\n        /* \"#utility.yul\":2573:2625   */\n    tag_278:\n        /* \"#utility.yul\":2644:2673   */\n      tag_279\n        /* \"#utility.yul\":2663:2672   */\n      dup4\n        /* \"#utility.yul\":2644:2673   */\n      tag_248\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2634:2673   */\n      swap5\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2692:2724   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2476:2730   */\n      jump\t// out\n        /* \"#utility.yul\":2735:2980   */\n    tag_20:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2866   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2859:2860   */\n      dup1\n        /* \"#utility.yul\":2852:2864   */\n      revert\n        /* \"#utility.yul\":2814:2866   */\n    tag_281:\n        /* \"#utility.yul\":2901:2910   */\n      dup2\n        /* \"#utility.yul\":2888:2911   */\n      calldataload\n        /* \"#utility.yul\":2920:2950   */\n      tag_152\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2920:2950   */\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":2985:3234   */\n    tag_234:\n        /* \"#utility.yul\":3054:3060   */\n      0x00\n        /* \"#utility.yul\":3107:3109   */\n      0x20\n        /* \"#utility.yul\":3095:3104   */\n      dup3\n        /* \"#utility.yul\":3086:3093   */\n      dup5\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3110   */\n      slt\n        /* \"#utility.yul\":3075:3127   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3123:3124   */\n      0x00\n        /* \"#utility.yul\":3120:3121   */\n      dup1\n        /* \"#utility.yul\":3113:3125   */\n      revert\n        /* \"#utility.yul\":3075:3127   */\n    tag_285:\n        /* \"#utility.yul\":3155:3164   */\n      dup2\n        /* \"#utility.yul\":3149:3165   */\n      mload\n        /* \"#utility.yul\":3174:3204   */\n      tag_152\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3174:3204   */\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":3239:3419   */\n    tag_30:\n        /* \"#utility.yul\":3298:3304   */\n      0x00\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3339:3348   */\n      dup3\n        /* \"#utility.yul\":3330:3337   */\n      dup5\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3371   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3364:3365   */\n      dup1\n        /* \"#utility.yul\":3357:3369   */\n      revert\n        /* \"#utility.yul\":3319:3371   */\n    tag_288:\n      pop\n        /* \"#utility.yul\":3390:3413   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3239:3419   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3424:3681   */\n    tag_289:\n        /* \"#utility.yul\":3465:3468   */\n      0x00\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3497:3509   */\n      mload\n        /* \"#utility.yul\":3530:3536   */\n      dup1\n        /* \"#utility.yul\":3525:3528   */\n      dup5\n        /* \"#utility.yul\":3518:3537   */\n      mstore\n        /* \"#utility.yul\":3546:3609   */\n      tag_291\n        /* \"#utility.yul\":3602:3608   */\n      dup2\n        /* \"#utility.yul\":3595:3599   */\n      0x20\n        /* \"#utility.yul\":3590:3593   */\n      dup7\n        /* \"#utility.yul\":3586:3600   */\n      add\n        /* \"#utility.yul\":3579:3583   */\n      0x20\n        /* \"#utility.yul\":3572:3577   */\n      dup7\n        /* \"#utility.yul\":3568:3584   */\n      add\n        /* \"#utility.yul\":3546:3609   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3663:3665   */\n      0x1f\n        /* \"#utility.yul\":3642:3657   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3638:3667   */\n      and\n        /* \"#utility.yul\":3629:3668   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3670:3674   */\n      0x20\n        /* \"#utility.yul\":3625:3675   */\n      add\n      swap3\n        /* \"#utility.yul\":3424:3681   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:4156   */\n    tag_156:\n        /* \"#utility.yul\":3865:3868   */\n      0x00\n        /* \"#utility.yul\":3903:3909   */\n      dup4\n        /* \"#utility.yul\":3897:3910   */\n      mload\n        /* \"#utility.yul\":3919:3972   */\n      tag_294\n        /* \"#utility.yul\":3965:3971   */\n      dup2\n        /* \"#utility.yul\":3960:3963   */\n      dup5\n        /* \"#utility.yul\":3953:3957   */\n      0x20\n        /* \"#utility.yul\":3945:3951   */\n      dup9\n        /* \"#utility.yul\":3941:3958   */\n      add\n        /* \"#utility.yul\":3919:3972   */\n      tag_292\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4035:4048   */\n      dup4\n      mload\n        /* \"#utility.yul\":3994:4010   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4057:4114   */\n      tag_295\n        /* \"#utility.yul\":4035:4048   */\n      dup2\n        /* \"#utility.yul\":3994:4010   */\n      dup4\n        /* \"#utility.yul\":4091:4095   */\n      0x20\n        /* \"#utility.yul\":4079:4096   */\n      dup9\n      add\n        /* \"#utility.yul\":4057:4114   */\n      tag_292\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4130:4150   */\n      add\n      swap5\n        /* \"#utility.yul\":3686:4156   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4369:4857   */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4638:4653   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":4620:4654   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4690:4705   */\n      dup5\n      and\n        /* \"#utility.yul\":4685:4687   */\n      0x20\n        /* \"#utility.yul\":4670:4688   */\n      dup3\n      add\n        /* \"#utility.yul\":4663:4706   */\n      mstore\n        /* \"#utility.yul\":4737:4739   */\n      0x40\n        /* \"#utility.yul\":4722:4740   */\n      dup2\n      add\n        /* \"#utility.yul\":4715:4749   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4785:4788   */\n      0x80\n        /* \"#utility.yul\":4780:4782   */\n      0x60\n        /* \"#utility.yul\":4765:4783   */\n      dup3\n      add\n        /* \"#utility.yul\":4758:4789   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4563:4567   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4806:4851   */\n      tag_298\n      swap1\n        /* \"#utility.yul\":4831:4850   */\n      dup4\n      add\n        /* \"#utility.yul\":4823:4829   */\n      dup5\n        /* \"#utility.yul\":4806:4851   */\n      tag_289\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4798:4851   */\n      swap7\n        /* \"#utility.yul\":4369:4857   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5273   */\n    tag_27:\n        /* \"#utility.yul\":5203:5205   */\n      0x20\n        /* \"#utility.yul\":5192:5201   */\n      dup2\n        /* \"#utility.yul\":5185:5206   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x00\n        /* \"#utility.yul\":5223:5267   */\n      tag_152\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5252:5261   */\n      dup4\n        /* \"#utility.yul\":5248:5266   */\n      add\n        /* \"#utility.yul\":5240:5246   */\n      dup5\n        /* \"#utility.yul\":5223:5267   */\n      tag_289\n      jump\t// in\n        /* \"#utility.yul\":5278:5692   */\n    tag_199:\n        /* \"#utility.yul\":5480:5482   */\n      0x20\n        /* \"#utility.yul\":5462:5483   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5519:5521   */\n      0x32\n        /* \"#utility.yul\":5499:5517   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5492:5522   */\n      mstore\n        /* \"#utility.yul\":5558:5592   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":5553:5555   */\n      0x40\n        /* \"#utility.yul\":5538:5556   */\n      dup3\n      add\n        /* \"#utility.yul\":5531:5593   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":5624:5626   */\n      0x60\n        /* \"#utility.yul\":5609:5627   */\n      dup3\n      add\n        /* \"#utility.yul\":5602:5650   */\n      mstore\n        /* \"#utility.yul\":5682:5685   */\n      0x80\n        /* \"#utility.yul\":5667:5686   */\n      add\n      swap1\n        /* \"#utility.yul\":5278:5692   */\n      jump\t// out\n        /* \"#utility.yul\":9756:10169   */\n    tag_114:\n        /* \"#utility.yul\":9958:9960   */\n      0x20\n        /* \"#utility.yul\":9940:9961   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9997:9999   */\n      0x31\n        /* \"#utility.yul\":9977:9995   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9970:10000   */\n      mstore\n        /* \"#utility.yul\":10036:10070   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":10031:10033   */\n      0x40\n        /* \"#utility.yul\":10016:10034   */\n      dup3\n      add\n        /* \"#utility.yul\":10009:10071   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":10102:10104   */\n      0x60\n        /* \"#utility.yul\":10087:10105   */\n      dup3\n      add\n        /* \"#utility.yul\":10080:10127   */\n      mstore\n        /* \"#utility.yul\":10159:10162   */\n      0x80\n        /* \"#utility.yul\":10144:10163   */\n      add\n      swap1\n        /* \"#utility.yul\":9756:10169   */\n      jump\t// out\n        /* \"#utility.yul\":10356:10484   */\n    tag_187:\n        /* \"#utility.yul\":10396:10399   */\n      0x00\n        /* \"#utility.yul\":10427:10428   */\n      dup3\n        /* \"#utility.yul\":10423:10429   */\n      not\n        /* \"#utility.yul\":10420:10421   */\n      dup3\n        /* \"#utility.yul\":10417:10430   */\n      gt\n        /* \"#utility.yul\":10414:10453   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":10433:10451   */\n      tag_317\n      tag_318\n      jump\t// in\n    tag_317:\n      pop\n        /* \"#utility.yul\":10469:10478   */\n      add\n      swap1\n        /* \"#utility.yul\":10356:10484   */\n      jump\t// out\n        /* \"#utility.yul\":10489:10609   */\n    tag_208:\n        /* \"#utility.yul\":10529:10530   */\n      0x00\n        /* \"#utility.yul\":10555:10556   */\n      dup3\n        /* \"#utility.yul\":10545:10580   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":10560:10578   */\n      tag_321\n      tag_322\n      jump\t// in\n    tag_321:\n      pop\n        /* \"#utility.yul\":10594:10603   */\n      div\n      swap1\n        /* \"#utility.yul\":10489:10609   */\n      jump\t// out\n        /* \"#utility.yul\":10614:10739   */\n    tag_185:\n        /* \"#utility.yul\":10654:10658   */\n      0x00\n        /* \"#utility.yul\":10682:10683   */\n      dup3\n        /* \"#utility.yul\":10679:10680   */\n      dup3\n        /* \"#utility.yul\":10676:10684   */\n      lt\n        /* \"#utility.yul\":10673:10707   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":10687:10705   */\n      tag_325\n      tag_318\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":10724:10733   */\n      sub\n      swap1\n        /* \"#utility.yul\":10614:10739   */\n      jump\t// out\n        /* \"#utility.yul\":10744:11002   */\n    tag_292:\n        /* \"#utility.yul\":10816:10817   */\n      0x00\n        /* \"#utility.yul\":10826:10939   */\n    tag_327:\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10837:10838   */\n      dup2\n        /* \"#utility.yul\":10834:10847   */\n      lt\n        /* \"#utility.yul\":10826:10939   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":10916:10927   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10910:10928   */\n      mload\n        /* \"#utility.yul\":10897:10908   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10890:10929   */\n      mstore\n        /* \"#utility.yul\":10862:10864   */\n      0x20\n        /* \"#utility.yul\":10855:10865   */\n      add\n        /* \"#utility.yul\":10826:10939   */\n      jump(tag_327)\n    tag_329:\n        /* \"#utility.yul\":10957:10963   */\n      dup4\n        /* \"#utility.yul\":10954:10955   */\n      dup2\n        /* \"#utility.yul\":10951:10964   */\n      gt\n        /* \"#utility.yul\":10948:10996   */\n      iszero\n      tag_142\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":10992:10993   */\n      0x00\n        /* \"#utility.yul\":10974:10990   */\n      swap2\n      add\n        /* \"#utility.yul\":10967:10994   */\n      mstore\n        /* \"#utility.yul\":10744:11002   */\n      jump\t// out\n        /* \"#utility.yul\":11007:11387   */\n    tag_82:\n        /* \"#utility.yul\":11086:11087   */\n      0x01\n        /* \"#utility.yul\":11082:11094   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":11129:11141   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":11150:11211   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":11204:11208   */\n      0x7f\n        /* \"#utility.yul\":11196:11202   */\n      dup3\n        /* \"#utility.yul\":11192:11209   */\n      and\n        /* \"#utility.yul\":11182:11209   */\n      swap2\n      pop\n        /* \"#utility.yul\":11150:11211   */\n    tag_332:\n        /* \"#utility.yul\":11257:11259   */\n      0x20\n        /* \"#utility.yul\":11249:11255   */\n      dup3\n        /* \"#utility.yul\":11246:11260   */\n      lt\n        /* \"#utility.yul\":11226:11244   */\n      dup2\n        /* \"#utility.yul\":11223:11261   */\n      eq\n        /* \"#utility.yul\":11220:11381   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":11303:11313   */\n      0x4e487b71\n        /* \"#utility.yul\":11298:11301   */\n      0xe0\n        /* \"#utility.yul\":11294:11314   */\n      shl\n        /* \"#utility.yul\":11291:11292   */\n      0x00\n        /* \"#utility.yul\":11284:11315   */\n      mstore\n        /* \"#utility.yul\":11338:11342   */\n      0x22\n        /* \"#utility.yul\":11335:11336   */\n      0x04\n        /* \"#utility.yul\":11328:11343   */\n      mstore\n        /* \"#utility.yul\":11366:11370   */\n      0x24\n        /* \"#utility.yul\":11363:11364   */\n      0x00\n        /* \"#utility.yul\":11356:11371   */\n      revert\n        /* \"#utility.yul\":11220:11381   */\n    tag_333:\n      pop\n        /* \"#utility.yul\":11007:11387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11392:11527   */\n    tag_206:\n        /* \"#utility.yul\":11431:11434   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":11452:11469   */\n      dup3\n      eq\n        /* \"#utility.yul\":11449:11492   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":11472:11490   */\n      tag_336\n      tag_318\n      jump\t// in\n    tag_336:\n      pop\n        /* \"#utility.yul\":11519:11520   */\n      0x01\n        /* \"#utility.yul\":11508:11521   */\n      add\n      swap1\n        /* \"#utility.yul\":11392:11527   */\n      jump\t// out\n        /* \"#utility.yul\":11532:11644   */\n    tag_217:\n        /* \"#utility.yul\":11564:11565   */\n      0x00\n        /* \"#utility.yul\":11590:11591   */\n      dup3\n        /* \"#utility.yul\":11580:11615   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":11595:11613   */\n      tag_339\n      tag_322\n      jump\t// in\n    tag_339:\n      pop\n        /* \"#utility.yul\":11629:11638   */\n      mod\n      swap1\n        /* \"#utility.yul\":11532:11644   */\n      jump\t// out\n        /* \"#utility.yul\":11649:11776   */\n    tag_318:\n        /* \"#utility.yul\":11710:11720   */\n      0x4e487b71\n        /* \"#utility.yul\":11705:11708   */\n      0xe0\n        /* \"#utility.yul\":11701:11721   */\n      shl\n        /* \"#utility.yul\":11698:11699   */\n      0x00\n        /* \"#utility.yul\":11691:11722   */\n      mstore\n        /* \"#utility.yul\":11741:11745   */\n      0x11\n        /* \"#utility.yul\":11738:11739   */\n      0x04\n        /* \"#utility.yul\":11731:11746   */\n      mstore\n        /* \"#utility.yul\":11765:11769   */\n      0x24\n        /* \"#utility.yul\":11762:11763   */\n      0x00\n        /* \"#utility.yul\":11755:11770   */\n      revert\n        /* \"#utility.yul\":11781:11908   */\n    tag_322:\n        /* \"#utility.yul\":11842:11852   */\n      0x4e487b71\n        /* \"#utility.yul\":11837:11840   */\n      0xe0\n        /* \"#utility.yul\":11833:11853   */\n      shl\n        /* \"#utility.yul\":11830:11831   */\n      0x00\n        /* \"#utility.yul\":11823:11854   */\n      mstore\n        /* \"#utility.yul\":11873:11877   */\n      0x12\n        /* \"#utility.yul\":11870:11871   */\n      0x04\n        /* \"#utility.yul\":11863:11878   */\n      mstore\n        /* \"#utility.yul\":11897:11901   */\n      0x24\n        /* \"#utility.yul\":11894:11895   */\n      0x00\n        /* \"#utility.yul\":11887:11902   */\n      revert\n        /* \"#utility.yul\":11913:12040   */\n    tag_221:\n        /* \"#utility.yul\":11974:11984   */\n      0x4e487b71\n        /* \"#utility.yul\":11969:11972   */\n      0xe0\n        /* \"#utility.yul\":11965:11985   */\n      shl\n        /* \"#utility.yul\":11962:11963   */\n      0x00\n        /* \"#utility.yul\":11955:11986   */\n      mstore\n        /* \"#utility.yul\":12005:12009   */\n      0x32\n        /* \"#utility.yul\":12002:12003   */\n      0x04\n        /* \"#utility.yul\":11995:12010   */\n      mstore\n        /* \"#utility.yul\":12029:12033   */\n      0x24\n        /* \"#utility.yul\":12026:12027   */\n      0x00\n        /* \"#utility.yul\":12019:12034   */\n      revert\n        /* \"#utility.yul\":12045:12172   */\n    tag_211:\n        /* \"#utility.yul\":12106:12116   */\n      0x4e487b71\n        /* \"#utility.yul\":12101:12104   */\n      0xe0\n        /* \"#utility.yul\":12097:12117   */\n      shl\n        /* \"#utility.yul\":12094:12095   */\n      0x00\n        /* \"#utility.yul\":12087:12118   */\n      mstore\n        /* \"#utility.yul\":12137:12141   */\n      0x41\n        /* \"#utility.yul\":12134:12135   */\n      0x04\n        /* \"#utility.yul\":12127:12142   */\n      mstore\n        /* \"#utility.yul\":12161:12165   */\n      0x24\n        /* \"#utility.yul\":12158:12159   */\n      0x00\n        /* \"#utility.yul\":12151:12166   */\n      revert\n        /* \"#utility.yul\":12177:12308   */\n    tag_283:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":12251:12283   */\n      dup2\n      and\n        /* \"#utility.yul\":12241:12284   */\n      dup2\n      eq\n        /* \"#utility.yul\":12231:12302   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":12298:12299   */\n      0x00\n        /* \"#utility.yul\":12295:12296   */\n      dup1\n        /* \"#utility.yul\":12288:12300   */\n      revert\n        /* \"#utility.yul\":12231:12302   */\n    tag_345:\n        /* \"#utility.yul\":12177:12308   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bbf07818c6507ffc826353e6e2fc407707b739b2fc9f5e66a38d7dfc9826be6064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:12"
															},
															"nodeType": "YulIf",
															"src": "88:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:12"
															},
															"nodeType": "YulIf",
															"src": "221:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:12"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:12"
															},
															"nodeType": "YulIf",
															"src": "404:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:12"
															},
															"nodeType": "YulIf",
															"src": "566:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:12"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:12",
																"statements": []
															},
															"src": "647:133:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:12"
															},
															"nodeType": "YulIf",
															"src": "789:80:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:12",
														"type": ""
													}
												],
												"src": "14:885:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:12"
															},
															"nodeType": "YulIf",
															"src": "1032:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:12"
															},
															"nodeType": "YulIf",
															"src": "1169:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:12"
															},
															"nodeType": "YulIf",
															"src": "1342:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:12",
														"type": ""
													}
												],
												"src": "904:562:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:12"
															},
															"nodeType": "YulIf",
															"src": "1614:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:12"
															},
															"nodeType": "YulIf",
															"src": "1684:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:12",
														"type": ""
													}
												],
												"src": "1471:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14F1 CODESIZE SUB DUP1 PUSH3 0x14F1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x871 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x866 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E8 SWAP1 DUP5 SWAP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB23 DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2F DUP5 DUP5 DUP5 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB99 JUMPI DUP1 PUSH2 0xB83 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP2 POP PUSH2 0xB92 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBF3 PUSH1 0x1 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 PUSH1 0xA DUP7 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0xC0B SWAP1 PUSH1 0x30 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI PUSH2 0xC20 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC42 PUSH1 0xA DUP7 PUSH2 0x10F7 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD4 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD31 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB7 PUSH1 0x20 DUP5 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDE DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEC PUSH1 0x20 DUP6 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1B DUP6 PUSH2 0xD56 JUMP JUMPDEST SWAP4 POP PUSH2 0xE29 PUSH1 0x20 DUP7 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE73 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x11FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFE3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101F SWAP1 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x11B8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1106 JUMPI PUSH2 0x1106 PUSH2 0x11CE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x11B8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1125 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1162 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x119D JUMPI PUSH2 0x119D PUSH2 0x11B8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B3 JUMPI PUSH2 0x11B3 PUSH2 0x11CE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB CREATE PUSH25 0x18C6507FFC826353E6E2FC407707B739B2FC9F5E66A38D7DFC SWAP9 0x26 0xBE PUSH1 0x64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "613:13006:0:-:0;;;1375:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:0;;;;:7;;:17;;;;;:::i;:::-;;1375:113;;613:13006;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;613:13006:0;;;-1:-1:-1;613:13006:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:12;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:12;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:12;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:12:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:12;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;613:13006:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_724": {
									"entryPoint": 1860,
									"id": 724,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_829": {
									"entryPoint": null,
									"id": 829,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_818": {
									"entryPoint": 3145,
									"id": 818,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_479": {
									"entryPoint": 1970,
									"id": 479,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1428": {
									"entryPoint": null,
									"id": 1428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_420": {
									"entryPoint": 2840,
									"id": 420,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_756": {
									"entryPoint": 2633,
									"id": 756,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_700": {
									"entryPoint": 2217,
									"id": 700,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_259": {
									"entryPoint": 934,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_117": {
									"entryPoint": 1407,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_280": {
									"entryPoint": 780,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_315": {
									"entryPoint": null,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1139": {
									"entryPoint": null,
									"id": 1139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_155": {
									"entryPoint": 634,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_145": {
									"entryPoint": 1288,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_361": {
									"entryPoint": 1261,
									"id": 361,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_391": {
									"entryPoint": 1572,
									"id": 391,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_297": {
									"entryPoint": 1557,
									"id": 297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1738": {
									"entryPoint": null,
									"id": 1738,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 552,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_165": {
									"entryPoint": 1542,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1597": {
									"entryPoint": 2891,
									"id": 1597,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_207": {
									"entryPoint": 1628,
									"id": 207,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_342": {
									"entryPoint": 1212,
									"id": 342,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12310:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nodeType": "YulIf",
															"src": "111:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:12"
															},
															"nodeType": "YulIf",
															"src": "272:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:12",
														"type": ""
													}
												],
												"src": "192:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:12"
															},
															"nodeType": "YulIf",
															"src": "480:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:12",
														"type": ""
													}
												],
												"src": "383:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:12"
															},
															"nodeType": "YulIf",
															"src": "762:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:12",
														"type": ""
													}
												],
												"src": "648:328:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:1008:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1132:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:12"
															},
															"nodeType": "YulIf",
															"src": "1121:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1183:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1193:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1231:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1241:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1288:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1298:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1339:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1353:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1343:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1404:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1398:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1437:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1434:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:14:12"
															},
															"nodeType": "YulIf",
															"src": "1431:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1478:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1554:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1556:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1556:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1556:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1533:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1537:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:35:12"
															},
															"nodeType": "YulIf",
															"src": "1515:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1579:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1583:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1630:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1620:2:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:10:12"
															},
															"nodeType": "YulIf",
															"src": "1614:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1659:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1663:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1717:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1739:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1763:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1767:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1759:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1759:13:12"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1774:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1755:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1779:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1751:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:31:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1784:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1721:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1847:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1849:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1806:10:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1803:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1826:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1823:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1823:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1800:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:46:12"
															},
															"nodeType": "YulIf",
															"src": "1797:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1889:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1924:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1973:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1975:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1950:2:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1954:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1946:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1946:11:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1959:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1964:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1939:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:33:12"
															},
															"nodeType": "YulIf",
															"src": "1936:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2023:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2032:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:11:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2041:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1998:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2076:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2064:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2081:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:24:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2053:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2107:6:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1064:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1084:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1092:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1100:6:12",
														"type": ""
													}
												],
												"src": "981:1138:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2254:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:12"
															},
															"nodeType": "YulIf",
															"src": "2218:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2368:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2394:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2415:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2408:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2408:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2401:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2401:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2391:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:40:12"
															},
															"nodeType": "YulIf",
															"src": "2381:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2450:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2460:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:12",
														"type": ""
													}
												],
												"src": "2124:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2563:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2618:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2584:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:32:12"
															},
															"nodeType": "YulIf",
															"src": "2573:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2634:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2644:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2682:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2692:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2521:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2532:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2552:6:12",
														"type": ""
													}
												],
												"src": "2476:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:12"
															},
															"nodeType": "YulIf",
															"src": "2814:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2888:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2879:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2944:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2920:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2959:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2969:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2781:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:12",
														"type": ""
													}
												],
												"src": "2735:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3113:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:32:12"
															},
															"nodeType": "YulIf",
															"src": "3075:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3136:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3140:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3213:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3223:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3042:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3054:6:12",
														"type": ""
													}
												],
												"src": "2985:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3355:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3364:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3357:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3357:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:32:12"
															},
															"nodeType": "YulIf",
															"src": "3319:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3390:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3275:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3286:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3298:6:12",
														"type": ""
													}
												],
												"src": "3239:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:208:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3503:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3487:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3590:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3595:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3546:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:63:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:63:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3633:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3646:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3642:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3642:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3663:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3659:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3659:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3450:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3457:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3465:3:12",
														"type": ""
													}
												],
												"src": "3424:257:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3873:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3883:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3897:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3887:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3945:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3965:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3919:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3981:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3998:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "3985:5:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4019:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4041:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4035:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4023:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:17:12"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4105:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4057:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4134:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4141:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:20:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3846:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3854:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3865:3:12",
														"type": ""
													}
												],
												"src": "3686:470:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4284:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4272:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4314:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4345:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4350:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4341:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4341:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4354:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4325:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4325:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4307:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4231:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4242:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4253:4:12",
														"type": ""
													}
												],
												"src": "4161:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4605:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4586:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4627:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4642:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4650:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4620:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4694:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4690:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4690:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4726:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4737:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4722:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4722:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4780:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4758:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4835:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4846:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4806:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4798:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4517:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4528:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4536:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4544:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4552:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4563:4:12",
														"type": ""
													}
												],
												"src": "4369:488:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5009:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5034:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5027:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5020:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5020:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4926:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4937:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4948:4:12",
														"type": ""
													}
												],
												"src": "4862:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5175:98:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5192:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5215:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5223:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5215:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5144:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5155:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5166:4:12",
														"type": ""
													}
												],
												"src": "5054:219:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5469:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5480:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5462:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5503:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5514:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5499:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5519:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5492:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5492:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5553:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5538:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5538:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5558:34:12",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5531:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5531:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5613:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5624:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5609:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5609:18:12"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5629:20:12",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5602:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5602:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5659:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5671:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5659:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5429:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5443:4:12",
														"type": ""
													}
												],
												"src": "5278:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5871:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5888:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5899:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5881:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5881:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5922:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5933:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5911:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5961:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5972:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5977:34:12",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5950:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5950:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6048:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6064:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6076:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6087:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6072:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6064:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5848:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5862:4:12",
														"type": ""
													}
												],
												"src": "5697:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6276:175:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6293:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6286:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6327:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6338:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6323:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6343:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6316:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6316:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6366:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6377:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6362:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6362:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6382:27:12",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6355:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6355:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6419:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6431:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6442:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6427:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6427:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6419:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6253:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6267:4:12",
														"type": ""
													}
												],
												"src": "6102:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6630:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6647:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6640:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6681:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6692:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6677:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6677:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6697:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6670:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6720:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6731:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6716:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6716:18:12"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6736:34:12",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6709:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6709:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6709:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6802:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6787:18:12"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6807:14:12",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6780:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6780:42:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6831:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6843:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6854:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6839:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6831:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6607:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6621:4:12",
														"type": ""
													}
												],
												"src": "6456:408:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7043:246:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7060:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7071:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7053:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7053:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7053:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7094:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7105:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7110:2:12",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7083:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7083:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7133:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7144:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7129:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7149:34:12",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7122:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7122:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7204:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7215:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7200:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7200:18:12"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7220:26:12",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7193:54:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7256:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7268:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7264:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7256:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7020:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7034:4:12",
														"type": ""
													}
												],
												"src": "6869:420:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7468:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7485:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7496:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7478:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7519:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7530:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7515:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7515:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7535:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7508:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7558:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7569:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:18:12"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7574:34:12",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7547:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7547:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7629:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7640:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7625:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7625:18:12"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7645:12:12",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7618:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7618:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7667:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7679:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7690:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7667:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7445:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7459:4:12",
														"type": ""
													}
												],
												"src": "7294:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7879:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7896:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7907:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7889:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7889:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7941:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7919:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7969:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7980:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7965:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7965:18:12"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7985:34:12",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7958:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7958:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:12"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8056:11:12",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8029:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8077:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8089:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8100:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8085:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8085:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8077:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7856:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7870:4:12",
														"type": ""
													}
												],
												"src": "7705:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8289:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8306:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8317:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8299:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8299:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8340:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8351:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8336:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8336:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8329:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8329:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8379:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8390:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8375:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8375:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8395:34:12",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8368:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8368:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8450:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8461:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8446:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8446:18:12"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8466:14:12",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8439:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8439:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8439:42:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8490:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8502:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8513:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8498:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8498:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8490:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8266:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8280:4:12",
														"type": ""
													}
												],
												"src": "8115:408:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8702:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8719:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8730:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8712:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8712:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8753:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8764:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8749:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8749:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8769:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8742:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8742:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8792:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8803:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8788:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8788:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8808:34:12",
																		"type": "",
																		"value": "ERC721: transfer of token that i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8781:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8781:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8781:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8863:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8874:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8859:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8859:18:12"
																	},
																	{
																		"hexValue": "73206e6f74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8879:11:12",
																		"type": "",
																		"value": "s not own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8852:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8852:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8852:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8900:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8912:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8923:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8908:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8900:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8679:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8693:4:12",
														"type": ""
													}
												],
												"src": "8528:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9112:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9129:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9140:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9122:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9122:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9163:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9174:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9159:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9159:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9179:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9152:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9152:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9152:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9202:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9213:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9198:18:12"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9218:34:12",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9191:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9191:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9273:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9284:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9269:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9269:18:12"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9289:17:12",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9262:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9262:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9262:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9316:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9328:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9339:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9324:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9324:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9316:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9089:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9103:4:12",
														"type": ""
													}
												],
												"src": "8938:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9528:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9545:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9538:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9579:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9590:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9575:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9595:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9568:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9568:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9568:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9618:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9629:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9614:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9634:34:12",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9607:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9607:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9689:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9700:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9685:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9685:18:12"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9705:3:12",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9678:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9678:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9718:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9730:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9741:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9726:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9718:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9505:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9519:4:12",
														"type": ""
													}
												],
												"src": "9354:397:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9930:239:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9947:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9958:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9940:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9940:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9940:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9981:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9992:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9977:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9977:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9997:2:12",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9970:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10020:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10031:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10036:34:12",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10009:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10009:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10091:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10102:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10087:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10087:18:12"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10107:19:12",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10080:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10080:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10136:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10148:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10144:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10136:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9907:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9921:4:12",
														"type": ""
													}
												],
												"src": "9756:413:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10275:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10285:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10297:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10293:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10285:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10327:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10338:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10320:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10244:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10255:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10266:4:12",
														"type": ""
													}
												],
												"src": "10174:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10404:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10431:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10433:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10433:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10433:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10420:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10427:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10423:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10423:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10417:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10417:13:12"
															},
															"nodeType": "YulIf",
															"src": "10414:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10462:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10473:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10476:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10469:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10469:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10462:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10387:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10390:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10396:3:12",
														"type": ""
													}
												],
												"src": "10356:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10535:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10558:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10560:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10560:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10560:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10555:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10548:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:9:12"
															},
															"nodeType": "YulIf",
															"src": "10545:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10589:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10598:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10601:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10594:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10594:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10589:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10520:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10523:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10529:1:12",
														"type": ""
													}
												],
												"src": "10489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10663:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10685:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10687:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10687:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10687:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10679:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10682:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10676:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10676:8:12"
															},
															"nodeType": "YulIf",
															"src": "10673:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10716:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10728:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10731:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10716:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10645:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10648:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10654:4:12",
														"type": ""
													}
												],
												"src": "10614:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10797:205:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10807:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10816:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10811:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10876:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10901:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10906:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10897:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10897:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10920:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10925:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10916:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10916:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10910:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10910:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10890:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10890:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10890:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10837:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10840:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10834:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10848:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10850:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10859:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10855:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10850:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10830:3:12",
																"statements": []
															},
															"src": "10826:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10965:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10978:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10983:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10974:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10974:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10992:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10967:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10967:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10967:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10954:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10951:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10951:13:12"
															},
															"nodeType": "YulIf",
															"src": "10948:48:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10775:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10780:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10785:6:12",
														"type": ""
													}
												],
												"src": "10744:258:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11062:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11072:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11086:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11089:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11082:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11082:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11072:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11103:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11133:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11139:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11107:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11180:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11182:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11196:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11204:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11192:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11192:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11182:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11160:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11153:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11153:26:12"
															},
															"nodeType": "YulIf",
															"src": "11150:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11270:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11291:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11298:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11303:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11294:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11294:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11284:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11284:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11284:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11335:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11338:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11328:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11328:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11328:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11363:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11366:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11356:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11356:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11356:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11226:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11249:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11257:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11246:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11246:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11223:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11223:38:12"
															},
															"nodeType": "YulIf",
															"src": "11220:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11042:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11051:6:12",
														"type": ""
													}
												],
												"src": "11007:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11439:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11470:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11472:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11472:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11472:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11455:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11466:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11462:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11462:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11452:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11452:17:12"
															},
															"nodeType": "YulIf",
															"src": "11449:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11501:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11512:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11519:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11501:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11421:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11431:3:12",
														"type": ""
													}
												],
												"src": "11392:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11570:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11593:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11595:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11595:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11595:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11590:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11583:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:9:12"
															},
															"nodeType": "YulIf",
															"src": "11580:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11624:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11633:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11636:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11629:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11624:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11555:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11558:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11564:1:12",
														"type": ""
													}
												],
												"src": "11532:112:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11681:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11698:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11705:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11710:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11701:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11701:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11691:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11691:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11691:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11738:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11741:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11731:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11731:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11762:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11765:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11755:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11755:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11755:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11649:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11813:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11830:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11837:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11842:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11823:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11823:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11870:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11873:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11863:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11863:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11863:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11894:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11887:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11887:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11887:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11781:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11945:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11962:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11969:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11965:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11965:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11955:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11955:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12002:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12005:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12026:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12029:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12019:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12019:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12019:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11913:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12077:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12094:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12101:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12106:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12097:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12097:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12087:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12087:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12087:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12137:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12127:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12127:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12158:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12161:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12151:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12151:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12045:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12221:87:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12286:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12295:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12298:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12288:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12288:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12288:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12244:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12255:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12266:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12271:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12262:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12262:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12251:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12251:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12241:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12241:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12234:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12234:51:12"
															},
															"nodeType": "YulIf",
															"src": "12231:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12210:5:12",
														"type": ""
													}
												],
												"src": "12177:131:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x871 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x866 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E8 SWAP1 DUP5 SWAP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB23 DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2F DUP5 DUP5 DUP5 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB99 JUMPI DUP1 PUSH2 0xB83 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP2 POP PUSH2 0xB92 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBF3 PUSH1 0x1 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 PUSH1 0xA DUP7 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0xC0B SWAP1 PUSH1 0x30 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI PUSH2 0xC20 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC42 PUSH1 0xA DUP7 PUSH2 0x10F7 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD4 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD31 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB7 PUSH1 0x20 DUP5 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDE DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEC PUSH1 0x20 DUP6 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1B DUP6 PUSH2 0xD56 JUMP JUMPDEST SWAP4 POP PUSH2 0xE29 PUSH1 0x20 DUP7 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE73 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x11FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFE3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101F SWAP1 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x11B8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1106 JUMPI PUSH2 0x1106 PUSH2 0x11CE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x11B8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1125 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1162 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x119D JUMPI PUSH2 0x119D PUSH2 0x11B8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B3 JUMPI PUSH2 0x11B3 PUSH2 0x11CE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB CREATE PUSH25 0x18C6507FFC826353E6E2FC407707B739B2FC9F5E66A38D7DFC SWAP9 0x26 0xBE PUSH1 0x64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "613:13006:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:300;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:12;;5020:22;5002:41;;4990:2;4975:18;1555:300:0;;;;;;;;2473:98;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:12;;;4307:51;;4295:2;4280:18;3984:217:0;4161:203:12;3522:401:0;;;;;;:::i;:::-;;:::i;:::-;;4711:330;;;;;;:::i;:::-;;:::i;5107:179::-;;;;;;:::i;:::-;;:::i;2176:235::-;;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;:::i;:::-;;:::i;:::-;;;10320:25:12;;;10308:2;10293:18;1914:205:0;10174:177:12;2635:102:0;;;:::i;4268:153::-;;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;:::i;:::-;;:::i;2803:329::-;;;;;;:::i;:::-;;:::i;4487:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:0;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;1555:300;1657:4;-1:-1:-1;;;;;;1692:40:0;;-1:-1:-1;;;1692:40:0;;:104;;-1:-1:-1;;;;;;;1748:48:0;;-1:-1:-1;;;1748:48:0;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1812:36:0;1673:175;1555:300;-1:-1:-1;;1555:300:0:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:0;4079:73;;;;-1:-1:-1;;;4079:73:0;;8317:2:12;4079:73:0;;;8299:21:12;8356:2;8336:18;;;8329:30;8395:34;8375:18;;;8368:62;-1:-1:-1;;;8446:18:12;;;8439:42;8498:19;;4079:73:0;;;;;;;;;-1:-1:-1;4170:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:0;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:0;:2;-1:-1:-1;;;;;3659:11:0;;;3651:57;;;;-1:-1:-1;;;3651:57:0;;9556:2:12;3651:57:0;;;9538:21:12;9595:2;9575:18;;;9568:30;9634:34;9614:18;;;9607:62;-1:-1:-1;;;9685:18:12;;;9678:31;9726:19;;3651:57:0;9354:397:12;3651:57:0;719:10:6;-1:-1:-1;;;;;3740:21:0;;;;:62;;-1:-1:-1;3765:37:0;3782:5;719:10:6;4487:162:0;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:0;;7071:2:12;3719:165:0;;;7053:21:12;7110:2;7090:18;;;7083:30;7149:34;7129:18;;;7122:62;7220:26;7200:18;;;7193:54;7264:19;;3719:165:0;6869:420:12;3719:165:0;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;4711:330::-;4900:41;719:10:6;4933:7:0;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:0;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5107:179::-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;2176:235::-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:0;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:0;;7907:2:12;2309:73:0;;;7889:21:12;7946:2;7926:18;;;7919:30;7985:34;7965:18;;;7958:62;-1:-1:-1;;;8036:18:12;;;8029:39;8085:19;;2309:73:0;7705:405:12;1914:205:0;1986:7;-1:-1:-1;;;;;2013:19:0;;2005:74;;;;-1:-1:-1;;;2005:74:0;;7496:2:12;2005:74:0;;;7478:21:12;7535:2;7515:18;;;7508:30;7574:34;7554:18;;;7547:62;-1:-1:-1;;;7625:18:12;;;7618:40;7675:19;;2005:74:0;7294:406:12;2005:74:0;-1:-1:-1;;;;;;2096:16:0;;;;;:9;:16;;;;;;;1914:205::o;2635:102::-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:6;4395:8:0;4405;4362:18;:52::i;:::-;4268:153;;:::o;5352:320::-;5521:41;719:10:6;5554:7:0;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:0;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;2803:329::-;7209:4;7232:16;;;:7;:16;;;;;;2876:13;;-1:-1:-1;;;;;7232:16:0;2901:76;;;;-1:-1:-1;;;2901:76:0;;9140:2:12;2901:76:0;;;9122:21:12;9179:2;9159:18;;;9152:30;9218:34;9198:18;;;9191:62;-1:-1:-1;;;9269:18:12;;;9262:45;9324:19;;2901:76:0;8938:411:12;2901:76:0;2988:21;3012:10;3449:9;;;;;;;;;-1:-1:-1;3449:9:0;;;3373:92;3012:10;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3039:86;3032:93;2803:329;-1:-1:-1;;;2803:329:0:o;10995:171::-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:0;-1:-1:-1;;;;;11069:29:0;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:0;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:0;7536:73;;;;-1:-1:-1;;;7536:73:0;;6658:2:12;7536:73:0;;;6640:21:12;6697:2;6677:18;;;6670:30;6736:34;6716:18;;;6709:62;-1:-1:-1;;;6787:18:12;;;6780:42;6839:19;;7536:73:0;6456:408:12;7536:73:0;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:0;:7;-1:-1:-1;;;;;7676:16:0;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:0;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:0;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:0;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:0:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:0;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:0;;10443:85;;;;-1:-1:-1;;;10443:85:0;;8730:2:12;10443:85:0;;;8712:21:12;8769:2;8749:18;;;8742:30;8808:34;8788:18;;;8781:62;-1:-1:-1;;;8859:18:12;;;8852:39;8908:19;;10443:85:0;8528:405:12;10443:85:0;-1:-1:-1;;;;;10546:16:0;;10538:65;;;;-1:-1:-1;;;10538:65:0;;5899:2:12;10538:65:0;;;5881:21:12;5938:2;5918:18;;;5911:30;5977:34;5957:18;;;5950:62;-1:-1:-1;;;6028:18:12;;;6021:34;6072:19;;10538:65:0;5697:400:12;10538:65:0;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:0;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:0;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:0;-1:-1:-1;;;;;10813:21:0;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;11301:307::-;11451:8;-1:-1:-1;;;;;11442:17:0;:5;-1:-1:-1;;;;;11442:17:0;;;11434:55;;;;-1:-1:-1;;;11434:55:0;;6304:2:12;11434:55:0;;;6286:21:12;6343:2;6323:18;;;6316:30;6382:27;6362:18;;;6355:55;6427:18;;11434:55:0;6102:349:12;11434:55:0;-1:-1:-1;;;;;11499:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:0;;;;;;;;;;11560:41;;5002::12;;;11560::0;;4975:18:12;11560:41:0;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:0;;;;;;;:::i;328:703:8:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:8;;;;;;;;;;;;-1:-1:-1;;;627:10:8;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:8;;-1:-1:-1;773:2:8;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:8;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:8;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:8;;;;;;;;-1:-1:-1;972:11:8;981:2;972:11;;:::i;:::-;;;844:150;;12161:778:0;12311:4;-1:-1:-1;;;;;12331:13:0;;1087:20:5;1133:8;12327:606:0;;12366:72;;-1:-1:-1;;;12366:72:0;;-1:-1:-1;;;;;12366:36:0;;;;;:72;;719:10:6;;12417:4:0;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:0;;;;;;;;-1:-1:-1;;12366:72:0;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:0;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:0;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:0;-1:-1:-1;;;12488:51:0;;-1:-1:-1;12481:58:0;;12327:606;-1:-1:-1;12918:4:0;12161:778;;;;;;:::o;14:173:12:-;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:12;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:12:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:12;;3239:180;-1:-1:-1;3239:180:12:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:12;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:12:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3686:470;-1:-1:-1;;;;3686:470:12:o;4369:488::-;-1:-1:-1;;;;;4638:15:12;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4369:488;-1:-1:-1;;;;;;4369:488:12:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5278:414::-;5480:2;5462:21;;;5519:2;5499:18;;;5492:30;5558:34;5553:2;5538:18;;5531:62;-1:-1:-1;;;5624:2:12;5609:18;;5602:48;5682:3;5667:19;;5278:414::o;9756:413::-;9958:2;9940:21;;;9997:2;9977:18;;;9970:30;10036:34;10031:2;10016:18;;10009:62;-1:-1:-1;;;10102:2:12;10087:18;;10080:47;10159:3;10144:19;;9756:413::o;10356:128::-;10396:3;10427:1;10423:6;10420:1;10417:13;10414:39;;;10433:18;;:::i;:::-;-1:-1:-1;10469:9:12;;10356:128::o;10489:120::-;10529:1;10555;10545:35;;10560:18;;:::i;:::-;-1:-1:-1;10594:9:12;;10489:120::o;10614:125::-;10654:4;10682:1;10679;10676:8;10673:34;;;10687:18;;:::i;:::-;-1:-1:-1;10724:9:12;;10614:125::o;10744:258::-;10816:1;10826:113;10840:6;10837:1;10834:13;10826:113;;;10916:11;;;10910:18;10897:11;;;10890:39;10862:2;10855:10;10826:113;;;10957:6;10954:1;10951:13;10948:48;;;-1:-1:-1;;10992:1:12;10974:16;;10967:27;10744:258::o;11007:380::-;11086:1;11082:12;;;;11129;;;11150:61;;11204:4;11196:6;11192:17;11182:27;;11150:61;11257:2;11249:6;11246:14;11226:18;11223:38;11220:161;;;11303:10;11298:3;11294:20;11291:1;11284:31;11338:4;11335:1;11328:15;11366:4;11363:1;11356:15;11220:161;;11007:380;;;:::o;11392:135::-;11431:3;-1:-1:-1;;11452:17:12;;11449:43;;;11472:18;;:::i;:::-;-1:-1:-1;11519:1:12;11508:13;;11392:135::o;11532:112::-;11564:1;11590;11580:35;;11595:18;;:::i;:::-;-1:-1:-1;11629:9:12;;11532:112::o;11649:127::-;11710:10;11705:3;11701:20;11698:1;11691:31;11741:4;11738:1;11731:15;11765:4;11762:1;11755:15;11781:127;11842:10;11837:3;11833:20;11830:1;11823:31;11873:4;11870:1;11863:15;11897:4;11894:1;11887:15;11913:127;11974:10;11969:3;11965:20;11962:1;11955:31;12005:4;12002:1;11995:15;12029:4;12026:1;12019:15;12045:127;12106:10;12101:3;12097:20;12094:1;12087:31;12137:4;12134:1;12127:15;12161:4;12158:1;12151:15;12177:131;-1:-1:-1;;;;;;12251:32:12;;12241:43;;12231:71;;12298:1;12295;12288:12;12231:71;12177:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "940600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4737",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2579",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1446,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1441,
									"end": 1446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1471,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1464,
									"end": 1471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 13619,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbf07818c6507ffc826353e6e2fc407707b739b2fc9f5e66a38d7dfc9826be6064736f6c63430008070033",
									".code": [
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 13619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5042,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4161,
											"end": 4364,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10174,
											"end": 10351,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1692,
											"end": 1848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1848,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1812,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1848,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8299,
											"end": 8320,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8329,
											"end": 8359,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8395,
											"end": 8429,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8368,
											"end": 8430,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8439,
											"end": 8481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8517,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8498,
											"end": 8517,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9556,
											"end": 9558,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9595,
											"end": 9597,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 9575,
											"end": 9593,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9575,
											"end": 9593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9575,
											"end": 9593,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9598,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9634,
											"end": 9668,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9669,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9709,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9726,
											"end": 9745,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9726,
											"end": 9745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9354,
											"end": 9751,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3740,
											"end": 3802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3782,
											"end": 3787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3802,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3765,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7071,
											"end": 7073,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7074,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7110,
											"end": 7112,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7083,
											"end": 7113,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7183,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7122,
											"end": 7184,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "PUSH",
											"source": 12,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7193,
											"end": 7247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7264,
											"end": 7283,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7264,
											"end": 7283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6869,
											"end": 7289,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5016,
											"end": 5020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5022,
											"end": 5024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5026,
											"end": 5033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5006,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7889,
											"end": 7910,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7919,
											"end": 7949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7985,
											"end": 8019,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7958,
											"end": 8020,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8029,
											"end": 8068,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8104,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8085,
											"end": 8104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7705,
											"end": 8110,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7498,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7499,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7535,
											"end": 7537,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7508,
											"end": 7538,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7574,
											"end": 7608,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7547,
											"end": 7609,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 7658,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7294,
											"end": 7700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2704,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2723,
											"end": 2730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4405,
											"end": 4413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5640,
											"end": 5644,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5650,
											"end": 5657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9140,
											"end": 9142,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9143,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9179,
											"end": 9181,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9182,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9218,
											"end": 9252,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 9198,
											"end": 9216,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9198,
											"end": 9216,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9198,
											"end": 9216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9253,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9262,
											"end": 9307,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9324,
											"end": 9343,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9324,
											"end": 9343,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8938,
											"end": 9349,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3064,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3100,
											"end": 3107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3125,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7427,
											"end": 7771,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7427,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6658,
											"end": 6660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6661,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6697,
											"end": 6699,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6670,
											"end": 6700,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6770,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6822,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6858,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6839,
											"end": 6858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6456,
											"end": 6864,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7676,
											"end": 7692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7676,
											"end": 7692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7720,
											"end": 7727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7696,
											"end": 7727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7708,
											"end": 7715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7696,
											"end": 7727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7676,
											"end": 7763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7731,
											"end": 7763,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7731,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7764,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7427,
											"end": 7771,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7427,
											"end": 7771,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10478,
											"end": 10482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10451,
											"end": 10482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10466,
											"end": 10473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10451,
											"end": 10482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8733,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8771,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8742,
											"end": 8772,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8808,
											"end": 8842,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8781,
											"end": 8843,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39903737BA1037BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8852,
											"end": 8891,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8908,
											"end": 8927,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8908,
											"end": 8927,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8528,
											"end": 8933,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10546,
											"end": 10562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5899,
											"end": 5901,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5940,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5950,
											"end": 6012,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5697,
											"end": 6097,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11451,
											"end": 11459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11442,
											"end": 11447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6306,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6286,
											"end": 6307,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6343,
											"end": 6345,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6346,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6409,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6355,
											"end": 6410,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6102,
											"end": 6451,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11517,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6534,
											"end": 6841,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6534,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6695,
											"end": 6699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6762,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6764,
											"end": 6771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 6778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12331,
											"end": 12344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12423,
											"end": 12430,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12423,
											"end": 12430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12432,
											"end": 12437,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12432,
											"end": 12437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12605,
											"end": 12618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12605,
											"end": 12618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12819,
											"end": 12825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12800,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12796,
											"end": 12811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12539,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12488,
											"end": 12539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12481,
											"end": 12539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 12481,
											"end": 12539,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1484,
											"end": 1506,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1552,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1589,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1673,
											"end": 1675,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 1751,
											"end": 1782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1846,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1900,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1927,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1939,
											"end": 1972,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2026,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2088,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2422,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2591,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3078,
											"end": 3110,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3528,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3537,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3953,
											"end": 3957,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4788,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4798,
											"end": 4851,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5205,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5185,
											"end": 5206,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5519,
											"end": 5521,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5522,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5558,
											"end": 5592,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5538,
											"end": 5556,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5531,
											"end": 5593,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5602,
											"end": 5650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5685,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9756,
											"end": 10169,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 9756,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9958,
											"end": 9960,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9940,
											"end": 9961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 9999,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9970,
											"end": 10000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 10031,
											"end": 10033,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10071,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10102,
											"end": 10104,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10080,
											"end": 10127,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10159,
											"end": 10162,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9756,
											"end": 10169,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10356,
											"end": 10484,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 10356,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10396,
											"end": 10399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10428,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10423,
											"end": 10429,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10421,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10430,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10414,
											"end": 10453,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10414,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 10414,
											"end": 10453,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10356,
											"end": 10484,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10489,
											"end": 10609,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 10489,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10545,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 10545,
											"end": 10580,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10609,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10614,
											"end": 10739,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 10614,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10654,
											"end": 10658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10682,
											"end": 10683,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10679,
											"end": 10680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10676,
											"end": 10684,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10673,
											"end": 10707,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10673,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 10673,
											"end": 10707,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 10739,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10744,
											"end": 11002,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 10744,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 10817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10837,
											"end": 10838,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10834,
											"end": 10847,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10916,
											"end": 10927,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10916,
											"end": 10927,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10916,
											"end": 10927,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10897,
											"end": 10908,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10897,
											"end": 10908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10897,
											"end": 10908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10929,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10864,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10855,
											"end": 10865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 10963,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10954,
											"end": 10955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10951,
											"end": 10964,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10948,
											"end": 10996,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10948,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 10948,
											"end": 10996,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 10990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10974,
											"end": 10990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10967,
											"end": 10994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10744,
											"end": 11002,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11204,
											"end": 11208,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 11196,
											"end": 11202,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11192,
											"end": 11209,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11182,
											"end": 11209,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11182,
											"end": 11209,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11259,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11249,
											"end": 11255,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11246,
											"end": 11260,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11223,
											"end": 11261,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11303,
											"end": 11313,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11298,
											"end": 11301,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11294,
											"end": 11314,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11284,
											"end": 11315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11338,
											"end": 11342,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 11335,
											"end": 11336,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11328,
											"end": 11343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11370,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11363,
											"end": 11364,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11356,
											"end": 11371,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11392,
											"end": 11527,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 11392,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11452,
											"end": 11469,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11452,
											"end": 11469,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11492,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11449,
											"end": 11492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11519,
											"end": 11520,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11508,
											"end": 11521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11508,
											"end": 11521,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11392,
											"end": 11527,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11532,
											"end": 11644,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 11532,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11580,
											"end": 11615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 11580,
											"end": 11615,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11629,
											"end": 11638,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 11629,
											"end": 11638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11644,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11649,
											"end": 11776,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 11649,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11720,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11705,
											"end": 11708,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11701,
											"end": 11721,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 11722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11741,
											"end": 11745,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 11738,
											"end": 11739,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11731,
											"end": 11746,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11762,
											"end": 11763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11770,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11781,
											"end": 11908,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 11781,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11842,
											"end": 11852,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11837,
											"end": 11840,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11854,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11873,
											"end": 11877,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11870,
											"end": 11871,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11863,
											"end": 11878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 11901,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11894,
											"end": 11895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11902,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11913,
											"end": 12040,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 11913,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 11984,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11969,
											"end": 11972,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11965,
											"end": 11985,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12005,
											"end": 12009,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 12002,
											"end": 12003,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11995,
											"end": 12010,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12029,
											"end": 12033,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12026,
											"end": 12027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12019,
											"end": 12034,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12045,
											"end": 12172,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 12045,
											"end": 12172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12106,
											"end": 12116,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 12101,
											"end": 12104,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 12097,
											"end": 12117,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12094,
											"end": 12095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12087,
											"end": 12118,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12141,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12127,
											"end": 12142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12161,
											"end": 12165,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12158,
											"end": 12159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12151,
											"end": 12166,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12251,
											"end": 12283,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12251,
											"end": 12283,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12241,
											"end": 12284,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12241,
											"end": 12284,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 977,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cbaeb888f7f8cd2d9636310d64c48d7b45902873fbd7192cb17c52d6932bf1964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cbaeb888f7f8cd2d9636310d64c48d7b45902873fbd7192cb17c52d6932bf1964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xBA 0xEB DUP9 DUP16 PUSH32 0x8CD2D9636310D64C48D7B45902873FBD7192CB17C52D6932BF1964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cbaeb888f7f8cd2d9636310d64c48d7b45902873fbd7192cb17c52d6932bf1964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xBA 0xEB DUP9 DUP16 PUSH32 0x8CD2D9636310D64C48D7B45902873FBD7192CB17C52D6932BF1964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cbaeb888f7f8cd2d9636310d64c48d7b45902873fbd7192cb17c52d6932bf1964736f6c63430008070033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xEB PUSH20 0x8E0A5A287EE8EA71FAB68F385E674F509F1F4835 0x2E SLT JUMP ADDMOD PUSH3 0x58B31D DUP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "424:971:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xEB PUSH20 0x8E0A5A287EE8EA71FAB68F385E674F509F1F4835 0x2E SLT JUMP ADDMOD PUSH3 0x58B31D DUP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "424:971:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031eb738e0a5a287ee8ea71fab68f385e674f509f1f48352e1256086258b31d8764736f6c63430008070033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xC4 COINBASE 0xF EQ 0xC9 SGT DELEGATECALL 0xBD SWAP15 CODECOPY 0xCF 0xD4 PUSH20 0x5CA5A997CB1D168663F6B238BD5ADFF95864736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "146:1885:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xC4 COINBASE 0xF EQ 0xC9 SGT DELEGATECALL 0xBD SWAP15 CODECOPY 0xCF 0xD4 PUSH20 0x5CA5A997CB1D168663F6B238BD5ADFF95864736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "146:1885:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WavyNFT.sol": {
				"WavyNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "awardItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WavyNFT.sol\":198:885  contract WavyNFT is ERC721URIStorage {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WavyNFT.sol\":359:409  constructor() ERC721(\"WavyNFT\", \"WAVY\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1375:1488  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup2\n  mstore\n  shl(0xca, 0x15d85d9e539195)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x04\n  dup5\n  mstore\n  shl(0xe0, 0x57415659)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1441:1454  _name = name_ */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1375:1488  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1441:1454  _name = name_ */\n  tag_5\n  swap2\n  0x00\n  swap2\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1481  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1471  _symbol */\n  0x01\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1481  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1375:1488  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/WavyNFT.sol\":198:885  contract WavyNFT is ERC721URIStorage {\r... */\n  jump(tag_21)\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:394   */\ntag_11:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_23:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_24:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_21:\n    /* \"contracts/WavyNFT.sol\":198:885  contract WavyNFT is ERC721URIStorage {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WavyNFT.sol\":198:885  contract WavyNFT is ERC721URIStorage {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcf378343\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":5720:5734   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5713:5735   */\n      iszero\n        /* \"#utility.yul\":5695:5736   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5683:5685   */\n      0x20\n        /* \"#utility.yul\":5668:5686   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2473:2571  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5018:5050   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5000:5051   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":4854:5057   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3522:3923  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4711:5041  function transferFrom(... */\n    tag_7:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5107:5286  function safeTransferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2176:2411  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":12564:12589   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":12552:12554   */\n      0x20\n        /* \"#utility.yul\":12537:12555   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":12418:12595   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2635:2737  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_26\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4268:4421  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_36\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5672  function safeTransferFrom(... */\n    tag_13:\n      tag_36\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_26\n      tag_69\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts/WavyNFT.sol\":452:882  function awardItem(address addr, string memory tokenURI) public returns (uint256)\r... */\n    tag_15:\n      tag_51\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4649  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4584:4588  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4625  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4642  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4649  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1657:1661  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1732  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1796  interfaceId == type(IERC721).interfaceId ||... */\n      tag_83\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1748:1796  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1796  interfaceId == type(IERC721).interfaceId ||... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1692:1848  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_85\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1812:1848  super.supportsInterface(interfaceId) */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1673:1848  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1555:1855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2473:2571  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2527:2540  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2559:2564  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2552:2564  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2473:2571  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4060:4067  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4087:4103  _exists(tokenId) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4102  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4087:4094  _exists */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4087:4103  _exists(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4079:4152  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10561:10563   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4079:4152  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10543:10564   */\n      mstore\n        /* \"#utility.yul\":10600:10602   */\n      0x2c\n        /* \"#utility.yul\":10580:10598   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10573:10603   */\n      mstore\n        /* \"#utility.yul\":10639:10673   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":10619:10637   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10612:10674   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10690:10708   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10683:10725   */\n      mstore\n        /* \"#utility.yul\":10742:10761   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4079:4152  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4170:4194  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4170:4185  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4170:4194  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3984:4201  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3522:3923  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3602:3615  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3641  ERC721.ownerOf(tokenId) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3633:3640  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3632  ERC721.ownerOf */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3641  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3602:3641  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3670  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3659:3670  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3659:3661  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3659:3670  to != owner */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11800:11802   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11782:11803   */\n      mstore\n        /* \"#utility.yul\":11839:11841   */\n      0x21\n        /* \"#utility.yul\":11819:11837   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11812:11842   */\n      mstore\n        /* \"#utility.yul\":11878:11912   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11858:11876   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11851:11913   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":11929:11947   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11922:11953   */\n      mstore\n        /* \"#utility.yul\":11970:11989   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_98\n        /* \"#utility.yul\":11598:11995   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3651:3708  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3740:3761  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3740:3802  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_108\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3765:3802  isApprovedForAll(owner, _msgSender()) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3782:3787  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4649  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3765:3802  isApprovedForAll(owner, _msgSender()) */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8121:8123   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8103:8124   */\n      mstore\n        /* \"#utility.yul\":8160:8162   */\n      0x38\n        /* \"#utility.yul\":8140:8158   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8133:8163   */\n      mstore\n        /* \"#utility.yul\":8199:8233   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":8179:8197   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8172:8234   */\n      mstore\n        /* \"#utility.yul\":8270:8296   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":8250:8268   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8243:8297   */\n      mstore\n        /* \"#utility.yul\":8314:8333   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n      tag_98\n        /* \"#utility.yul\":7919:8339   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3884  require(... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3895:3916  _approve(to, tokenId) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3904:3906  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3908:3915  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3895:3903  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3895:3916  _approve(to, tokenId) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3592:3923  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3522:3923  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4711:5041  function transferFrom(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4941  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_116\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4933:4940  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4918  _isApprovedOrOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4941  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4892:4995  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_121\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5006:5034  _transfer(from, to, tokenId) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5016:5020  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5026:5033  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5006:5015  _transfer */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5006:5034  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5107:5286  function safeTransferFrom(... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5279  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5261  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5263:5265  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5267:5274  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5279  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5256  safeTransferFrom */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5240:5279  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2176:2411  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2283:2299  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2283:2290  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2283:2299  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2317:2336  owner != address(0) */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2309:2382  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8957:8959   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2309:2382  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8939:8960   */\n      mstore\n        /* \"#utility.yul\":8996:8998   */\n      0x29\n        /* \"#utility.yul\":8976:8994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8969:8999   */\n      mstore\n        /* \"#utility.yul\":9035:9069   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":9015:9033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9008:9070   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9086:9104   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9079:9118   */\n      mstore\n        /* \"#utility.yul\":9135:9154   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2309:2382  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_98\n        /* \"#utility.yul\":8755:9160   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1986:1993  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2013:2032  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8546:8548   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8528:8549   */\n      mstore\n        /* \"#utility.yul\":8585:8587   */\n      0x2a\n        /* \"#utility.yul\":8565:8583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8558:8588   */\n      mstore\n        /* \"#utility.yul\":8624:8658   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":8604:8622   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8597:8659   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":8675:8693   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8668:8708   */\n      mstore\n        /* \"#utility.yul\":8725:8744   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_98\n        /* \"#utility.yul\":8344:8750   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2079  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_131:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2096:2112  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2096:2105  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2096:2112  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1914:2119  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2635:2737  function symbol() public view virtual override returns (string memory) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2691:2704  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2723:2730  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2716:2730  return _symbol */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4268:4421  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4362:4414  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_141\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4395:4403  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4405:4413  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4362:4380  _setApprovalForAll */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4362:4414  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4268:4421  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5672  function safeTransferFrom(... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5521:5562  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_145\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5554:5561  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5521:5539  _isApprovedOrOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5521:5562  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5513:5616  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_121\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5626:5665  _safeTransfer(from, to, tokenId, _data) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5640:5644  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5646:5648  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5650:5657  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5659:5664  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5626:5639  _safeTransfer */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5626:5665  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5672  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":540:553  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:589  _exists(tokenId) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":581:588  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:580  _exists */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:589  _exists(tokenId) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10143:10145   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10125:10146   */\n      mstore\n        /* \"#utility.yul\":10182:10184   */\n      0x31\n        /* \"#utility.yul\":10162:10180   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10155:10185   */\n      mstore\n        /* \"#utility.yul\":10221:10255   */\n      0x45524337323155524953746f726167653a2055524920717565727920666f7220\n        /* \"#utility.yul\":10201:10219   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10194:10256   */\n      mstore\n      shl(0x79, 0x3737b732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10272:10290   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10265:10312   */\n      mstore\n        /* \"#utility.yul\":10329:10348   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_98\n        /* \"#utility.yul\":9941:10354   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":654:677  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:699  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:690  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:699  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":654:699  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_89\n      jump\t// in\n    tag_156:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_89\n      jump\t// in\n    tag_157:\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_159\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_158)\n    tag_159:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_160:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_160\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":709:727  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":730:740  _baseURI() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3449:3458  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3373:3465  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":730:740  _baseURI() */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":709:740  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":819:823  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":813:831  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":835:836  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":813:836  bytes(base).length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":809:879  if (bytes(base).length == 0) {... */\n      iszero\n      tag_163\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":859:868  _tokenURI */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":809:879  if (bytes(base).length == 0) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":981:1004  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":981:1008  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":977:1083  if (bytes(_tokenURI).length > 0) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1059  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1070  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1038:1071  abi.encodePacked(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1024:1072  return string(abi.encodePacked(base, _tokenURI)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":977:1083  if (bytes(_tokenURI).length > 0) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1123  super.tokenURI(tokenId) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1115:1122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1114  super.tokenURI */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1123  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1093:1123  return super.tokenURI(tokenId) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WavyNFT.sol\":452:882  function awardItem(address addr, string memory tokenURI) public returns (uint256)\r... */\n    tag_75:\n        /* \"contracts/WavyNFT.sol\":525:532  uint256 */\n      0x00\n        /* \"contracts/WavyNFT.sol\":581:602  _tokenIds.increment() */\n      tag_170\n        /* \"contracts/WavyNFT.sol\":581:590  _tokenIds */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/WavyNFT.sol\":581:602  _tokenIds.increment() */\n    tag_170:\n        /* \"contracts/WavyNFT.sol\":647:664  uint256 newItemId */\n      0x00\n        /* \"contracts/WavyNFT.sol\":667:686  _tokenIds.current() */\n      tag_172\n        /* \"contracts/WavyNFT.sol\":667:676  _tokenIds */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/WavyNFT.sol\":667:686  _tokenIds.current() */\n    tag_172:\n        /* \"contracts/WavyNFT.sol\":647:686  uint256 newItemId = _tokenIds.current() */\n      swap1\n      pop\n        /* \"contracts/WavyNFT.sol\":737:759  _mint(addr, newItemId) */\n      tag_174\n        /* \"contracts/WavyNFT.sol\":743:747  addr */\n      dup5\n        /* \"contracts/WavyNFT.sol\":749:758  newItemId */\n      dup3\n        /* \"contracts/WavyNFT.sol\":737:742  _mint */\n      tag_175\n        /* \"contracts/WavyNFT.sol\":737:759  _mint(addr, newItemId) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/WavyNFT.sol\":812:845  _setTokenURI(newItemId, tokenURI) */\n      tag_176\n        /* \"contracts/WavyNFT.sol\":825:834  newItemId */\n      dup2\n        /* \"contracts/WavyNFT.sol\":836:844  tokenURI */\n      dup5\n        /* \"contracts/WavyNFT.sol\":812:824  _setTokenURI */\n      tag_177\n        /* \"contracts/WavyNFT.sol\":812:845  _setTokenURI(newItemId, tokenURI) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/WavyNFT.sol\":865:874  newItemId */\n      swap4\n        /* \"contracts/WavyNFT.sol\":452:882  function awardItem(address addr, string memory tokenURI) public returns (uint256)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7144:7269  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7209:7213  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7239  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7248  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7232:7262  _owners[tokenId] != address(0) */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7144:7269  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10995:11166  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11084  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11098  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11122:11145  ERC721.ownerOf(tokenId) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11069:11093  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11122:11136  ERC721.ownerOf */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11122:11145  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11113:11159  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10995:11166  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7427:7771  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7520:7524  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7560  _exists(tokenId) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7559  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7551  _exists */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7560  _exists(tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7708:7710   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7690:7711   */\n      mstore\n        /* \"#utility.yul\":7747:7749   */\n      0x2c\n        /* \"#utility.yul\":7727:7745   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7720:7750   */\n      mstore\n        /* \"#utility.yul\":7786:7820   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":7766:7784   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7759:7821   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7837:7855   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7830:7872   */\n      mstore\n        /* \"#utility.yul\":7889:7908   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_98\n        /* \"#utility.yul\":7506:7914   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7609  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7619:7632  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7658  ERC721.ownerOf(tokenId) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7649  ERC721.ownerOf */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7658  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7619:7658  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7687:7692  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7692  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7683  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7692  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7727  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_190\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7720:7727  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7727  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7716  getApproved(tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7708:7715  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7707  getApproved */\n      tag_33\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7716  getApproved(tokenId) */\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7696:7727  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7727  spender == owner || getApproved(tokenId) == spender */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7676:7763  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_167\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4584:4588  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4625  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4632  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4642  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7731:7763  isApprovedForAll(owner, spender) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4649  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10324:10884  function _transfer(... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10478:10482  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10482  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10474  ERC721.ownerOf(tokenId) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10466:10473  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10465  ERC721.ownerOf */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10474  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10451:10482  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10974:10976   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10956:10977   */\n      mstore\n        /* \"#utility.yul\":11013:11015   */\n      0x29\n        /* \"#utility.yul\":10993:11011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10986:11016   */\n      mstore\n        /* \"#utility.yul\":11052:11086   */\n      0x4552433732313a207472616e73666572206f6620746f6b656e20746861742069\n        /* \"#utility.yul\":11032:11050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11025:11087   */\n      mstore\n      shl(0xb9, 0x39903737ba1037bbb7)\n        /* \"#utility.yul\":11103:11121   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11096:11135   */\n      mstore\n        /* \"#utility.yul\":11152:11171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_98\n        /* \"#utility.yul\":10772:11177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10443:10528  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10546:10562  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6949:6951   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6931:6952   */\n      mstore\n        /* \"#utility.yul\":6988:6990   */\n      0x24\n        /* \"#utility.yul\":6968:6986   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6961:6991   */\n      mstore\n        /* \"#utility.yul\":7027:7061   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":7007:7025   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7000:7062   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7078:7096   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7071:7105   */\n      mstore\n        /* \"#utility.yul\":7122:7141   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":6747:7147   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10538:10603  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10715:10744  _approve(address(0), tokenId) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10736:10743  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10715:10723  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10715:10744  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10770  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10764  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10770  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10775  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10774:10775  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10770  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10775  _balances[from] -= 1 */\n      tag_205\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10774:10775  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10755:10775  _balances[from] -= 1 */\n      tag_206\n      jump\t// in\n    tag_205:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10798  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10794  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10798  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10803  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10802:10803  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10798  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10803  _balances[to] += 1 */\n      tag_207\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10802:10803  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10785:10803  _balances[to] += 1 */\n      tag_208\n      jump\t// in\n    tag_207:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10829  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10820  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10829  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10834  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10850:10877  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10813:10829  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10850:10877  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10324:10884  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11301:11608  function _setApprovalForAll(... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11451:11459  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11442:11459  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11442:11447  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11442:11459  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7354:7356   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7336:7357   */\n      mstore\n        /* \"#utility.yul\":7393:7395   */\n      0x19\n        /* \"#utility.yul\":7373:7391   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7366:7396   */\n      mstore\n        /* \"#utility.yul\":7432:7459   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":7412:7430   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7405:7460   */\n      mstore\n        /* \"#utility.yul\":7477:7495   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_98\n        /* \"#utility.yul\":7152:7501   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11434:11489  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11524  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11517  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11524  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11534  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11499:11545  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11560:11601  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":5695:5736   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11560:11601  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":5668:5686   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11560:11601  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11301:11608  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6534:6841  function _safeTransfer(... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6713  _transfer(from, to, tokenId) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6695:6699  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6703  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6712  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6694  _transfer */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6713  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6731:6779  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6754:6758  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6760:6762  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6771  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6773:6778  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6731:6753  _checkOnERC721Received */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6731:6779  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6723:6834  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_220\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:3132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2876:2889  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2909:2925  _exists(tokenId) */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2917:2924  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2909:2916  _exists */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2909:2925  _exists(tokenId) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11384:11386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11366:11387   */\n      mstore\n        /* \"#utility.yul\":11423:11425   */\n      0x2f\n        /* \"#utility.yul\":11403:11421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11396:11426   */\n      mstore\n        /* \"#utility.yul\":11462:11496   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":11442:11460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11435:11497   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":11513:11531   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11506:11551   */\n      mstore\n        /* \"#utility.yul\":11568:11587   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_98\n        /* \"#utility.yul\":11182:11593   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2977  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2988:3009  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3012:3022  _baseURI() */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3449:3458  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3373:3465  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3012:3022  _baseURI() */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2988:3022  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3063:3064  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3039:3060  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3039:3064  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3039:3125  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_228\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_176)\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3091:3098  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3118  tokenId.toString() */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3107  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3116  tokenId.toString */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3100:3118  tokenId.toString() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3074:3119  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3032:3125  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:3132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9063:9435  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9142:9158  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9134:9195  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9782:9784   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9134:9195  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9764:9785   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9801:9819   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9794:9824   */\n      mstore\n        /* \"#utility.yul\":9860:9894   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":9840:9858   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9833:9895   */\n      mstore\n        /* \"#utility.yul\":9912:9930   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9134:9195  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":9580:9936   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9134:9195  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9214:9230  _exists(tokenId) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9222:9229  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9214:9221  _exists */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9214:9230  _exists(tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9213:9230  !_exists(tokenId) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9205:9263  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6592:6594   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9205:9263  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6574:6595   */\n      mstore\n        /* \"#utility.yul\":6631:6633   */\n      0x1c\n        /* \"#utility.yul\":6611:6629   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6604:6634   */\n      mstore\n        /* \"#utility.yul\":6670:6700   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":6650:6668   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6643:6701   */\n      mstore\n        /* \"#utility.yul\":6718:6736   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9205:9263  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_98\n        /* \"#utility.yul\":6390:6742   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9205:9263  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9330:9343  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9330:9339  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9330:9343  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9330:9348  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9347:9348  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9330:9343  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9330:9348  _balances[to] += 1 */\n      tag_244\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9347:9348  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9330:9348  _balances[to] += 1 */\n      tag_208\n      jump\t// in\n    tag_244:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9358:9374  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9358:9365  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9358:9374  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9358:9379  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9395:9428  Transfer(address(0), to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9358:9374  _owners[tokenId] */\n      dup4\n      swap3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9395:9428  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9358:9374  _owners[tokenId] */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9395:9428  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9063:9435  function _mint(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1277:1491  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1392  _exists(tokenId) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1384:1391  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1383  _exists */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1392  _exists(tokenId) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9367:9369   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9349:9370   */\n      mstore\n        /* \"#utility.yul\":9406:9408   */\n      0x2e\n        /* \"#utility.yul\":9386:9404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9379:9409   */\n      mstore\n        /* \"#utility.yul\":9445:9479   */\n      0x45524337323155524953746f726167653a2055524920736574206f66206e6f6e\n        /* \"#utility.yul\":9425:9443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9418:9480   */\n      mstore\n      shl(0x91, 0x32bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9496:9514   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9489:9533   */\n      mstore\n        /* \"#utility.yul\":9550:9569   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_98\n        /* \"#utility.yul\":9165:9575   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1463  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1484  _tokenURIs[tokenId] = _tokenURI */\n      dup3\n      mload\n      tag_113\n      swap3\n      dup5\n      add\n      swap1\n      tag_251\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12161:12939  function _checkOnERC721Received(... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12311:12315  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12331:12344  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12327:12933  if (to.isContract()) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12438  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12402  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12438  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_258\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12417:12421  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12423:12430  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12432:12437  _data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12366:12438  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_259\n      jump\t// in\n    tag_258:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_262\n      swap2\n      dup2\n      add\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      0x01\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12881  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_264\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_269\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_268)\n    tag_269:\n      0x60\n      swap2\n      pop\n    tag_268:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12605:12618  reason.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12601:12867  if (reason.length == 0) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12647:12707  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_220\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12601:12867  if (reason.length == 0) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12819:12825  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12813:12826  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12804:12810  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12800:12802  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12796:12811  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12789:12827  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12881  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_264:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12488:12539  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12481:12539  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12327:12933  if (to.isContract()) {... */\n    tag_256:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12918:12922  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12161:12939  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_276\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_279\n      dup2\n      tag_280\n      jump\t// in\n    tag_279:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_281\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_282\n      jump\t// in\n    tag_281:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_277)\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_284\n      jumpi\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_286\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_286:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_289\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_206\n      jump\t// in\n    tag_289:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_292\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_208\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_294\n      jumpi\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_296\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_282\n      jump\t// in\n    tag_296:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_287)\n    tag_251:\n      dup3\n      dup1\n      sload\n      tag_298\n      swap1\n      tag_89\n      jump\t// in\n    tag_298:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_300\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_303)\n    tag_300:\n      dup3\n      0x1f\n      lt\n      tag_301\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_303)\n    tag_301:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_303\n      jumpi\n      swap2\n      dup3\n      add\n    tag_302:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_303\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_302)\n    tag_303:\n      pop\n      tag_304\n      swap3\n      swap2\n      pop\n      tag_305\n      jump\t// in\n    tag_304:\n      pop\n      swap1\n      jump\t// out\n    tag_305:\n    tag_306:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_306)\n        /* \"#utility.yul\":14:645   */\n    tag_309:\n        /* \"#utility.yul\":78:83   */\n      0x00\n        /* \"#utility.yul\":108:126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":149:151   */\n      dup1\n        /* \"#utility.yul\":141:147   */\n      dup5\n        /* \"#utility.yul\":138:152   */\n      gt\n        /* \"#utility.yul\":135:175   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":155:173   */\n      tag_312\n      tag_285\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":230:232   */\n      0x40\n        /* \"#utility.yul\":224:233   */\n      mload\n        /* \"#utility.yul\":198:200   */\n      0x1f\n        /* \"#utility.yul\":284:299   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":280:304   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":306:308   */\n      0x3f\n        /* \"#utility.yul\":276:309   */\n      add\n        /* \"#utility.yul\":272:314   */\n      and\n        /* \"#utility.yul\":260:315   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":330:348   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":350:372   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":327:373   */\n      or\n        /* \"#utility.yul\":324:396   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":376:394   */\n      tag_314\n      tag_285\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":416:426   */\n      dup2\n        /* \"#utility.yul\":412:414   */\n      0x40\n        /* \"#utility.yul\":405:427   */\n      mstore\n        /* \"#utility.yul\":445:451   */\n      dup1\n        /* \"#utility.yul\":436:451   */\n      swap4\n      pop\n        /* \"#utility.yul\":475:481   */\n      dup6\n        /* \"#utility.yul\":467:473   */\n      dup2\n        /* \"#utility.yul\":460:482   */\n      mstore\n        /* \"#utility.yul\":515:518   */\n      dup7\n        /* \"#utility.yul\":506:512   */\n      dup7\n        /* \"#utility.yul\":501:504   */\n      dup7\n        /* \"#utility.yul\":497:513   */\n      add\n        /* \"#utility.yul\":494:519   */\n      gt\n        /* \"#utility.yul\":491:536   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":491:536   */\n    tag_315:\n        /* \"#utility.yul\":582:588   */\n      dup6\n        /* \"#utility.yul\":577:580   */\n      dup6\n        /* \"#utility.yul\":570:574   */\n      0x20\n        /* \"#utility.yul\":562:568   */\n      dup4\n        /* \"#utility.yul\":558:575   */\n      add\n        /* \"#utility.yul\":545:589   */\n      calldatacopy\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":630:634   */\n      0x20\n        /* \"#utility.yul\":621:627   */\n      dup8\n        /* \"#utility.yul\":613:619   */\n      dup4\n        /* \"#utility.yul\":609:628   */\n      add\n        /* \"#utility.yul\":605:635   */\n      add\n        /* \"#utility.yul\":598:639   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:645   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:823   */\n    tag_316:\n        /* \"#utility.yul\":718:738   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":767:798   */\n      dup2\n      and\n        /* \"#utility.yul\":757:799   */\n      dup2\n      eq\n        /* \"#utility.yul\":747:817   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":810:811   */\n      dup1\n        /* \"#utility.yul\":803:815   */\n      revert\n        /* \"#utility.yul\":747:817   */\n    tag_318:\n        /* \"#utility.yul\":650:823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":828:1014   */\n    tag_53:\n        /* \"#utility.yul\":887:893   */\n      0x00\n        /* \"#utility.yul\":940:942   */\n      0x20\n        /* \"#utility.yul\":928:937   */\n      dup3\n        /* \"#utility.yul\":919:926   */\n      dup5\n        /* \"#utility.yul\":915:938   */\n      sub\n        /* \"#utility.yul\":911:943   */\n      slt\n        /* \"#utility.yul\":908:960   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":956:957   */\n      0x00\n        /* \"#utility.yul\":953:954   */\n      dup1\n        /* \"#utility.yul\":946:958   */\n      revert\n        /* \"#utility.yul\":908:960   */\n    tag_320:\n        /* \"#utility.yul\":979:1008   */\n      tag_176\n        /* \"#utility.yul\":998:1007   */\n      dup3\n        /* \"#utility.yul\":979:1008   */\n      tag_316\n      jump\t// in\n        /* \"#utility.yul\":1019:1279   */\n    tag_79:\n        /* \"#utility.yul\":1087:1093   */\n      0x00\n        /* \"#utility.yul\":1095:1101   */\n      dup1\n        /* \"#utility.yul\":1148:1150   */\n      0x40\n        /* \"#utility.yul\":1136:1145   */\n      dup4\n        /* \"#utility.yul\":1127:1134   */\n      dup6\n        /* \"#utility.yul\":1123:1146   */\n      sub\n        /* \"#utility.yul\":1119:1151   */\n      slt\n        /* \"#utility.yul\":1116:1168   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1164:1165   */\n      0x00\n        /* \"#utility.yul\":1161:1162   */\n      dup1\n        /* \"#utility.yul\":1154:1166   */\n      revert\n        /* \"#utility.yul\":1116:1168   */\n    tag_323:\n        /* \"#utility.yul\":1187:1216   */\n      tag_324\n        /* \"#utility.yul\":1206:1215   */\n      dup4\n        /* \"#utility.yul\":1187:1216   */\n      tag_316\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1177:1216   */\n      swap2\n      pop\n        /* \"#utility.yul\":1235:1273   */\n      tag_325\n        /* \"#utility.yul\":1269:1271   */\n      0x20\n        /* \"#utility.yul\":1258:1267   */\n      dup5\n        /* \"#utility.yul\":1254:1272   */\n      add\n        /* \"#utility.yul\":1235:1273   */\n      tag_316\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1225:1273   */\n      swap1\n      pop\n        /* \"#utility.yul\":1019:1279   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1284:1612   */\n    tag_42:\n        /* \"#utility.yul\":1361:1367   */\n      0x00\n        /* \"#utility.yul\":1369:1375   */\n      dup1\n        /* \"#utility.yul\":1377:1383   */\n      0x00\n        /* \"#utility.yul\":1430:1432   */\n      0x60\n        /* \"#utility.yul\":1418:1427   */\n      dup5\n        /* \"#utility.yul\":1409:1416   */\n      dup7\n        /* \"#utility.yul\":1405:1428   */\n      sub\n        /* \"#utility.yul\":1401:1433   */\n      slt\n        /* \"#utility.yul\":1398:1450   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1446:1447   */\n      0x00\n        /* \"#utility.yul\":1443:1444   */\n      dup1\n        /* \"#utility.yul\":1436:1448   */\n      revert\n        /* \"#utility.yul\":1398:1450   */\n    tag_327:\n        /* \"#utility.yul\":1469:1498   */\n      tag_328\n        /* \"#utility.yul\":1488:1497   */\n      dup5\n        /* \"#utility.yul\":1469:1498   */\n      tag_316\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1459:1498   */\n      swap3\n      pop\n        /* \"#utility.yul\":1517:1555   */\n      tag_329\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1540:1549   */\n      dup6\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"#utility.yul\":1517:1555   */\n      tag_316\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1507:1555   */\n      swap2\n      pop\n        /* \"#utility.yul\":1602:1604   */\n      0x40\n        /* \"#utility.yul\":1591:1600   */\n      dup5\n        /* \"#utility.yul\":1587:1605   */\n      add\n        /* \"#utility.yul\":1574:1606   */\n      calldataload\n        /* \"#utility.yul\":1564:1606   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1612   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1617:2283   */\n    tag_66:\n        /* \"#utility.yul\":1712:1718   */\n      0x00\n        /* \"#utility.yul\":1720:1726   */\n      dup1\n        /* \"#utility.yul\":1728:1734   */\n      0x00\n        /* \"#utility.yul\":1736:1742   */\n      dup1\n        /* \"#utility.yul\":1789:1792   */\n      0x80\n        /* \"#utility.yul\":1777:1786   */\n      dup6\n        /* \"#utility.yul\":1768:1775   */\n      dup8\n        /* \"#utility.yul\":1764:1787   */\n      sub\n        /* \"#utility.yul\":1760:1793   */\n      slt\n        /* \"#utility.yul\":1757:1810   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1806:1807   */\n      0x00\n        /* \"#utility.yul\":1803:1804   */\n      dup1\n        /* \"#utility.yul\":1796:1808   */\n      revert\n        /* \"#utility.yul\":1757:1810   */\n    tag_331:\n        /* \"#utility.yul\":1829:1858   */\n      tag_332\n        /* \"#utility.yul\":1848:1857   */\n      dup6\n        /* \"#utility.yul\":1829:1858   */\n      tag_316\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1819:1858   */\n      swap4\n      pop\n        /* \"#utility.yul\":1877:1915   */\n      tag_333\n        /* \"#utility.yul\":1911:1913   */\n      0x20\n        /* \"#utility.yul\":1900:1909   */\n      dup7\n        /* \"#utility.yul\":1896:1914   */\n      add\n        /* \"#utility.yul\":1877:1915   */\n      tag_316\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1867:1915   */\n      swap3\n      pop\n        /* \"#utility.yul\":1962:1964   */\n      0x40\n        /* \"#utility.yul\":1951:1960   */\n      dup6\n        /* \"#utility.yul\":1947:1965   */\n      add\n        /* \"#utility.yul\":1934:1966   */\n      calldataload\n        /* \"#utility.yul\":1924:1966   */\n      swap2\n      pop\n        /* \"#utility.yul\":2017:2019   */\n      0x60\n        /* \"#utility.yul\":2006:2015   */\n      dup6\n        /* \"#utility.yul\":2002:2020   */\n      add\n        /* \"#utility.yul\":1989:2021   */\n      calldataload\n        /* \"#utility.yul\":2044:2062   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2036:2042   */\n      dup2\n        /* \"#utility.yul\":2033:2063   */\n      gt\n        /* \"#utility.yul\":2030:2080   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2076:2077   */\n      0x00\n        /* \"#utility.yul\":2073:2074   */\n      dup1\n        /* \"#utility.yul\":2066:2078   */\n      revert\n        /* \"#utility.yul\":2030:2080   */\n    tag_334:\n        /* \"#utility.yul\":2099:2121   */\n      dup6\n      add\n        /* \"#utility.yul\":2152:2156   */\n      0x1f\n        /* \"#utility.yul\":2144:2157   */\n      dup2\n      add\n        /* \"#utility.yul\":2140:2167   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2130:2185   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2130:2185   */\n    tag_335:\n        /* \"#utility.yul\":2204:2277   */\n      tag_336\n        /* \"#utility.yul\":2269:2276   */\n      dup8\n        /* \"#utility.yul\":2264:2266   */\n      dup3\n        /* \"#utility.yul\":2251:2267   */\n      calldataload\n        /* \"#utility.yul\":2246:2248   */\n      0x20\n        /* \"#utility.yul\":2242:2244   */\n      dup5\n        /* \"#utility.yul\":2238:2249   */\n      add\n        /* \"#utility.yul\":2204:2277   */\n      tag_309\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2194:2277   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1617:2283   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2288:2635   */\n    tag_62:\n        /* \"#utility.yul\":2353:2359   */\n      0x00\n        /* \"#utility.yul\":2361:2367   */\n      dup1\n        /* \"#utility.yul\":2414:2416   */\n      0x40\n        /* \"#utility.yul\":2402:2411   */\n      dup4\n        /* \"#utility.yul\":2393:2400   */\n      dup6\n        /* \"#utility.yul\":2389:2412   */\n      sub\n        /* \"#utility.yul\":2385:2417   */\n      slt\n        /* \"#utility.yul\":2382:2434   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2430:2431   */\n      0x00\n        /* \"#utility.yul\":2427:2428   */\n      dup1\n        /* \"#utility.yul\":2420:2432   */\n      revert\n        /* \"#utility.yul\":2382:2434   */\n    tag_338:\n        /* \"#utility.yul\":2453:2482   */\n      tag_339\n        /* \"#utility.yul\":2472:2481   */\n      dup4\n        /* \"#utility.yul\":2453:2482   */\n      tag_316\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2443:2482   */\n      swap2\n      pop\n        /* \"#utility.yul\":2532:2534   */\n      0x20\n        /* \"#utility.yul\":2521:2530   */\n      dup4\n        /* \"#utility.yul\":2517:2535   */\n      add\n        /* \"#utility.yul\":2504:2536   */\n      calldataload\n        /* \"#utility.yul\":2579:2584   */\n      dup1\n        /* \"#utility.yul\":2572:2585   */\n      iszero\n        /* \"#utility.yul\":2565:2586   */\n      iszero\n        /* \"#utility.yul\":2558:2563   */\n      dup2\n        /* \"#utility.yul\":2555:2587   */\n      eq\n        /* \"#utility.yul\":2545:2605   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":2601:2602   */\n      0x00\n        /* \"#utility.yul\":2598:2599   */\n      dup1\n        /* \"#utility.yul\":2591:2603   */\n      revert\n        /* \"#utility.yul\":2545:2605   */\n    tag_340:\n        /* \"#utility.yul\":2624:2629   */\n      dup1\n        /* \"#utility.yul\":2614:2629   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2288:2635   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2640:3164   */\n    tag_74:\n        /* \"#utility.yul\":2718:2724   */\n      0x00\n        /* \"#utility.yul\":2726:2732   */\n      dup1\n        /* \"#utility.yul\":2779:2781   */\n      0x40\n        /* \"#utility.yul\":2767:2776   */\n      dup4\n        /* \"#utility.yul\":2758:2765   */\n      dup6\n        /* \"#utility.yul\":2754:2777   */\n      sub\n        /* \"#utility.yul\":2750:2782   */\n      slt\n        /* \"#utility.yul\":2747:2799   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2795:2796   */\n      0x00\n        /* \"#utility.yul\":2792:2793   */\n      dup1\n        /* \"#utility.yul\":2785:2797   */\n      revert\n        /* \"#utility.yul\":2747:2799   */\n    tag_342:\n        /* \"#utility.yul\":2818:2847   */\n      tag_343\n        /* \"#utility.yul\":2837:2846   */\n      dup4\n        /* \"#utility.yul\":2818:2847   */\n      tag_316\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2808:2847   */\n      swap2\n      pop\n        /* \"#utility.yul\":2898:2900   */\n      0x20\n        /* \"#utility.yul\":2887:2896   */\n      dup4\n        /* \"#utility.yul\":2883:2901   */\n      add\n        /* \"#utility.yul\":2870:2902   */\n      calldataload\n        /* \"#utility.yul\":2925:2943   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2917:2923   */\n      dup2\n        /* \"#utility.yul\":2914:2944   */\n      gt\n        /* \"#utility.yul\":2911:2961   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2957:2958   */\n      0x00\n        /* \"#utility.yul\":2954:2955   */\n      dup1\n        /* \"#utility.yul\":2947:2959   */\n      revert\n        /* \"#utility.yul\":2911:2961   */\n    tag_344:\n        /* \"#utility.yul\":2980:3002   */\n      dup4\n      add\n        /* \"#utility.yul\":3033:3037   */\n      0x1f\n        /* \"#utility.yul\":3025:3038   */\n      dup2\n      add\n        /* \"#utility.yul\":3021:3048   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3011:3066   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3059:3060   */\n      dup1\n        /* \"#utility.yul\":3052:3064   */\n      revert\n        /* \"#utility.yul\":3011:3066   */\n    tag_345:\n        /* \"#utility.yul\":3085:3158   */\n      tag_346\n        /* \"#utility.yul\":3150:3157   */\n      dup6\n        /* \"#utility.yul\":3145:3147   */\n      dup3\n        /* \"#utility.yul\":3132:3148   */\n      calldataload\n        /* \"#utility.yul\":3127:3129   */\n      0x20\n        /* \"#utility.yul\":3123:3125   */\n      dup5\n        /* \"#utility.yul\":3119:3130   */\n      add\n        /* \"#utility.yul\":3085:3158   */\n      tag_309\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3075:3158   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2640:3164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3169:3423   */\n    tag_38:\n        /* \"#utility.yul\":3237:3243   */\n      0x00\n        /* \"#utility.yul\":3245:3251   */\n      dup1\n        /* \"#utility.yul\":3298:3300   */\n      0x40\n        /* \"#utility.yul\":3286:3295   */\n      dup4\n        /* \"#utility.yul\":3277:3284   */\n      dup6\n        /* \"#utility.yul\":3273:3296   */\n      sub\n        /* \"#utility.yul\":3269:3301   */\n      slt\n        /* \"#utility.yul\":3266:3318   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":3314:3315   */\n      0x00\n        /* \"#utility.yul\":3311:3312   */\n      dup1\n        /* \"#utility.yul\":3304:3316   */\n      revert\n        /* \"#utility.yul\":3266:3318   */\n    tag_348:\n        /* \"#utility.yul\":3337:3366   */\n      tag_349\n        /* \"#utility.yul\":3356:3365   */\n      dup4\n        /* \"#utility.yul\":3337:3366   */\n      tag_316\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3327:3366   */\n      swap5\n        /* \"#utility.yul\":3413:3415   */\n      0x20\n        /* \"#utility.yul\":3398:3416   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3385:3417   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3169:3423   */\n      jump\t// out\n        /* \"#utility.yul\":3428:3673   */\n    tag_22:\n        /* \"#utility.yul\":3486:3492   */\n      0x00\n        /* \"#utility.yul\":3539:3541   */\n      0x20\n        /* \"#utility.yul\":3527:3536   */\n      dup3\n        /* \"#utility.yul\":3518:3525   */\n      dup5\n        /* \"#utility.yul\":3514:3537   */\n      sub\n        /* \"#utility.yul\":3510:3542   */\n      slt\n        /* \"#utility.yul\":3507:3559   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3555:3556   */\n      0x00\n        /* \"#utility.yul\":3552:3553   */\n      dup1\n        /* \"#utility.yul\":3545:3557   */\n      revert\n        /* \"#utility.yul\":3507:3559   */\n    tag_351:\n        /* \"#utility.yul\":3594:3603   */\n      dup2\n        /* \"#utility.yul\":3581:3604   */\n      calldataload\n        /* \"#utility.yul\":3613:3643   */\n      tag_176\n        /* \"#utility.yul\":3637:3642   */\n      dup2\n        /* \"#utility.yul\":3613:3643   */\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":3678:3927   */\n    tag_263:\n        /* \"#utility.yul\":3747:3753   */\n      0x00\n        /* \"#utility.yul\":3800:3802   */\n      0x20\n        /* \"#utility.yul\":3788:3797   */\n      dup3\n        /* \"#utility.yul\":3779:3786   */\n      dup5\n        /* \"#utility.yul\":3775:3798   */\n      sub\n        /* \"#utility.yul\":3771:3803   */\n      slt\n        /* \"#utility.yul\":3768:3820   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":3816:3817   */\n      0x00\n        /* \"#utility.yul\":3813:3814   */\n      dup1\n        /* \"#utility.yul\":3806:3818   */\n      revert\n        /* \"#utility.yul\":3768:3820   */\n    tag_355:\n        /* \"#utility.yul\":3848:3857   */\n      dup2\n        /* \"#utility.yul\":3842:3858   */\n      mload\n        /* \"#utility.yul\":3867:3897   */\n      tag_176\n        /* \"#utility.yul\":3891:3896   */\n      dup2\n        /* \"#utility.yul\":3867:3897   */\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":3932:4112   */\n    tag_32:\n        /* \"#utility.yul\":3991:3997   */\n      0x00\n        /* \"#utility.yul\":4044:4046   */\n      0x20\n        /* \"#utility.yul\":4032:4041   */\n      dup3\n        /* \"#utility.yul\":4023:4030   */\n      dup5\n        /* \"#utility.yul\":4019:4042   */\n      sub\n        /* \"#utility.yul\":4015:4047   */\n      slt\n        /* \"#utility.yul\":4012:4064   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4057:4058   */\n      dup1\n        /* \"#utility.yul\":4050:4062   */\n      revert\n        /* \"#utility.yul\":4012:4064   */\n    tag_358:\n      pop\n        /* \"#utility.yul\":4083:4106   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3932:4112   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4117:4374   */\n    tag_359:\n        /* \"#utility.yul\":4158:4161   */\n      0x00\n        /* \"#utility.yul\":4196:4201   */\n      dup2\n        /* \"#utility.yul\":4190:4202   */\n      mload\n        /* \"#utility.yul\":4223:4229   */\n      dup1\n        /* \"#utility.yul\":4218:4221   */\n      dup5\n        /* \"#utility.yul\":4211:4230   */\n      mstore\n        /* \"#utility.yul\":4239:4302   */\n      tag_361\n        /* \"#utility.yul\":4295:4301   */\n      dup2\n        /* \"#utility.yul\":4288:4292   */\n      0x20\n        /* \"#utility.yul\":4283:4286   */\n      dup7\n        /* \"#utility.yul\":4279:4293   */\n      add\n        /* \"#utility.yul\":4272:4276   */\n      0x20\n        /* \"#utility.yul\":4265:4270   */\n      dup7\n        /* \"#utility.yul\":4261:4277   */\n      add\n        /* \"#utility.yul\":4239:4302   */\n      tag_362\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4356:4358   */\n      0x1f\n        /* \"#utility.yul\":4335:4350   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4331:4360   */\n      and\n        /* \"#utility.yul\":4322:4361   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4363:4367   */\n      0x20\n        /* \"#utility.yul\":4318:4368   */\n      add\n      swap3\n        /* \"#utility.yul\":4117:4374   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4379:4849   */\n    tag_166:\n        /* \"#utility.yul\":4558:4561   */\n      0x00\n        /* \"#utility.yul\":4596:4602   */\n      dup4\n        /* \"#utility.yul\":4590:4603   */\n      mload\n        /* \"#utility.yul\":4612:4665   */\n      tag_364\n        /* \"#utility.yul\":4658:4664   */\n      dup2\n        /* \"#utility.yul\":4653:4656   */\n      dup5\n        /* \"#utility.yul\":4646:4650   */\n      0x20\n        /* \"#utility.yul\":4638:4644   */\n      dup9\n        /* \"#utility.yul\":4634:4651   */\n      add\n        /* \"#utility.yul\":4612:4665   */\n      tag_362\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4728:4741   */\n      dup4\n      mload\n        /* \"#utility.yul\":4687:4703   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4750:4807   */\n      tag_365\n        /* \"#utility.yul\":4728:4741   */\n      dup2\n        /* \"#utility.yul\":4687:4703   */\n      dup4\n        /* \"#utility.yul\":4784:4788   */\n      0x20\n        /* \"#utility.yul\":4772:4789   */\n      dup9\n      add\n        /* \"#utility.yul\":4750:4807   */\n      tag_362\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4823:4843   */\n      add\n      swap5\n        /* \"#utility.yul\":4379:4849   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5550   */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5331:5346   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5313:5347   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5383:5398   */\n      dup5\n      and\n        /* \"#utility.yul\":5378:5380   */\n      0x20\n        /* \"#utility.yul\":5363:5381   */\n      dup3\n      add\n        /* \"#utility.yul\":5356:5399   */\n      mstore\n        /* \"#utility.yul\":5430:5432   */\n      0x40\n        /* \"#utility.yul\":5415:5433   */\n      dup2\n      add\n        /* \"#utility.yul\":5408:5442   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5478:5481   */\n      0x80\n        /* \"#utility.yul\":5473:5475   */\n      0x60\n        /* \"#utility.yul\":5458:5476   */\n      dup3\n      add\n        /* \"#utility.yul\":5451:5482   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5256:5260   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5499:5544   */\n      tag_368\n      swap1\n        /* \"#utility.yul\":5524:5543   */\n      dup4\n      add\n        /* \"#utility.yul\":5516:5522   */\n      dup5\n        /* \"#utility.yul\":5499:5544   */\n      tag_359\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5491:5544   */\n      swap7\n        /* \"#utility.yul\":5062:5550   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5747:5966   */\n    tag_29:\n        /* \"#utility.yul\":5896:5898   */\n      0x20\n        /* \"#utility.yul\":5885:5894   */\n      dup2\n        /* \"#utility.yul\":5878:5899   */\n      mstore\n        /* \"#utility.yul\":5859:5863   */\n      0x00\n        /* \"#utility.yul\":5916:5960   */\n      tag_176\n        /* \"#utility.yul\":5956:5958   */\n      0x20\n        /* \"#utility.yul\":5945:5954   */\n      dup4\n        /* \"#utility.yul\":5941:5959   */\n      add\n        /* \"#utility.yul\":5933:5939   */\n      dup5\n        /* \"#utility.yul\":5916:5960   */\n      tag_359\n      jump\t// in\n        /* \"#utility.yul\":5971:6385   */\n    tag_220:\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"#utility.yul\":6155:6176   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6212:6214   */\n      0x32\n        /* \"#utility.yul\":6192:6210   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6185:6215   */\n      mstore\n        /* \"#utility.yul\":6251:6285   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":6246:6248   */\n      0x40\n        /* \"#utility.yul\":6231:6249   */\n      dup3\n      add\n        /* \"#utility.yul\":6224:6286   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":6317:6319   */\n      0x60\n        /* \"#utility.yul\":6302:6320   */\n      dup3\n      add\n        /* \"#utility.yul\":6295:6343   */\n      mstore\n        /* \"#utility.yul\":6375:6378   */\n      0x80\n        /* \"#utility.yul\":6360:6379   */\n      add\n      swap1\n        /* \"#utility.yul\":5971:6385   */\n      jump\t// out\n        /* \"#utility.yul\":12000:12413   */\n    tag_121:\n        /* \"#utility.yul\":12202:12204   */\n      0x20\n        /* \"#utility.yul\":12184:12205   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12241:12243   */\n      0x31\n        /* \"#utility.yul\":12221:12239   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12214:12244   */\n      mstore\n        /* \"#utility.yul\":12280:12314   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":12275:12277   */\n      0x40\n        /* \"#utility.yul\":12260:12278   */\n      dup3\n      add\n        /* \"#utility.yul\":12253:12315   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":12346:12348   */\n      0x60\n        /* \"#utility.yul\":12331:12349   */\n      dup3\n      add\n        /* \"#utility.yul\":12324:12371   */\n      mstore\n        /* \"#utility.yul\":12403:12406   */\n      0x80\n        /* \"#utility.yul\":12388:12407   */\n      add\n      swap1\n        /* \"#utility.yul\":12000:12413   */\n      jump\t// out\n        /* \"#utility.yul\":12600:12728   */\n    tag_208:\n        /* \"#utility.yul\":12640:12643   */\n      0x00\n        /* \"#utility.yul\":12671:12672   */\n      dup3\n        /* \"#utility.yul\":12667:12673   */\n      not\n        /* \"#utility.yul\":12664:12665   */\n      dup3\n        /* \"#utility.yul\":12661:12674   */\n      gt\n        /* \"#utility.yul\":12658:12697   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":12677:12695   */\n      tag_391\n      tag_392\n      jump\t// in\n    tag_391:\n      pop\n        /* \"#utility.yul\":12713:12722   */\n      add\n      swap1\n        /* \"#utility.yul\":12600:12728   */\n      jump\t// out\n        /* \"#utility.yul\":12733:12853   */\n    tag_282:\n        /* \"#utility.yul\":12773:12774   */\n      0x00\n        /* \"#utility.yul\":12799:12800   */\n      dup3\n        /* \"#utility.yul\":12789:12824   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":12804:12822   */\n      tag_395\n      tag_396\n      jump\t// in\n    tag_395:\n      pop\n        /* \"#utility.yul\":12838:12847   */\n      div\n      swap1\n        /* \"#utility.yul\":12733:12853   */\n      jump\t// out\n        /* \"#utility.yul\":12858:12983   */\n    tag_206:\n        /* \"#utility.yul\":12898:12902   */\n      0x00\n        /* \"#utility.yul\":12926:12927   */\n      dup3\n        /* \"#utility.yul\":12923:12924   */\n      dup3\n        /* \"#utility.yul\":12920:12928   */\n      lt\n        /* \"#utility.yul\":12917:12951   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":12931:12949   */\n      tag_399\n      tag_392\n      jump\t// in\n    tag_399:\n      pop\n        /* \"#utility.yul\":12968:12977   */\n      sub\n      swap1\n        /* \"#utility.yul\":12858:12983   */\n      jump\t// out\n        /* \"#utility.yul\":12988:13246   */\n    tag_362:\n        /* \"#utility.yul\":13060:13061   */\n      0x00\n        /* \"#utility.yul\":13070:13183   */\n    tag_401:\n        /* \"#utility.yul\":13084:13090   */\n      dup4\n        /* \"#utility.yul\":13081:13082   */\n      dup2\n        /* \"#utility.yul\":13078:13091   */\n      lt\n        /* \"#utility.yul\":13070:13183   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":13160:13171   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13154:13172   */\n      mload\n        /* \"#utility.yul\":13141:13152   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":13134:13173   */\n      mstore\n        /* \"#utility.yul\":13106:13108   */\n      0x20\n        /* \"#utility.yul\":13099:13109   */\n      add\n        /* \"#utility.yul\":13070:13183   */\n      jump(tag_401)\n    tag_403:\n        /* \"#utility.yul\":13201:13207   */\n      dup4\n        /* \"#utility.yul\":13198:13199   */\n      dup2\n        /* \"#utility.yul\":13195:13208   */\n      gt\n        /* \"#utility.yul\":13192:13240   */\n      iszero\n      tag_149\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":13236:13237   */\n      0x00\n        /* \"#utility.yul\":13218:13234   */\n      swap2\n      add\n        /* \"#utility.yul\":13211:13238   */\n      mstore\n        /* \"#utility.yul\":12988:13246   */\n      jump\t// out\n        /* \"#utility.yul\":13251:13631   */\n    tag_89:\n        /* \"#utility.yul\":13330:13331   */\n      0x01\n        /* \"#utility.yul\":13326:13338   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":13373:13385   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":13394:13455   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":13448:13452   */\n      0x7f\n        /* \"#utility.yul\":13440:13446   */\n      dup3\n        /* \"#utility.yul\":13436:13453   */\n      and\n        /* \"#utility.yul\":13426:13453   */\n      swap2\n      pop\n        /* \"#utility.yul\":13394:13455   */\n    tag_406:\n        /* \"#utility.yul\":13501:13503   */\n      0x20\n        /* \"#utility.yul\":13493:13499   */\n      dup3\n        /* \"#utility.yul\":13490:13504   */\n      lt\n        /* \"#utility.yul\":13470:13488   */\n      dup2\n        /* \"#utility.yul\":13467:13505   */\n      eq\n        /* \"#utility.yul\":13464:13625   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":13547:13557   */\n      0x4e487b71\n        /* \"#utility.yul\":13542:13545   */\n      0xe0\n        /* \"#utility.yul\":13538:13558   */\n      shl\n        /* \"#utility.yul\":13535:13536   */\n      0x00\n        /* \"#utility.yul\":13528:13559   */\n      mstore\n        /* \"#utility.yul\":13582:13586   */\n      0x22\n        /* \"#utility.yul\":13579:13580   */\n      0x04\n        /* \"#utility.yul\":13572:13587   */\n      mstore\n        /* \"#utility.yul\":13610:13614   */\n      0x24\n        /* \"#utility.yul\":13607:13608   */\n      0x00\n        /* \"#utility.yul\":13600:13615   */\n      revert\n        /* \"#utility.yul\":13464:13625   */\n    tag_407:\n      pop\n        /* \"#utility.yul\":13251:13631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13636:13771   */\n    tag_280:\n        /* \"#utility.yul\":13675:13678   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":13696:13713   */\n      dup3\n      eq\n        /* \"#utility.yul\":13693:13736   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":13716:13734   */\n      tag_410\n      tag_392\n      jump\t// in\n    tag_410:\n      pop\n        /* \"#utility.yul\":13763:13764   */\n      0x01\n        /* \"#utility.yul\":13752:13765   */\n      add\n      swap1\n        /* \"#utility.yul\":13636:13771   */\n      jump\t// out\n        /* \"#utility.yul\":13776:13888   */\n    tag_291:\n        /* \"#utility.yul\":13808:13809   */\n      0x00\n        /* \"#utility.yul\":13834:13835   */\n      dup3\n        /* \"#utility.yul\":13824:13859   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":13839:13857   */\n      tag_413\n      tag_396\n      jump\t// in\n    tag_413:\n      pop\n        /* \"#utility.yul\":13873:13882   */\n      mod\n      swap1\n        /* \"#utility.yul\":13776:13888   */\n      jump\t// out\n        /* \"#utility.yul\":13893:14020   */\n    tag_392:\n        /* \"#utility.yul\":13954:13964   */\n      0x4e487b71\n        /* \"#utility.yul\":13949:13952   */\n      0xe0\n        /* \"#utility.yul\":13945:13965   */\n      shl\n        /* \"#utility.yul\":13942:13943   */\n      0x00\n        /* \"#utility.yul\":13935:13966   */\n      mstore\n        /* \"#utility.yul\":13985:13989   */\n      0x11\n        /* \"#utility.yul\":13982:13983   */\n      0x04\n        /* \"#utility.yul\":13975:13990   */\n      mstore\n        /* \"#utility.yul\":14009:14013   */\n      0x24\n        /* \"#utility.yul\":14006:14007   */\n      0x00\n        /* \"#utility.yul\":13999:14014   */\n      revert\n        /* \"#utility.yul\":14025:14152   */\n    tag_396:\n        /* \"#utility.yul\":14086:14096   */\n      0x4e487b71\n        /* \"#utility.yul\":14081:14084   */\n      0xe0\n        /* \"#utility.yul\":14077:14097   */\n      shl\n        /* \"#utility.yul\":14074:14075   */\n      0x00\n        /* \"#utility.yul\":14067:14098   */\n      mstore\n        /* \"#utility.yul\":14117:14121   */\n      0x12\n        /* \"#utility.yul\":14114:14115   */\n      0x04\n        /* \"#utility.yul\":14107:14122   */\n      mstore\n        /* \"#utility.yul\":14141:14145   */\n      0x24\n        /* \"#utility.yul\":14138:14139   */\n      0x00\n        /* \"#utility.yul\":14131:14146   */\n      revert\n        /* \"#utility.yul\":14157:14284   */\n    tag_295:\n        /* \"#utility.yul\":14218:14228   */\n      0x4e487b71\n        /* \"#utility.yul\":14213:14216   */\n      0xe0\n        /* \"#utility.yul\":14209:14229   */\n      shl\n        /* \"#utility.yul\":14206:14207   */\n      0x00\n        /* \"#utility.yul\":14199:14230   */\n      mstore\n        /* \"#utility.yul\":14249:14253   */\n      0x32\n        /* \"#utility.yul\":14246:14247   */\n      0x04\n        /* \"#utility.yul\":14239:14254   */\n      mstore\n        /* \"#utility.yul\":14273:14277   */\n      0x24\n        /* \"#utility.yul\":14270:14271   */\n      0x00\n        /* \"#utility.yul\":14263:14278   */\n      revert\n        /* \"#utility.yul\":14289:14416   */\n    tag_285:\n        /* \"#utility.yul\":14350:14360   */\n      0x4e487b71\n        /* \"#utility.yul\":14345:14348   */\n      0xe0\n        /* \"#utility.yul\":14341:14361   */\n      shl\n        /* \"#utility.yul\":14338:14339   */\n      0x00\n        /* \"#utility.yul\":14331:14362   */\n      mstore\n        /* \"#utility.yul\":14381:14385   */\n      0x41\n        /* \"#utility.yul\":14378:14379   */\n      0x04\n        /* \"#utility.yul\":14371:14386   */\n      mstore\n        /* \"#utility.yul\":14405:14409   */\n      0x24\n        /* \"#utility.yul\":14402:14403   */\n      0x00\n        /* \"#utility.yul\":14395:14410   */\n      revert\n        /* \"#utility.yul\":14421:14552   */\n    tag_353:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":14495:14527   */\n      dup2\n      and\n        /* \"#utility.yul\":14485:14528   */\n      dup2\n      eq\n        /* \"#utility.yul\":14475:14546   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":14542:14543   */\n      0x00\n        /* \"#utility.yul\":14539:14540   */\n      dup1\n        /* \"#utility.yul\":14532:14544   */\n      revert\n        /* \"#utility.yul\":14475:14546   */\n    tag_419:\n        /* \"#utility.yul\":14421:14552   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205ca9ee18b3d458d32046205e61f36867ee40c5d52fc5bf626ef4516e029e53f264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1772": {
									"entryPoint": null,
									"id": 1772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:12"
															},
															"nodeType": "YulIf",
															"src": "157:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:12"
															},
															"nodeType": "YulIf",
															"src": "227:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:12",
														"type": ""
													}
												],
												"src": "14:380:12"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604080518082018252600781526615d85d9e53919560ca1b6020808301918252835180850190945260048452635741565960e01b9084015281519192916200005d916000916200007c565b508051620000739060019060208401906200007c565b5050506200015f565b8280546200008a9062000122565b90600052602060002090601f016020900481019282620000ae5760008555620000f9565b82601f10620000c957805160ff1916838001178555620000f9565b82800160010185558215620000f9579182015b82811115620000f9578251825591602001919060010190620000dc565b50620001079291506200010b565b5090565b5b808211156200010757600081556001016200010c565b600181811c908216806200013757607f821691505b602082108114156200015957634e487b7160e01b600052602260045260246000fd5b50919050565b6116f9806200016f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde146101e1578063c87b56dd146101f4578063cf37834314610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a22cb465146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046113d8565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e91906114c3565b61013f61013a366004611412565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a6101653660046113ae565b6103c7565b005b61016a61017a366004611258565b6104dd565b61016a61018d366004611258565b61050e565b61013f6101a0366004611412565b610529565b6101b86101b336600461120a565b6105a0565b60405190815260200161010e565b61011f610627565b61016a6101dc366004611310565b610636565b61016a6101ef366004611294565b610645565b61011f610202366004611412565b61067d565b6101b861021536600461134c565b6107f4565b610102610228366004611225565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b7906115e8565b80601f01602080910402602001604051908101604052809291908181526020018280546102e3906115e8565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b60006103458261082c565b6103ab5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103d282610529565b9050806001600160a01b0316836001600160a01b031614156104405760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103a2565b336001600160a01b038216148061045c575061045c8133610228565b6104ce5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103a2565b6104d88383610849565b505050565b6104e733826108b7565b6105035760405162461bcd60e51b81526004016103a290611528565b6104d883838361099d565b6104d883838360405180602001604052806000815250610645565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103a2565b60006001600160a01b03821661060b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103a2565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b7906115e8565b610641338383610b3d565b5050565b61064f33836108b7565b61066b5760405162461bcd60e51b81526004016103a290611528565b61067784848484610c0c565b50505050565b60606106888261082c565b6106ee5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103a2565b60008281526006602052604081208054610707906115e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610733906115e8565b80156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b50505050509050600061079e60408051602081019091526000815290565b90508051600014156107b1575092915050565b8151156107e35780826040516020016107cb929190611457565b60405160208183030381529060405292505050919050565b6107ec84610c3f565b949350505050565b6000610804600780546001019055565b600061080f60075490565b905061081b8482610d16565b6108258184610e49565b9392505050565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061087e82610529565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108c28261082c565b6109235760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103a2565b600061092e83610529565b9050806001600160a01b0316846001600160a01b031614806109695750836001600160a01b031661095e8461033a565b6001600160a01b0316145b806107ec57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166107ec565b826001600160a01b03166109b082610529565b6001600160a01b031614610a185760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103a2565b6001600160a01b038216610a7a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a2565b610a85600082610849565b6001600160a01b0383166000908152600360205260408120805460019290610aae9084906115a5565b90915550506001600160a01b0382166000908152600360205260408120805460019290610adc908490611579565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610b9f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c1784848461099d565b610c2384848484610ed4565b6106775760405162461bcd60e51b81526004016103a2906114d6565b6060610c4a8261082c565b610cae5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103a2565b6000610cc560408051602081019091526000815290565b90506000815111610ce55760405180602001604052806000815250610825565b80610cef84610fe1565b604051602001610d00929190611457565b6040516020818303038152906040529392505050565b6001600160a01b038216610d6c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103a2565b610d758161082c565b15610dc25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103a2565b6001600160a01b0382166000908152600360205260408120805460019290610deb908490611579565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610e528261082c565b610eb55760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103a2565b600082815260066020908152604090912082516104d8928401906110df565b60006001600160a01b0384163b15610fd657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f18903390899088908890600401611486565b602060405180830381600087803b158015610f3257600080fd5b505af1925050508015610f62575060408051601f3d908101601f19168201909252610f5f918101906113f5565b60015b610fbc573d808015610f90576040519150601f19603f3d011682016040523d82523d6000602084013e610f95565b606091505b508051610fb45760405162461bcd60e51b81526004016103a2906114d6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107ec565b506001949350505050565b6060816110055750506040805180820190915260018152600360fc1b602082015290565b8160005b811561102f578061101981611623565b91506110289050600a83611591565b9150611009565b60008167ffffffffffffffff81111561104a5761104a611694565b6040519080825280601f01601f191660200182016040528015611074576020820181803683370190505b5090505b84156107ec576110896001836115a5565b9150611096600a8661163e565b6110a1906030611579565b60f81b8183815181106110b6576110b661167e565b60200101906001600160f81b031916908160001a9053506110d8600a86611591565b9450611078565b8280546110eb906115e8565b90600052602060002090601f01602090048101928261110d5760008555611153565b82601f1061112657805160ff1916838001178555611153565b82800160010185558215611153579182015b82811115611153578251825591602001919060010190611138565b5061115f929150611163565b5090565b5b8082111561115f5760008155600101611164565b600067ffffffffffffffff8084111561119357611193611694565b604051601f8501601f19908116603f011681019082821181831017156111bb576111bb611694565b816040528093508581528686860111156111d457600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461120557600080fd5b919050565b60006020828403121561121c57600080fd5b610825826111ee565b6000806040838503121561123857600080fd5b611241836111ee565b915061124f602084016111ee565b90509250929050565b60008060006060848603121561126d57600080fd5b611276846111ee565b9250611284602085016111ee565b9150604084013590509250925092565b600080600080608085870312156112aa57600080fd5b6112b3856111ee565b93506112c1602086016111ee565b925060408501359150606085013567ffffffffffffffff8111156112e457600080fd5b8501601f810187136112f557600080fd5b61130487823560208401611178565b91505092959194509250565b6000806040838503121561132357600080fd5b61132c836111ee565b91506020830135801515811461134157600080fd5b809150509250929050565b6000806040838503121561135f57600080fd5b611368836111ee565b9150602083013567ffffffffffffffff81111561138457600080fd5b8301601f8101851361139557600080fd5b6113a485823560208401611178565b9150509250929050565b600080604083850312156113c157600080fd5b6113ca836111ee565b946020939093013593505050565b6000602082840312156113ea57600080fd5b8135610825816116aa565b60006020828403121561140757600080fd5b8151610825816116aa565b60006020828403121561142457600080fd5b5035919050565b600081518084526114438160208601602086016115bc565b601f01601f19169290920160200192915050565b600083516114698184602088016115bc565b83519083019061147d8183602088016115bc565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114b99083018461142b565b9695505050505050565b602081526000610825602083018461142b565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561158c5761158c611652565b500190565b6000826115a0576115a0611668565b500490565b6000828210156115b7576115b7611652565b500390565b60005b838110156115d75781810151838201526020016115bf565b838111156106775750506000910152565b600181811c908216806115fc57607f821691505b6020821081141561161d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561163757611637611652565b5060010190565b60008261164d5761164d611668565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146116c057600080fd5b5056fea26469706673582212205ca9ee18b3d458d32046205e61f36867ee40c5d52fc5bf626ef4516e029e53f264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x15D85D9E539195 PUSH1 0xCA SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x57415659 PUSH1 0xE0 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x5D SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x7C JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x73 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x7C JUMP JUMPDEST POP POP POP PUSH3 0x15F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x8A SWAP1 PUSH3 0x122 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xAE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xDC JUMP JUMPDEST POP PUSH3 0x107 SWAP3 SWAP2 POP PUSH3 0x10B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x107 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x10C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x137 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x159 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F9 DUP1 PUSH3 0x16F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xCF378343 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x11F PUSH2 0x627 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1294 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x287 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2A2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x330 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x305 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x330 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x313 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2 DUP3 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45C DUP2 CALLER PUSH2 0x228 JUMP JUMPDEST PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x4D8 DUP4 DUP4 PUSH2 0x849 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4E7 CALLER DUP3 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x4D8 DUP4 DUP4 DUP4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x4D8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x641 CALLER DUP4 DUP4 PUSH2 0xB3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x64F CALLER DUP4 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x677 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC0C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x688 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x733 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x780 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x755 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x780 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x763 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x79E PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x7B1 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x7E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CB SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP5 PUSH2 0xC3F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x804 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x81B DUP5 DUP3 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x825 DUP2 DUP5 PUSH2 0xE49 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x87E DUP3 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92E DUP4 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x969 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95E DUP5 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x7EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7EC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B0 DUP3 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0xA85 PUSH1 0x0 DUP3 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xAAE SWAP1 DUP5 SWAP1 PUSH2 0x15A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xADC SWAP1 DUP5 SWAP1 PUSH2 0x1579 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xC17 DUP5 DUP5 DUP5 PUSH2 0x99D JUMP JUMPDEST PUSH2 0xC23 DUP5 DUP5 DUP5 DUP5 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC4A DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x825 JUMP JUMPDEST DUP1 PUSH2 0xCEF DUP5 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD00 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0xD75 DUP2 PUSH2 0x82C JUMP JUMPDEST ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xDEB SWAP1 DUP5 SWAP1 PUSH2 0x1579 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xE52 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0xEB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x4D8 SWAP3 DUP5 ADD SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF18 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF62 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF5F SWAP2 DUP2 ADD SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFBC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x7EC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1005 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x102F JUMPI DUP1 PUSH2 0x1019 DUP2 PUSH2 0x1623 JUMP JUMPDEST SWAP2 POP PUSH2 0x1028 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1591 JUMP JUMPDEST SWAP2 POP PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A PUSH2 0x1694 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1074 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x7EC JUMPI PUSH2 0x1089 PUSH1 0x1 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1096 PUSH1 0xA DUP7 PUSH2 0x163E JUMP JUMPDEST PUSH2 0x10A1 SWAP1 PUSH1 0x30 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10B6 JUMPI PUSH2 0x10B6 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10D8 PUSH1 0xA DUP7 PUSH2 0x1591 JUMP JUMPDEST SWAP5 POP PUSH2 0x1078 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x10EB SWAP1 PUSH2 0x15E8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x110D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1153 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1126 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1153 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1153 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1153 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1138 JUMP JUMPDEST POP PUSH2 0x115F SWAP3 SWAP2 POP PUSH2 0x1163 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1193 PUSH2 0x1694 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11BB JUMPI PUSH2 0x11BB PUSH2 0x1694 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x825 DUP3 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1241 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH2 0x124F PUSH1 0x20 DUP5 ADD PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1276 DUP5 PUSH2 0x11EE JUMP JUMPDEST SWAP3 POP PUSH2 0x1284 PUSH1 0x20 DUP6 ADD PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B3 DUP6 PUSH2 0x11EE JUMP JUMPDEST SWAP4 POP PUSH2 0x12C1 PUSH1 0x20 DUP7 ADD PUSH2 0x11EE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1304 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132C DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1368 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A4 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13CA DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x825 DUP2 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x825 DUP2 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1443 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1469 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x15BC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x147D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x15BC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14B9 SWAP1 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x825 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x158C JUMPI PUSH2 0x158C PUSH2 0x1652 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15A0 JUMPI PUSH2 0x15A0 PUSH2 0x1668 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B7 PUSH2 0x1652 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x677 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x161D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1637 JUMPI PUSH2 0x1637 PUSH2 0x1652 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x164D JUMPI PUSH2 0x164D PUSH2 0x1668 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xA9 0xEE XOR 0xB3 0xD4 PC 0xD3 KECCAK256 CHAINID KECCAK256 0x5E PUSH2 0xF368 PUSH8 0xEE40C5D52FC5BF62 PUSH15 0xF4516E029E53F264736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "198:687:11:-:0;;;359:50;;;;;;;;;-1:-1:-1;1375:113:0;;;;;;;;;;;-1:-1:-1;;;1375:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1375:113:0;;;;1441:13;;1375:113;;;1441:13;;-1:-1:-1;;1441:13:0;:::i;:::-;-1:-1:-1;1464:17:0;;;;:7;;:17;;;;;:::i;:::-;;1375:113;;198:687:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;198:687:11;;;-1:-1:-1;198:687:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:12;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;198:687:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_724": {
									"entryPoint": 2121,
									"id": 724,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_829": {
									"entryPoint": null,
									"id": 829,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_818": {
									"entryPoint": 3796,
									"id": 818,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_438": {
									"entryPoint": 2092,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_479": {
									"entryPoint": 2231,
									"id": 479,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_580": {
									"entryPoint": 3350,
									"id": 580,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1428": {
									"entryPoint": null,
									"id": 1428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_420": {
									"entryPoint": 3084,
									"id": 420,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_756": {
									"entryPoint": 2877,
									"id": 756,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1061": {
									"entryPoint": 3657,
									"id": 1061,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_700": {
									"entryPoint": 2461,
									"id": 700,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_259": {
									"entryPoint": 967,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@awardItem_1805": {
									"entryPoint": 2036,
									"id": 1805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_117": {
									"entryPoint": 1440,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_1456": {
									"entryPoint": null,
									"id": 1456,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_280": {
									"entryPoint": 826,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1470": {
									"entryPoint": null,
									"id": 1470,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_315": {
									"entryPoint": null,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1139": {
									"entryPoint": null,
									"id": 1139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_155": {
									"entryPoint": 680,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_145": {
									"entryPoint": 1321,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_361": {
									"entryPoint": 1294,
									"id": 361,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_391": {
									"entryPoint": 1605,
									"id": 391,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_297": {
									"entryPoint": 1590,
									"id": 297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1738": {
									"entryPoint": null,
									"id": 1738,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 598,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_165": {
									"entryPoint": 1575,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1597": {
									"entryPoint": 4065,
									"id": 1597,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1039": {
									"entryPoint": 1661,
									"id": 1039,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_207": {
									"entryPoint": 3135,
									"id": 207,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_342": {
									"entryPoint": 1245,
									"id": 342,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5254,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14554:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:557:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "98:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "108:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "102:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "153:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "155:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "155:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "155:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "141:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "149:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "138:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "138:14:12"
															},
															"nodeType": "YulIf",
															"src": "135:40:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:7:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "210:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "230:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "224:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "214:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "264:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "288:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "296:2:12",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "284:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "284:15:12"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "301:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "280:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "280:24:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "306:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "276:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "276:33:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "311:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "272:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "272:42:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "260:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:55:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "246:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "374:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "376:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "376:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "376:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "333:10:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "345:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "330:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "353:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "365:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "350:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "327:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:46:12"
															},
															"nodeType": "YulIf",
															"src": "324:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "416:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:22:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "436:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "445:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:22:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "501:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "515:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "494:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:25:12"
															},
															"nodeType": "YulIf",
															"src": "491:45:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "562:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "570:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:17:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "582:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "545:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:44:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "613:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "621:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "609:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "609:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "630:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:30:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:12",
														"type": ""
													}
												],
												"src": "14:631:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "699:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "709:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "718:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "709:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "760:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "786:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "791:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "782:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "782:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "795:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "778:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "778:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "767:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "767:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "757:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:50:12"
															},
															"nodeType": "YulIf",
															"src": "747:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "678:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:12",
														"type": ""
													}
												],
												"src": "650:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "944:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "953:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "956:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "946:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "946:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "919:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "928:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "915:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "940:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:32:12"
															},
															"nodeType": "YulIf",
															"src": "908:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "969:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "998:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "979:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "969:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "864:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "875:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "887:6:12",
														"type": ""
													}
												],
												"src": "828:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1106:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1152:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1154:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1154:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1154:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1127:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1136:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1148:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:32:12"
															},
															"nodeType": "YulIf",
															"src": "1116:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1206:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1187:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1225:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1258:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1269:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1254:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1254:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1235:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1225:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1064:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1075:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1087:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1095:6:12",
														"type": ""
													}
												],
												"src": "1019:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1388:224:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1434:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1443:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1446:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1436:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1436:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1409:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1418:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1401:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:32:12"
															},
															"nodeType": "YulIf",
															"src": "1398:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1459:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1469:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1540:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1551:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1517:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1564:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1591:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1602:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1587:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1587:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1574:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1338:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1349:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1369:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1377:6:12",
														"type": ""
													}
												],
												"src": "1284:328:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:536:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1794:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1803:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1806:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1796:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1796:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1796:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1768:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1777:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1764:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1760:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:33:12"
															},
															"nodeType": "YulIf",
															"src": "1757:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1819:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1848:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1829:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1867:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1900:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1911:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1877:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1924:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1951:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1947:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1934:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1934:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1975:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2017:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1989:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1979:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2064:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2076:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2066:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2066:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2044:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:30:12"
															},
															"nodeType": "YulIf",
															"src": "2030:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2089:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2103:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2114:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2099:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2093:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2169:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2148:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2152:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2144:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2144:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2159:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:35:12"
															},
															"nodeType": "YulIf",
															"src": "2130:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2194:83:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2242:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2246:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2264:2:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2251:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:16:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2269:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2204:33:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:73:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1689:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1700:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1712:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1720:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1728:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1736:6:12",
														"type": ""
													}
												],
												"src": "1617:666:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2418:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2427:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2430:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2420:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2420:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2420:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2393:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2402:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2389:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2414:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:32:12"
															},
															"nodeType": "YulIf",
															"src": "2382:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2443:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2472:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2453:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2453:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2491:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2521:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2532:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2517:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2517:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2504:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2495:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2589:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2598:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2601:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2591:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2591:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2591:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2558:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2579:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2572:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2572:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2565:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2565:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2555:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2555:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2548:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2548:40:12"
															},
															"nodeType": "YulIf",
															"src": "2545:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2624:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2330:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2341:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2353:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2361:6:12",
														"type": ""
													}
												],
												"src": "2288:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2737:427:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2795:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2785:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2785:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2758:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:32:12"
															},
															"nodeType": "YulIf",
															"src": "2747:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2808:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2818:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2856:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2887:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2898:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2883:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2883:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2870:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2860:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2945:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2954:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2957:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2947:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2947:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2947:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2917:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2925:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2914:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:30:12"
															},
															"nodeType": "YulIf",
															"src": "2911:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2970:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2984:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2995:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2980:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2974:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3050:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3059:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3052:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3052:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3052:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3029:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3033:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3025:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3025:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3040:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:35:12"
															},
															"nodeType": "YulIf",
															"src": "3011:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3075:83:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3123:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3127:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3145:2:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3132:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3132:16:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3150:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3085:33:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:73:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3075:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2695:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2706:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2718:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2726:6:12",
														"type": ""
													}
												],
												"src": "2640:524:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3302:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3311:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3314:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3304:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3304:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3277:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3286:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3298:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3269:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:32:12"
															},
															"nodeType": "YulIf",
															"src": "3266:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3327:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3356:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3337:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3402:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3413:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3398:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3398:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3385:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3375:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3214:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3225:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3237:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3245:6:12",
														"type": ""
													}
												],
												"src": "3169:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3497:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3543:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3555:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3545:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3545:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3545:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3518:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3514:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3539:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:32:12"
															},
															"nodeType": "YulIf",
															"src": "3507:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3568:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3581:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3581:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3572:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3637:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3613:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3652:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3662:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3463:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3474:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3486:6:12",
														"type": ""
													}
												],
												"src": "3428:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3758:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3804:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3816:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3806:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3806:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3806:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3779:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3788:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3775:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3775:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3800:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3771:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:32:12"
															},
															"nodeType": "YulIf",
															"src": "3768:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3829:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3842:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3833:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3891:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3867:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3867:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3867:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3906:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3916:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3906:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3724:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3735:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3747:6:12",
														"type": ""
													}
												],
												"src": "3678:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4002:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4048:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4057:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4060:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4050:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4050:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4050:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4023:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4032:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:32:12"
															},
															"nodeType": "YulIf",
															"src": "4012:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4073:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4096:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4083:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3968:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3979:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"src": "3932:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4166:208:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4176:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4196:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4190:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4180:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4218:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4223:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4272:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4261:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4283:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4288:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4295:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4239:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:63:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4239:63:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4311:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4326:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4339:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4347:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4335:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4335:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4356:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4352:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4352:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4331:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4331:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4363:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4318:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4311:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4143:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4150:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4158:3:12",
														"type": ""
													}
												],
												"src": "4117:257:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4566:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4576:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4596:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4590:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4580:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4653:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4658:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4612:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4612:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4674:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4691:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4696:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "4678:5:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4712:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4734:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4728:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4716:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4784:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:17:12"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4791:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4750:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4750:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4816:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4827:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4834:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:20:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4816:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4534:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4539:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4547:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4558:3:12",
														"type": ""
													}
												],
												"src": "4379:470:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4965:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5007:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5022:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5038:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5043:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5034:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5034:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5047:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5030:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5030:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5018:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5000:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5000:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4924:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4935:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4946:4:12",
														"type": ""
													}
												],
												"src": "4854:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5265:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5275:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5293:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5298:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5289:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5289:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5285:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5279:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5320:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5343:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5331:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5313:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5313:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5387:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5395:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5383:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5430:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5408:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5408:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5462:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5473:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5458:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5458:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5478:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5451:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5491:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5516:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5528:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5539:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5524:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5524:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5499:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5491:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5210:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5221:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5229:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5237:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5245:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5256:4:12",
														"type": ""
													}
												],
												"src": "5062:488:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5660:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5672:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5683:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5668:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5660:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5702:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5727:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5720:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5720:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5713:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5695:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5619:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5630:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5641:4:12",
														"type": ""
													}
												],
												"src": "5555:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5868:98:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5885:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5878:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5908:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5933:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5945:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5956:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5941:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5916:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5908:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5837:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5848:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5859:4:12",
														"type": ""
													}
												],
												"src": "5747:219:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6246:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6231:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6231:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6251:34:12",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6224:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:18:12"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6322:20:12",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6295:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6364:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6375:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6360:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6352:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6122:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6136:4:12",
														"type": ""
													}
												],
												"src": "5971:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6564:178:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6581:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6592:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6574:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6615:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6626:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6611:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6611:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6631:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6604:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6665:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6650:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6670:30:12",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6643:58:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6710:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6722:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6733:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6718:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6718:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6710:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6541:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6555:4:12",
														"type": ""
													}
												],
												"src": "6390:352:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6921:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6938:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6949:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6931:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6931:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6972:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6983:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6968:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6968:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6988:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6961:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6961:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6961:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7011:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7022:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7007:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7007:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7027:34:12",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7000:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7000:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7082:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7078:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7098:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7071:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7071:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7114:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7126:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7114:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6898:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6912:4:12",
														"type": ""
													}
												],
												"src": "6747:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7326:175:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7343:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7354:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7336:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7427:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7412:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7432:27:12",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7405:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7469:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7303:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7317:4:12",
														"type": ""
													}
												],
												"src": "7152:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7680:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7697:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7708:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7690:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7690:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7690:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7731:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7742:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7727:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7727:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7747:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7720:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7720:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7770:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7781:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7766:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7766:18:12"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7786:34:12",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7759:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7841:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7852:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7837:18:12"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7857:14:12",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7830:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7830:42:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7881:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7893:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7904:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7889:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7881:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7657:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7671:4:12",
														"type": ""
													}
												],
												"src": "7506:408:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8093:246:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8110:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8121:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8103:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8103:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8103:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8144:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8155:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8140:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8140:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8160:2:12",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8133:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8133:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8133:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8183:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8194:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8179:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8179:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8199:34:12",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8172:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8172:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8172:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8254:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8265:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8250:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8250:18:12"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8270:26:12",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8243:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8243:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8243:54:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8306:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8318:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8329:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8314:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8306:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8070:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8084:4:12",
														"type": ""
													}
												],
												"src": "7919:420:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8518:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8535:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8546:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8528:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8528:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8528:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8569:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8580:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8565:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8565:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8585:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8558:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8558:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8558:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8608:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8619:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8604:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8604:18:12"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8624:34:12",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8597:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8597:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8597:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8679:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8690:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8675:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8675:18:12"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8695:12:12",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8668:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8668:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8668:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8717:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8729:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8740:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8725:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8717:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8495:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8509:4:12",
														"type": ""
													}
												],
												"src": "8344:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8929:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8946:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8957:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8939:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8939:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8939:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8980:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8991:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8976:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8996:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8969:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8969:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8969:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9019:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9030:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9015:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9015:18:12"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9035:34:12",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9008:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9008:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9008:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9090:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9101:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9086:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9086:18:12"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9106:11:12",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9079:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9079:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9079:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9127:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9139:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9150:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9135:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9135:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9127:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8906:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8920:4:12",
														"type": ""
													}
												],
												"src": "8755:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9339:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9356:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9367:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9349:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9349:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9390:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9401:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9386:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9386:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9406:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9379:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9379:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9379:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9429:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9440:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9425:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:18:12"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9445:34:12",
																		"type": "",
																		"value": "ERC721URIStorage: URI set of non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9418:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9418:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9418:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9500:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9511:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9496:18:12"
																	},
																	{
																		"hexValue": "6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9516:16:12",
																		"type": "",
																		"value": "existent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9489:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9489:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9489:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9542:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9554:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9565:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9542:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9316:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9330:4:12",
														"type": ""
													}
												],
												"src": "9165:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9754:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9771:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9782:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9805:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9816:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9801:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9821:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9794:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9794:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9794:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9844:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9855:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9840:18:12"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9860:34:12",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9833:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9833:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9904:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9916:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9912:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9912:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9904:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9731:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9745:4:12",
														"type": ""
													}
												],
												"src": "9580:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10115:239:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10132:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10125:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10125:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10166:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10177:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10162:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10162:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:12",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10155:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10155:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10155:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10205:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10216:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10201:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10201:18:12"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f7220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10221:34:12",
																		"type": "",
																		"value": "ERC721URIStorage: URI query for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10194:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10194:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10276:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10287:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10272:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10272:18:12"
																	},
																	{
																		"hexValue": "6e6f6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10292:19:12",
																		"type": "",
																		"value": "nonexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10265:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10265:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10265:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10321:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10333:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10329:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10321:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10092:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10106:4:12",
														"type": ""
													}
												],
												"src": "9941:413:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10533:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10550:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10561:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10543:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10543:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10543:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10584:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10595:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10580:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10580:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10600:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10573:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10573:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10573:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10623:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10634:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10619:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10639:34:12",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10612:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10612:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10612:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10694:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10705:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10690:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10690:18:12"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10710:14:12",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10683:42:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10734:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10746:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10757:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10742:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10742:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10734:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10510:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10524:4:12",
														"type": ""
													}
												],
												"src": "10359:408:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10946:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10963:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10974:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10956:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10956:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10956:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10997:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11008:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10993:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10993:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11013:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10986:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10986:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10986:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11036:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11047:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11032:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11032:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11052:34:12",
																		"type": "",
																		"value": "ERC721: transfer of token that i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11025:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11025:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11025:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11107:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11118:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11103:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11103:18:12"
																	},
																	{
																		"hexValue": "73206e6f74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11123:11:12",
																		"type": "",
																		"value": "s not own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11096:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11096:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11096:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11144:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11156:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11167:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11152:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11152:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11144:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10923:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10937:4:12",
														"type": ""
													}
												],
												"src": "10772:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11356:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11373:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11384:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11366:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11366:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11366:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11407:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11418:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11403:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11403:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11423:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11396:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11396:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11396:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11446:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11457:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11442:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11442:18:12"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11462:34:12",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11435:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11435:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11435:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11517:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11528:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11513:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11513:18:12"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11533:17:12",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11506:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11506:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11560:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11572:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11583:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11568:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11568:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11560:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11333:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11347:4:12",
														"type": ""
													}
												],
												"src": "11182:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11772:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11789:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11800:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11782:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11782:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11782:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11823:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11834:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11819:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11819:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11839:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11812:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11812:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11812:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11862:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11873:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11858:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11858:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11878:34:12",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11851:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11851:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11851:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11933:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11944:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11929:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11929:18:12"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11949:3:12",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11922:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11922:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11922:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11962:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11974:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11985:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11970:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11970:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11962:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11749:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11763:4:12",
														"type": ""
													}
												],
												"src": "11598:397:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12174:239:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12191:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12202:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12184:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12184:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12184:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12225:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12236:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12221:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12221:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12241:2:12",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12214:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12214:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12214:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12275:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12260:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12260:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12280:34:12",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12253:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12253:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12253:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12335:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12346:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12331:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12331:18:12"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12351:19:12",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12324:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12324:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12380:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12392:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12403:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12388:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12388:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12380:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12151:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12165:4:12",
														"type": ""
													}
												],
												"src": "12000:413:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12519:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12529:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12541:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12552:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12529:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12571:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12582:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12564:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12564:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12488:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12499:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12510:4:12",
														"type": ""
													}
												],
												"src": "12418:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12648:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12675:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12677:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12677:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12677:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12664:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12671:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12667:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12667:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12661:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:13:12"
															},
															"nodeType": "YulIf",
															"src": "12658:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12706:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12717:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12720:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12713:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12706:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12631:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12634:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12640:3:12",
														"type": ""
													}
												],
												"src": "12600:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12779:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12802:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12804:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12804:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12804:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12799:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12792:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12792:9:12"
															},
															"nodeType": "YulIf",
															"src": "12789:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12833:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12842:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12845:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12838:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12833:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12764:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12767:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12773:1:12",
														"type": ""
													}
												],
												"src": "12733:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12907:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12929:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12931:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12931:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12931:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12923:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12926:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12920:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12920:8:12"
															},
															"nodeType": "YulIf",
															"src": "12917:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12960:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12972:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12975:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12968:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12968:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12960:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12889:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12892:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12898:4:12",
														"type": ""
													}
												],
												"src": "12858:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13041:205:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13051:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13060:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13055:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13120:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13145:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13150:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13141:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13141:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13164:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13169:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13160:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13160:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13154:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13154:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13134:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13134:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13134:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13081:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13084:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13078:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13092:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13094:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13103:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13106:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13099:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13099:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13094:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13074:3:12",
																"statements": []
															},
															"src": "13070:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13209:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13222:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13227:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13218:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13218:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13236:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13211:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13211:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13211:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13198:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13201:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13195:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13195:13:12"
															},
															"nodeType": "YulIf",
															"src": "13192:48:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13019:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13024:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13029:6:12",
														"type": ""
													}
												],
												"src": "12988:258:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13306:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13316:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13330:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13333:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "13326:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13326:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13316:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13347:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13377:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13383:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13373:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13373:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "13351:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13424:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13426:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "13440:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13448:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13436:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13436:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13426:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13404:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13397:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:26:12"
															},
															"nodeType": "YulIf",
															"src": "13394:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13514:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13535:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13542:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13547:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13538:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13538:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13528:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13528:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13528:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13579:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13582:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13572:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13572:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13572:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13607:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13610:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13600:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13600:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13600:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13470:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13493:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13501:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13490:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13490:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13467:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13467:38:12"
															},
															"nodeType": "YulIf",
															"src": "13464:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13286:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13295:6:12",
														"type": ""
													}
												],
												"src": "13251:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13683:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13714:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13716:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13716:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13716:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13699:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13710:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13706:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13706:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13696:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13696:17:12"
															},
															"nodeType": "YulIf",
															"src": "13693:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13745:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13756:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13763:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13752:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13752:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13745:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13665:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13675:3:12",
														"type": ""
													}
												],
												"src": "13636:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13814:74:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13837:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13839:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13839:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13839:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13834:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13827:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13827:9:12"
															},
															"nodeType": "YulIf",
															"src": "13824:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13868:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13877:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13880:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "13873:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13873:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13868:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13799:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13802:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13808:1:12",
														"type": ""
													}
												],
												"src": "13776:112:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13925:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13942:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13949:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13954:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13945:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13945:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13935:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13935:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13935:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13982:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13985:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13975:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13975:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13975:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14006:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14009:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13999:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13999:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13893:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14057:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14074:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14081:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14086:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14077:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14077:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14067:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14067:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14067:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14114:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14117:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14107:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14107:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14138:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14141:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14131:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14131:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14131:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14025:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14189:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14206:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14213:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14218:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14209:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14209:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14199:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14199:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14199:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14246:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14249:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14239:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14239:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14270:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14273:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14263:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14263:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14263:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14157:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14321:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14338:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14345:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14350:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14341:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14341:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14331:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14331:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14331:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14378:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14371:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14371:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14371:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14402:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14405:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14395:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14395:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14395:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14289:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14465:87:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14530:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14539:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14542:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14532:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14532:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14532:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14488:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14499:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14510:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14515:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "14506:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14506:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14495:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14495:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14485:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14485:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14478:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14478:51:12"
															},
															"nodeType": "YulIf",
															"src": "14475:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14454:5:12",
														"type": ""
													}
												],
												"src": "14421:131:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI query for \")\n        mstore(add(headStart, 96), \"nonexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde146101e1578063c87b56dd146101f4578063cf37834314610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a22cb465146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046113d8565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e91906114c3565b61013f61013a366004611412565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a6101653660046113ae565b6103c7565b005b61016a61017a366004611258565b6104dd565b61016a61018d366004611258565b61050e565b61013f6101a0366004611412565b610529565b6101b86101b336600461120a565b6105a0565b60405190815260200161010e565b61011f610627565b61016a6101dc366004611310565b610636565b61016a6101ef366004611294565b610645565b61011f610202366004611412565b61067d565b6101b861021536600461134c565b6107f4565b610102610228366004611225565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b7906115e8565b80601f01602080910402602001604051908101604052809291908181526020018280546102e3906115e8565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b60006103458261082c565b6103ab5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103d282610529565b9050806001600160a01b0316836001600160a01b031614156104405760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103a2565b336001600160a01b038216148061045c575061045c8133610228565b6104ce5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103a2565b6104d88383610849565b505050565b6104e733826108b7565b6105035760405162461bcd60e51b81526004016103a290611528565b6104d883838361099d565b6104d883838360405180602001604052806000815250610645565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103a2565b60006001600160a01b03821661060b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103a2565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b7906115e8565b610641338383610b3d565b5050565b61064f33836108b7565b61066b5760405162461bcd60e51b81526004016103a290611528565b61067784848484610c0c565b50505050565b60606106888261082c565b6106ee5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103a2565b60008281526006602052604081208054610707906115e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610733906115e8565b80156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b50505050509050600061079e60408051602081019091526000815290565b90508051600014156107b1575092915050565b8151156107e35780826040516020016107cb929190611457565b60405160208183030381529060405292505050919050565b6107ec84610c3f565b949350505050565b6000610804600780546001019055565b600061080f60075490565b905061081b8482610d16565b6108258184610e49565b9392505050565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061087e82610529565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108c28261082c565b6109235760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103a2565b600061092e83610529565b9050806001600160a01b0316846001600160a01b031614806109695750836001600160a01b031661095e8461033a565b6001600160a01b0316145b806107ec57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166107ec565b826001600160a01b03166109b082610529565b6001600160a01b031614610a185760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103a2565b6001600160a01b038216610a7a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a2565b610a85600082610849565b6001600160a01b0383166000908152600360205260408120805460019290610aae9084906115a5565b90915550506001600160a01b0382166000908152600360205260408120805460019290610adc908490611579565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610b9f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c1784848461099d565b610c2384848484610ed4565b6106775760405162461bcd60e51b81526004016103a2906114d6565b6060610c4a8261082c565b610cae5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103a2565b6000610cc560408051602081019091526000815290565b90506000815111610ce55760405180602001604052806000815250610825565b80610cef84610fe1565b604051602001610d00929190611457565b6040516020818303038152906040529392505050565b6001600160a01b038216610d6c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103a2565b610d758161082c565b15610dc25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103a2565b6001600160a01b0382166000908152600360205260408120805460019290610deb908490611579565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610e528261082c565b610eb55760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103a2565b600082815260066020908152604090912082516104d8928401906110df565b60006001600160a01b0384163b15610fd657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f18903390899088908890600401611486565b602060405180830381600087803b158015610f3257600080fd5b505af1925050508015610f62575060408051601f3d908101601f19168201909252610f5f918101906113f5565b60015b610fbc573d808015610f90576040519150601f19603f3d011682016040523d82523d6000602084013e610f95565b606091505b508051610fb45760405162461bcd60e51b81526004016103a2906114d6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107ec565b506001949350505050565b6060816110055750506040805180820190915260018152600360fc1b602082015290565b8160005b811561102f578061101981611623565b91506110289050600a83611591565b9150611009565b60008167ffffffffffffffff81111561104a5761104a611694565b6040519080825280601f01601f191660200182016040528015611074576020820181803683370190505b5090505b84156107ec576110896001836115a5565b9150611096600a8661163e565b6110a1906030611579565b60f81b8183815181106110b6576110b661167e565b60200101906001600160f81b031916908160001a9053506110d8600a86611591565b9450611078565b8280546110eb906115e8565b90600052602060002090601f01602090048101928261110d5760008555611153565b82601f1061112657805160ff1916838001178555611153565b82800160010185558215611153579182015b82811115611153578251825591602001919060010190611138565b5061115f929150611163565b5090565b5b8082111561115f5760008155600101611164565b600067ffffffffffffffff8084111561119357611193611694565b604051601f8501601f19908116603f011681019082821181831017156111bb576111bb611694565b816040528093508581528686860111156111d457600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461120557600080fd5b919050565b60006020828403121561121c57600080fd5b610825826111ee565b6000806040838503121561123857600080fd5b611241836111ee565b915061124f602084016111ee565b90509250929050565b60008060006060848603121561126d57600080fd5b611276846111ee565b9250611284602085016111ee565b9150604084013590509250925092565b600080600080608085870312156112aa57600080fd5b6112b3856111ee565b93506112c1602086016111ee565b925060408501359150606085013567ffffffffffffffff8111156112e457600080fd5b8501601f810187136112f557600080fd5b61130487823560208401611178565b91505092959194509250565b6000806040838503121561132357600080fd5b61132c836111ee565b91506020830135801515811461134157600080fd5b809150509250929050565b6000806040838503121561135f57600080fd5b611368836111ee565b9150602083013567ffffffffffffffff81111561138457600080fd5b8301601f8101851361139557600080fd5b6113a485823560208401611178565b9150509250929050565b600080604083850312156113c157600080fd5b6113ca836111ee565b946020939093013593505050565b6000602082840312156113ea57600080fd5b8135610825816116aa565b60006020828403121561140757600080fd5b8151610825816116aa565b60006020828403121561142457600080fd5b5035919050565b600081518084526114438160208601602086016115bc565b601f01601f19169290920160200192915050565b600083516114698184602088016115bc565b83519083019061147d8183602088016115bc565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114b99083018461142b565b9695505050505050565b602081526000610825602083018461142b565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561158c5761158c611652565b500190565b6000826115a0576115a0611668565b500490565b6000828210156115b7576115b7611652565b500390565b60005b838110156115d75781810151838201526020016115bf565b838111156106775750506000910152565b600181811c908216806115fc57607f821691505b6020821081141561161d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561163757611637611652565b5060010190565b60008261164d5761164d611668565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146116c057600080fd5b5056fea26469706673582212205ca9ee18b3d458d32046205e61f36867ee40c5d52fc5bf626ef4516e029e53f264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xCF378343 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x11F PUSH2 0x627 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1294 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x287 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2A2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x330 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x305 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x330 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x313 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2 DUP3 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45C DUP2 CALLER PUSH2 0x228 JUMP JUMPDEST PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x4D8 DUP4 DUP4 PUSH2 0x849 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4E7 CALLER DUP3 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x4D8 DUP4 DUP4 DUP4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x4D8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x641 CALLER DUP4 DUP4 PUSH2 0xB3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x64F CALLER DUP4 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x677 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC0C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x688 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x733 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x780 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x755 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x780 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x763 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x79E PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x7B1 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x7E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CB SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP5 PUSH2 0xC3F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x804 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x81B DUP5 DUP3 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x825 DUP2 DUP5 PUSH2 0xE49 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x87E DUP3 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92E DUP4 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x969 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95E DUP5 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x7EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7EC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B0 DUP3 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0xA85 PUSH1 0x0 DUP3 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xAAE SWAP1 DUP5 SWAP1 PUSH2 0x15A5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xADC SWAP1 DUP5 SWAP1 PUSH2 0x1579 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xC17 DUP5 DUP5 DUP5 PUSH2 0x99D JUMP JUMPDEST PUSH2 0xC23 DUP5 DUP5 DUP5 DUP5 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC4A DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x825 JUMP JUMPDEST DUP1 PUSH2 0xCEF DUP5 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD00 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0xD75 DUP2 PUSH2 0x82C JUMP JUMPDEST ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xDEB SWAP1 DUP5 SWAP1 PUSH2 0x1579 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xE52 DUP3 PUSH2 0x82C JUMP JUMPDEST PUSH2 0xEB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x4D8 SWAP3 DUP5 ADD SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF18 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF62 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF5F SWAP2 DUP2 ADD SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFBC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x7EC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1005 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x102F JUMPI DUP1 PUSH2 0x1019 DUP2 PUSH2 0x1623 JUMP JUMPDEST SWAP2 POP PUSH2 0x1028 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1591 JUMP JUMPDEST SWAP2 POP PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A PUSH2 0x1694 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1074 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x7EC JUMPI PUSH2 0x1089 PUSH1 0x1 DUP4 PUSH2 0x15A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1096 PUSH1 0xA DUP7 PUSH2 0x163E JUMP JUMPDEST PUSH2 0x10A1 SWAP1 PUSH1 0x30 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10B6 JUMPI PUSH2 0x10B6 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10D8 PUSH1 0xA DUP7 PUSH2 0x1591 JUMP JUMPDEST SWAP5 POP PUSH2 0x1078 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x10EB SWAP1 PUSH2 0x15E8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x110D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1153 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1126 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1153 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1153 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1153 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1138 JUMP JUMPDEST POP PUSH2 0x115F SWAP3 SWAP2 POP PUSH2 0x1163 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1193 PUSH2 0x1694 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11BB JUMPI PUSH2 0x11BB PUSH2 0x1694 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x825 DUP3 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1241 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH2 0x124F PUSH1 0x20 DUP5 ADD PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1276 DUP5 PUSH2 0x11EE JUMP JUMPDEST SWAP3 POP PUSH2 0x1284 PUSH1 0x20 DUP6 ADD PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B3 DUP6 PUSH2 0x11EE JUMP JUMPDEST SWAP4 POP PUSH2 0x12C1 PUSH1 0x20 DUP7 ADD PUSH2 0x11EE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1304 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132C DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1368 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A4 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13CA DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x825 DUP2 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x825 DUP2 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1443 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1469 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x15BC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x147D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x15BC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14B9 SWAP1 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x825 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x158C JUMPI PUSH2 0x158C PUSH2 0x1652 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15A0 JUMPI PUSH2 0x15A0 PUSH2 0x1668 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B7 PUSH2 0x1652 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x677 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x161D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1637 JUMPI PUSH2 0x1637 PUSH2 0x1652 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x164D JUMPI PUSH2 0x164D PUSH2 0x1668 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xA9 0xEE XOR 0xB3 0xD4 PC 0xD3 KECCAK256 CHAINID KECCAK256 0x5E PUSH2 0xF368 PUSH8 0xEE40C5D52FC5BF62 PUSH15 0xF4516E029E53F264736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "198:687:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:300:0;;;;;;:::i;:::-;;:::i;:::-;;;5720:14:12;;5713:22;5695:41;;5683:2;5668:18;1555:300:0;;;;;;;;2473:98;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5018:32:12;;;5000:51;;4988:2;4973:18;3984:217:0;4854:203:12;3522:401:0;;;;;;:::i;:::-;;:::i;:::-;;4711:330;;;;;;:::i;:::-;;:::i;5107:179::-;;;;;;:::i;:::-;;:::i;2176:235::-;;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;:::i;:::-;;:::i;:::-;;;12564:25:12;;;12552:2;12537:18;1914:205:0;12418:177:12;2635:102:0;;;:::i;4268:153::-;;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;:::i;:::-;;:::i;467:663:3:-;;;;;;:::i;:::-;;:::i;452:430:11:-;;;;;;:::i;:::-;;:::i;4487:162:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:0;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;1555:300;1657:4;-1:-1:-1;;;;;;1692:40:0;;-1:-1:-1;;;1692:40:0;;:104;;-1:-1:-1;;;;;;;1748:48:0;;-1:-1:-1;;;1748:48:0;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1812:36:0;1673:175;1555:300;-1:-1:-1;;1555:300:0:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;4087:16;4095:7;4087;:16::i;:::-;4079:73;;;;-1:-1:-1;;;4079:73:0;;10561:2:12;4079:73:0;;;10543:21:12;10600:2;10580:18;;;10573:30;10639:34;10619:18;;;10612:62;-1:-1:-1;;;10690:18:12;;;10683:42;10742:19;;4079:73:0;;;;;;;;;-1:-1:-1;4170:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:0;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:0;:2;-1:-1:-1;;;;;3659:11:0;;;3651:57;;;;-1:-1:-1;;;3651:57:0;;11800:2:12;3651:57:0;;;11782:21:12;11839:2;11819:18;;;11812:30;11878:34;11858:18;;;11851:62;-1:-1:-1;;;11929:18:12;;;11922:31;11970:19;;3651:57:0;11598:397:12;3651:57:0;719:10:6;-1:-1:-1;;;;;3740:21:0;;;;:62;;-1:-1:-1;3765:37:0;3782:5;719:10:6;4487:162:0;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:0;;8121:2:12;3719:165:0;;;8103:21:12;8160:2;8140:18;;;8133:30;8199:34;8179:18;;;8172:62;8270:26;8250:18;;;8243:54;8314:19;;3719:165:0;7919:420:12;3719:165:0;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;4711:330::-;4900:41;719:10:6;4933:7:0;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:0;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5107:179::-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;2176:235::-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:0;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:0;;8957:2:12;2309:73:0;;;8939:21:12;8996:2;8976:18;;;8969:30;9035:34;9015:18;;;9008:62;-1:-1:-1;;;9086:18:12;;;9079:39;9135:19;;2309:73:0;8755:405:12;1914:205:0;1986:7;-1:-1:-1;;;;;2013:19:0;;2005:74;;;;-1:-1:-1;;;2005:74:0;;8546:2:12;2005:74:0;;;8528:21:12;8585:2;8565:18;;;8558:30;8624:34;8604:18;;;8597:62;-1:-1:-1;;;8675:18:12;;;8668:40;8725:19;;2005:74:0;8344:406:12;2005:74:0;-1:-1:-1;;;;;;2096:16:0;;;;;:9;:16;;;;;;;1914:205::o;2635:102::-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:6;4395:8:0;4405;4362:18;:52::i;:::-;4268:153;;:::o;5352:320::-;5521:41;719:10:6;5554:7:0;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:0;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;467:663:3:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:3;;10143:2:12;565:78:3;;;10125:21:12;10182:2;10162:18;;;10155:30;10221:34;10201:18;;;10194:62;-1:-1:-1;;;10272:18:12;;;10265:47;10329:19;;565:78:3;9941:413:12;565:78:3;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3449:9:0;;;;;;;;;-1:-1:-1;3449:9:0;;;3373:92;730:10:3;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:3;467:663;-1:-1:-1;;467:663:3:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;:::-;1093:30;467:663;-1:-1:-1;;;;467:663:3:o;452:430:11:-;525:7;581:21;:9;1032:19:7;;1050:1;1032:19;;;945:123;581:21:11;647:17;667:19;:9;918:14:7;;827:112;667:19:11;647:39;;737:22;743:4;749:9;737:5;:22::i;:::-;812:33;825:9;836:8;812:12;:33::i;:::-;865:9;452:430;-1:-1:-1;;;452:430:11:o;7144:125:0:-;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:0;:30;;;7144:125::o;10995:171::-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:0;-1:-1:-1;;;;;11069:29:0;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:0;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7544:16;7552:7;7544;:16::i;:::-;7536:73;;;;-1:-1:-1;;;7536:73:0;;7708:2:12;7536:73:0;;;7690:21:12;7747:2;7727:18;;;7720:30;7786:34;7766:18;;;7759:62;-1:-1:-1;;;7837:18:12;;;7830:42;7889:19;;7536:73:0;7506:408:12;7536:73:0;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:0;:7;-1:-1:-1;;;;;7676:16:0;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:0;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:0;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:0;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;4487:162;10324:560;10478:4;-1:-1:-1;;;;;10451:31:0;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:0;;10443:85;;;;-1:-1:-1;;;10443:85:0;;10974:2:12;10443:85:0;;;10956:21:12;11013:2;10993:18;;;10986:30;11052:34;11032:18;;;11025:62;-1:-1:-1;;;11103:18:12;;;11096:39;11152:19;;10443:85:0;10772:405:12;10443:85:0;-1:-1:-1;;;;;10546:16:0;;10538:65;;;;-1:-1:-1;;;10538:65:0;;6949:2:12;10538:65:0;;;6931:21:12;6988:2;6968:18;;;6961:30;7027:34;7007:18;;;7000:62;-1:-1:-1;;;7078:18:12;;;7071:34;7122:19;;10538:65:0;6747:400:12;10538:65:0;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:0;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:0;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:0;-1:-1:-1;;;;;10813:21:0;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;11301:307::-;11451:8;-1:-1:-1;;;;;11442:17:0;:5;-1:-1:-1;;;;;11442:17:0;;;11434:55;;;;-1:-1:-1;;;11434:55:0;;7354:2:12;11434:55:0;;;7336:21:12;7393:2;7373:18;;;7366:30;7432:27;7412:18;;;7405:55;7477:18;;11434:55:0;7152:349:12;11434:55:0;-1:-1:-1;;;;;11499:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:0;;;;;;;;;;11560:41;;5695::12;;;11560::0;;5668:18:12;11560:41:0;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:0;;;;;;;:::i;2803:329::-;2876:13;2909:16;2917:7;2909;:16::i;:::-;2901:76;;;;-1:-1:-1;;;2901:76:0;;11384:2:12;2901:76:0;;;11366:21:12;11423:2;11403:18;;;11396:30;11462:34;11442:18;;;11435:62;-1:-1:-1;;;11513:18:12;;;11506:45;11568:19;;2901:76:0;11182:411:12;2901:76:0;2988:21;3012:10;3449:9;;;;;;;;;-1:-1:-1;3449:9:0;;;3373:92;3012:10;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3032:93;2803:329;-1:-1:-1;;;2803:329:0:o;9063:372::-;-1:-1:-1;;;;;9142:16:0;;9134:61;;;;-1:-1:-1;;;9134:61:0;;9782:2:12;9134:61:0;;;9764:21:12;;;9801:18;;;9794:30;9860:34;9840:18;;;9833:62;9912:18;;9134:61:0;9580:356:12;9134:61:0;9214:16;9222:7;9214;:16::i;:::-;9213:17;9205:58;;;;-1:-1:-1;;;9205:58:0;;6592:2:12;9205:58:0;;;6574:21:12;6631:2;6611:18;;;6604:30;6670;6650:18;;;6643:58;6718:18;;9205:58:0;6390:352:12;9205:58:0;-1:-1:-1;;;;;9330:13:0;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:0;-1:-1:-1;;;;;9358:21:0;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;1277:214:3:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:3;;9367:2:12;1368:75:3;;;9349:21:12;9406:2;9386:18;;;9379:30;9445:34;9425:18;;;9418:62;-1:-1:-1;;;9496:18:12;;;9489:44;9550:19;;1368:75:3;9165:410:12;1368:75:3;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;12161:778:0:-;12311:4;-1:-1:-1;;;;;12331:13:0;;1087:20:5;1133:8;12327:606:0;;12366:72;;-1:-1:-1;;;12366:72:0;;-1:-1:-1;;;;;12366:36:0;;;;;:72;;719:10:6;;12417:4:0;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:0;;;;;;;;-1:-1:-1;;12366:72:0;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:0;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:0;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:0;-1:-1:-1;;;12488:51:0;;-1:-1:-1;12481:58:0;;12327:606;-1:-1:-1;12918:4:0;12161:778;;;;;;:::o;328:703:8:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:8;;;;;;;;;;;;-1:-1:-1;;;627:10:8;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:8;;-1:-1:-1;773:2:8;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:8;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:8;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:8;;;;;;;;-1:-1:-1;972:11:8;981:2;972:11;;:::i;:::-;;;844:150;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:631:12;78:5;108:18;149:2;141:6;138:14;135:40;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:12;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:72;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:45;;;532:1;529;522:12;491:45;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;14:631;;;;;:::o;650:173::-;718:20;;-1:-1:-1;;;;;767:31:12;;757:42;;747:70;;813:1;810;803:12;747:70;650:173;;;:::o;828:186::-;887:6;940:2;928:9;919:7;915:23;911:32;908:52;;;956:1;953;946:12;908:52;979:29;998:9;979:29;:::i;1019:260::-;1087:6;1095;1148:2;1136:9;1127:7;1123:23;1119:32;1116:52;;;1164:1;1161;1154:12;1116:52;1187:29;1206:9;1187:29;:::i;:::-;1177:39;;1235:38;1269:2;1258:9;1254:18;1235:38;:::i;:::-;1225:48;;1019:260;;;;;:::o;1284:328::-;1361:6;1369;1377;1430:2;1418:9;1409:7;1405:23;1401:32;1398:52;;;1446:1;1443;1436:12;1398:52;1469:29;1488:9;1469:29;:::i;:::-;1459:39;;1517:38;1551:2;1540:9;1536:18;1517:38;:::i;:::-;1507:48;;1602:2;1591:9;1587:18;1574:32;1564:42;;1284:328;;;;;:::o;1617:666::-;1712:6;1720;1728;1736;1789:3;1777:9;1768:7;1764:23;1760:33;1757:53;;;1806:1;1803;1796:12;1757:53;1829:29;1848:9;1829:29;:::i;:::-;1819:39;;1877:38;1911:2;1900:9;1896:18;1877:38;:::i;:::-;1867:48;;1962:2;1951:9;1947:18;1934:32;1924:42;;2017:2;2006:9;2002:18;1989:32;2044:18;2036:6;2033:30;2030:50;;;2076:1;2073;2066:12;2030:50;2099:22;;2152:4;2144:13;;2140:27;-1:-1:-1;2130:55:12;;2181:1;2178;2171:12;2130:55;2204:73;2269:7;2264:2;2251:16;2246:2;2242;2238:11;2204:73;:::i;:::-;2194:83;;;1617:666;;;;;;;:::o;2288:347::-;2353:6;2361;2414:2;2402:9;2393:7;2389:23;2385:32;2382:52;;;2430:1;2427;2420:12;2382:52;2453:29;2472:9;2453:29;:::i;:::-;2443:39;;2532:2;2521:9;2517:18;2504:32;2579:5;2572:13;2565:21;2558:5;2555:32;2545:60;;2601:1;2598;2591:12;2545:60;2624:5;2614:15;;;2288:347;;;;;:::o;2640:524::-;2718:6;2726;2779:2;2767:9;2758:7;2754:23;2750:32;2747:52;;;2795:1;2792;2785:12;2747:52;2818:29;2837:9;2818:29;:::i;:::-;2808:39;;2898:2;2887:9;2883:18;2870:32;2925:18;2917:6;2914:30;2911:50;;;2957:1;2954;2947:12;2911:50;2980:22;;3033:4;3025:13;;3021:27;-1:-1:-1;3011:55:12;;3062:1;3059;3052:12;3011:55;3085:73;3150:7;3145:2;3132:16;3127:2;3123;3119:11;3085:73;:::i;:::-;3075:83;;;2640:524;;;;;:::o;3169:254::-;3237:6;3245;3298:2;3286:9;3277:7;3273:23;3269:32;3266:52;;;3314:1;3311;3304:12;3266:52;3337:29;3356:9;3337:29;:::i;:::-;3327:39;3413:2;3398:18;;;;3385:32;;-1:-1:-1;;;3169:254:12:o;3428:245::-;3486:6;3539:2;3527:9;3518:7;3514:23;3510:32;3507:52;;;3555:1;3552;3545:12;3507:52;3594:9;3581:23;3613:30;3637:5;3613:30;:::i;3678:249::-;3747:6;3800:2;3788:9;3779:7;3775:23;3771:32;3768:52;;;3816:1;3813;3806:12;3768:52;3848:9;3842:16;3867:30;3891:5;3867:30;:::i;3932:180::-;3991:6;4044:2;4032:9;4023:7;4019:23;4015:32;4012:52;;;4060:1;4057;4050:12;4012:52;-1:-1:-1;4083:23:12;;3932:180;-1:-1:-1;3932:180:12:o;4117:257::-;4158:3;4196:5;4190:12;4223:6;4218:3;4211:19;4239:63;4295:6;4288:4;4283:3;4279:14;4272:4;4265:5;4261:16;4239:63;:::i;:::-;4356:2;4335:15;-1:-1:-1;;4331:29:12;4322:39;;;;4363:4;4318:50;;4117:257;-1:-1:-1;;4117:257:12:o;4379:470::-;4558:3;4596:6;4590:13;4612:53;4658:6;4653:3;4646:4;4638:6;4634:17;4612:53;:::i;:::-;4728:13;;4687:16;;;;4750:57;4728:13;4687:16;4784:4;4772:17;;4750:57;:::i;:::-;4823:20;;4379:470;-1:-1:-1;;;;4379:470:12:o;5062:488::-;-1:-1:-1;;;;;5331:15:12;;;5313:34;;5383:15;;5378:2;5363:18;;5356:43;5430:2;5415:18;;5408:34;;;5478:3;5473:2;5458:18;;5451:31;;;5256:4;;5499:45;;5524:19;;5516:6;5499:45;:::i;:::-;5491:53;5062:488;-1:-1:-1;;;;;;5062:488:12:o;5747:219::-;5896:2;5885:9;5878:21;5859:4;5916:44;5956:2;5945:9;5941:18;5933:6;5916:44;:::i;5971:414::-;6173:2;6155:21;;;6212:2;6192:18;;;6185:30;6251:34;6246:2;6231:18;;6224:62;-1:-1:-1;;;6317:2:12;6302:18;;6295:48;6375:3;6360:19;;5971:414::o;12000:413::-;12202:2;12184:21;;;12241:2;12221:18;;;12214:30;12280:34;12275:2;12260:18;;12253:62;-1:-1:-1;;;12346:2:12;12331:18;;12324:47;12403:3;12388:19;;12000:413::o;12600:128::-;12640:3;12671:1;12667:6;12664:1;12661:13;12658:39;;;12677:18;;:::i;:::-;-1:-1:-1;12713:9:12;;12600:128::o;12733:120::-;12773:1;12799;12789:35;;12804:18;;:::i;:::-;-1:-1:-1;12838:9:12;;12733:120::o;12858:125::-;12898:4;12926:1;12923;12920:8;12917:34;;;12931:18;;:::i;:::-;-1:-1:-1;12968:9:12;;12858:125::o;12988:258::-;13060:1;13070:113;13084:6;13081:1;13078:13;13070:113;;;13160:11;;;13154:18;13141:11;;;13134:39;13106:2;13099:10;13070:113;;;13201:6;13198:1;13195:13;13192:48;;;-1:-1:-1;;13236:1:12;13218:16;;13211:27;12988:258::o;13251:380::-;13330:1;13326:12;;;;13373;;;13394:61;;13448:4;13440:6;13436:17;13426:27;;13394:61;13501:2;13493:6;13490:14;13470:18;13467:38;13464:161;;;13547:10;13542:3;13538:20;13535:1;13528:31;13582:4;13579:1;13572:15;13610:4;13607:1;13600:15;13464:161;;13251:380;;;:::o;13636:135::-;13675:3;-1:-1:-1;;13696:17:12;;13693:43;;;13716:18;;:::i;:::-;-1:-1:-1;13763:1:12;13752:13;;13636:135::o;13776:112::-;13808:1;13834;13824:35;;13839:18;;:::i;:::-;-1:-1:-1;13873:9:12;;13776:112::o;13893:127::-;13954:10;13949:3;13945:20;13942:1;13935:31;13985:4;13982:1;13975:15;14009:4;14006:1;13999:15;14025:127;14086:10;14081:3;14077:20;14074:1;14067:31;14117:4;14114:1;14107:15;14141:4;14138:1;14131:15;14157:127;14218:10;14213:3;14209:20;14206:1;14199:31;14249:4;14246:1;14239:15;14273:4;14270:1;14263:15;14289:127;14350:10;14345:3;14341:20;14338:1;14331:31;14381:4;14378:1;14371:15;14405:4;14402:1;14395:15;14421:131;-1:-1:-1;;;;;;14495:32:12;;14485:43;;14475:71;;14542:1;14539;14532:12;14475:71;14421:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1176200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"awardItem(address,string)": "infinite",
								"balanceOf(address)": "2612",
								"getApproved(uint256)": "4799",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2645",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26753",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 359,
									"end": 409,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 359,
									"end": 409,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 359,
									"end": 409,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 359,
									"end": 409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 409,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 359,
									"end": 409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 409,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 359,
									"end": 409,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 359,
									"end": 409,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 409,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "15D85D9E539195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "57415659"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1441,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1471,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1464,
									"end": 1471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1375,
									"end": 1488,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 198,
									"end": 885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 885,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ca9ee18b3d458d32046205e61f36867ee40c5d52fc5bf626ef4516e029e53f264736f6c63430008070033",
									".code": [
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "C87B56DD"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "CF378343"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 198,
											"end": 885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5720,
											"end": 5734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5734,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5683,
											"end": 5685,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5018,
											"end": 5050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5050,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5000,
											"end": 5051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5000,
											"end": 5051,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4854,
											"end": 5057,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12564,
											"end": 12589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12564,
											"end": 12589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12564,
											"end": 12589,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12552,
											"end": 12554,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12418,
											"end": 12595,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 452,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 452,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 452,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1692,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1692,
											"end": 1848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1848,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1812,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1848,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1855,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4087,
											"end": 4103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4087,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10561,
											"end": 10563,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10543,
											"end": 10564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10600,
											"end": 10602,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10639,
											"end": 10673,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10612,
											"end": 10674,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10683,
											"end": 10725,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10742,
											"end": 10761,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10742,
											"end": 10761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4079,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4201,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3618,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11800,
											"end": 11802,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11782,
											"end": 11803,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11839,
											"end": 11841,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 11819,
											"end": 11837,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11819,
											"end": 11837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11819,
											"end": 11837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11812,
											"end": 11842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11878,
											"end": 11912,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11851,
											"end": 11913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11922,
											"end": 11953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11970,
											"end": 11989,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11970,
											"end": 11989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11598,
											"end": 11995,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3651,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3740,
											"end": 3802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3782,
											"end": 3787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3802,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3765,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8123,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8124,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8160,
											"end": 8162,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8133,
											"end": 8163,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8199,
											"end": 8233,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8234,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8296,
											"name": "PUSH",
											"source": 12,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8243,
											"end": 8297,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7919,
											"end": 8339,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3719,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3923,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4711,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4900,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4892,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5016,
											"end": 5020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5022,
											"end": 5024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5026,
											"end": 5033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5006,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5107,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5240,
											"end": 5279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2176,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8957,
											"end": 8959,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8969,
											"end": 8999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9069,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9008,
											"end": 9070,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9086,
											"end": 9104,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9086,
											"end": 9104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9086,
											"end": 9104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9118,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9154,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9135,
											"end": 9154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8755,
											"end": 9160,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8548,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8528,
											"end": 8549,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8558,
											"end": 8588,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8624,
											"end": 8658,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8597,
											"end": 8659,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8668,
											"end": 8708,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8725,
											"end": 8744,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8725,
											"end": 8744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8344,
											"end": 8750,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2005,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 2119,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2635,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2704,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2723,
											"end": 2730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4405,
											"end": 4413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4362,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5521,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5513,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5640,
											"end": 5644,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5650,
											"end": 5657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 553,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 581,
											"end": 588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 573,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 565,
											"end": 643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 565,
											"end": 643,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10143,
											"end": 10145,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 643,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10125,
											"end": 10146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10155,
											"end": 10185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10221,
											"end": 10255,
											"name": "PUSH",
											"source": 12,
											"value": "45524337323155524953746F726167653A2055524920717565727920666F7220"
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10194,
											"end": 10256,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737B732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10272,
											"end": 10290,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10272,
											"end": 10290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10272,
											"end": 10290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10265,
											"end": 10312,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10329,
											"end": 10348,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10329,
											"end": 10348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 9941,
											"end": 10354,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 565,
											"end": 643,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 680,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 680,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 680,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 680,
											"end": 699,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 709,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 740,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 709,
											"end": 740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 819,
											"end": 823,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 836,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 809,
											"end": 879,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 809,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 868,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1004,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1008,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1115,
											"end": 1122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1123,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 452,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 532,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 581,
											"end": 590,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 581,
											"end": 602,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 581,
											"end": 602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 647,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 667,
											"end": 676,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 667,
											"end": 686,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 667,
											"end": 686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 647,
											"end": 686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 647,
											"end": 686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 737,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 743,
											"end": 747,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 749,
											"end": 758,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 737,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 737,
											"end": 759,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 737,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 812,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 825,
											"end": 834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 836,
											"end": 844,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 812,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 812,
											"end": 845,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 845,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 812,
											"end": 845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 865,
											"end": 874,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 452,
											"end": 882,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 452,
											"end": 882,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7144,
											"end": 7269,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7144,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7269,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11098,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11069,
											"end": 11093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11122,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11159,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7427,
											"end": 7771,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7427,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7552,
											"end": 7559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7544,
											"end": 7560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7560,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7544,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7710,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7690,
											"end": 7711,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 7749,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7750,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7820,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 7821,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7830,
											"end": 7872,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7889,
											"end": 7908,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7889,
											"end": 7908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7506,
											"end": 7914,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7536,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7676,
											"end": 7692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7676,
											"end": 7692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7720,
											"end": 7727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7696,
											"end": 7727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 7708,
											"end": 7715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7696,
											"end": 7727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 7676,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7676,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7676,
											"end": 7763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4607,
											"end": 4642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7731,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4487,
											"end": 4649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10478,
											"end": 10482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10451,
											"end": 10482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10466,
											"end": 10473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10451,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10451,
											"end": 10482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 10976,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 10977,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11013,
											"end": 11015,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10986,
											"end": 11016,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11052,
											"end": 11086,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
										},
										{
											"begin": 11032,
											"end": 11050,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11032,
											"end": 11050,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11032,
											"end": 11050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11025,
											"end": 11087,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39903737BA1037BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11096,
											"end": 11135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11152,
											"end": 11171,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11152,
											"end": 11171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10772,
											"end": 11177,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10443,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10546,
											"end": 10562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6951,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6952,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 6990,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6961,
											"end": 6991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7027,
											"end": 7061,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7000,
											"end": 7062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7105,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6747,
											"end": 7147,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10538,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 10715,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10877,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10884,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11451,
											"end": 11459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11442,
											"end": 11447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11442,
											"end": 11459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7432,
											"end": 7459,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7460,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7152,
											"end": 7501,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 11434,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11517,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11545,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11601,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6534,
											"end": 6841,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6534,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6695,
											"end": 6699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6685,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6762,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6764,
											"end": 6771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 6778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6731,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6723,
											"end": 6834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2917,
											"end": 2924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11384,
											"end": 11386,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11387,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11423,
											"end": 11425,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11396,
											"end": 11426,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11462,
											"end": 11496,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11435,
											"end": 11497,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11513,
											"end": 11531,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11513,
											"end": 11531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11513,
											"end": 11531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11506,
											"end": 11551,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11568,
											"end": 11587,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11568,
											"end": 11587,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11182,
											"end": 11593,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2901,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3064,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3039,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3100,
											"end": 3107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3125,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2803,
											"end": 3132,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9063,
											"end": 9435,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9063,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9142,
											"end": 9158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9782,
											"end": 9784,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9824,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9860,
											"end": 9894,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9833,
											"end": 9895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9580,
											"end": 9936,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9134,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 9222,
											"end": 9229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9214,
											"end": 9230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9214,
											"end": 9230,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 9214,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6594,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6634,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6670,
											"end": 6700,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6390,
											"end": 6742,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 9205,
											"end": 9263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9339,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9365,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9428,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9395,
											"end": 9428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9428,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 9063,
											"end": 9435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9063,
											"end": 9435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9063,
											"end": 9435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9406,
											"end": 9408,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9379,
											"end": 9409,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9445,
											"end": 9479,
											"name": "PUSH",
											"source": 12,
											"value": "45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9418,
											"end": 9480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9489,
											"end": 9533,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 9165,
											"end": 9575,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12331,
											"end": 12344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 12366,
											"end": 12402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12423,
											"end": 12430,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12423,
											"end": 12430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12432,
											"end": 12437,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12432,
											"end": 12437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 12366,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12605,
											"end": 12618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12605,
											"end": 12618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 12601,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12819,
											"end": 12825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12800,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12796,
											"end": 12811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 12362,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12539,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12488,
											"end": 12539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12481,
											"end": 12539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 12481,
											"end": 12539,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 12327,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12939,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 149,
											"end": 151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 141,
											"end": 147,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 138,
											"end": 152,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 135,
											"end": 175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 135,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 135,
											"end": 175,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 230,
											"end": 232,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 233,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 198,
											"end": 200,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 284,
											"end": 299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 280,
											"end": 304,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 280,
											"end": 304,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 276,
											"end": 309,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 272,
											"end": 314,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 260,
											"end": 315,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 260,
											"end": 315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 260,
											"end": 315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 330,
											"end": 348,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 350,
											"end": 372,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 327,
											"end": 373,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 324,
											"end": 396,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 324,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 324,
											"end": 396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 416,
											"end": 426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 436,
											"end": 451,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 436,
											"end": 451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 515,
											"end": 518,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 501,
											"end": 504,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 497,
											"end": 513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 494,
											"end": 519,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 491,
											"end": 536,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 491,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 491,
											"end": 536,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 582,
											"end": 588,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 545,
											"end": 589,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 609,
											"end": 628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 605,
											"end": 635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 598,
											"end": 639,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 718,
											"end": 738,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 738,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 767,
											"end": 798,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 798,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 757,
											"end": 799,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 757,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 747,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 803,
											"end": 815,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 747,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 650,
											"end": 823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 1014,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 828,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 887,
											"end": 893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 919,
											"end": 926,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 915,
											"end": 938,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 911,
											"end": 943,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 908,
											"end": 960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 908,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 908,
											"end": 960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 956,
											"end": 957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 946,
											"end": 958,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 908,
											"end": 960,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 908,
											"end": 960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 979,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 998,
											"end": 1007,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 979,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 979,
											"end": 1008,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1134,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1146,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1119,
											"end": 1151,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1166,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1206,
											"end": 1215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1269,
											"end": 1271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1254,
											"end": 1272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1225,
											"end": 1273,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1225,
											"end": 1273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1383,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1498,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1507,
											"end": 1555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1507,
											"end": 1555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1564,
											"end": 1606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1564,
											"end": 1606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 1734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1789,
											"end": 1792,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1787,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1760,
											"end": 1793,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1804,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1808,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1848,
											"end": 1857,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1911,
											"end": 1913,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1909,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1915,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1966,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2017,
											"end": 2019,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1989,
											"end": 2021,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2062,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2063,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2066,
											"end": 2078,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2167,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2267,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2194,
											"end": 2277,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2194,
											"end": 2277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2194,
											"end": 2277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2400,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2412,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2417,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 2432,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2532,
											"end": 2534,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2517,
											"end": 2535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2536,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2585,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2601,
											"end": 2602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2629,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2797,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2902,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2925,
											"end": 2943,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2917,
											"end": 2923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2914,
											"end": 2944,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2955,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2980,
											"end": 3002,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2980,
											"end": 3002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3021,
											"end": 3048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3150,
											"end": 3157,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3148,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3129,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3158,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3169,
											"end": 3423,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3169,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3300,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3269,
											"end": 3301,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3366,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3415,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3417,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3417,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3423,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3428,
											"end": 3673,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3428,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3537,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3542,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3604,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 3637,
											"end": 3642,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3613,
											"end": 3643,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3927,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3678,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3786,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 3798,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3803,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 3858,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4046,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4042,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4047,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4058,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4202,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4229,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4211,
											"end": 4230,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4288,
											"end": 4292,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4293,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4276,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4277,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4356,
											"end": 4358,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4335,
											"end": 4350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4331,
											"end": 4360,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4367,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4368,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4602,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4590,
											"end": 4603,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4653,
											"end": 4656,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4650,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4634,
											"end": 4651,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4788,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4789,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4772,
											"end": 4789,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5331,
											"end": 5346,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5331,
											"end": 5346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5331,
											"end": 5346,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5347,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5356,
											"end": 5399,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5442,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5442,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5473,
											"end": 5475,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5458,
											"end": 5476,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5544,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5747,
											"end": 5966,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 5747,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5878,
											"end": 5899,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5859,
											"end": 5863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5954,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5933,
											"end": 5939,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5916,
											"end": 5960,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5971,
											"end": 6385,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 5971,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6224,
											"end": 6286,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6295,
											"end": 6343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6378,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6385,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12000,
											"end": 12413,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 12000,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12202,
											"end": 12204,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12184,
											"end": 12205,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12205,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12241,
											"end": 12243,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 12244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12280,
											"end": 12314,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 12275,
											"end": 12277,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12253,
											"end": 12315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12346,
											"end": 12348,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12331,
											"end": 12349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12331,
											"end": 12349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12324,
											"end": 12371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12406,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 12388,
											"end": 12407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12388,
											"end": 12407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12000,
											"end": 12413,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12600,
											"end": 12728,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 12600,
											"end": 12728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12640,
											"end": 12643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12672,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12667,
											"end": 12673,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 12664,
											"end": 12665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 12674,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12658,
											"end": 12697,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12658,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 12658,
											"end": 12697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 12677,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 12677,
											"end": 12695,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12677,
											"end": 12695,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 12677,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12713,
											"end": 12722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12713,
											"end": 12722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12600,
											"end": 12728,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12733,
											"end": 12853,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 12733,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12773,
											"end": 12774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12799,
											"end": 12800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12789,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12789,
											"end": 12824,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12804,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12804,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 12804,
											"end": 12822,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12804,
											"end": 12822,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12804,
											"end": 12822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12838,
											"end": 12847,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12838,
											"end": 12847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12733,
											"end": 12853,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12858,
											"end": 12983,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 12858,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12898,
											"end": 12902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12926,
											"end": 12927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12920,
											"end": 12928,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12917,
											"end": 12951,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12917,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12917,
											"end": 12951,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12931,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12931,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 12931,
											"end": 12949,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12931,
											"end": 12949,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12931,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12968,
											"end": 12977,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12968,
											"end": 12977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12858,
											"end": 12983,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12988,
											"end": 13246,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12988,
											"end": 13246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13060,
											"end": 13061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13081,
											"end": 13082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13078,
											"end": 13091,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13171,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13171,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13154,
											"end": 13172,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13152,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13152,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13106,
											"end": 13108,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13099,
											"end": 13109,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 13070,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13201,
											"end": 13207,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13198,
											"end": 13199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13195,
											"end": 13208,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13192,
											"end": 13240,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13192,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 13192,
											"end": 13240,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13236,
											"end": 13237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13218,
											"end": 13234,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13218,
											"end": 13234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12988,
											"end": 13246,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13251,
											"end": 13631,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 13251,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13330,
											"end": 13331,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13326,
											"end": 13338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13338,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13385,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13394,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 13394,
											"end": 13455,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13448,
											"end": 13452,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 13440,
											"end": 13446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13436,
											"end": 13453,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13426,
											"end": 13453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13426,
											"end": 13453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13394,
											"end": 13455,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 13394,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13501,
											"end": 13503,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13490,
											"end": 13504,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13470,
											"end": 13488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13467,
											"end": 13505,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13625,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 13464,
											"end": 13625,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13547,
											"end": 13557,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 13542,
											"end": 13545,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13538,
											"end": 13558,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13536,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13528,
											"end": 13559,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13586,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 13579,
											"end": 13580,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13572,
											"end": 13587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13610,
											"end": 13614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13625,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 13464,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13631,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13636,
											"end": 13771,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 13636,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13675,
											"end": 13678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13696,
											"end": 13713,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13696,
											"end": 13713,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13693,
											"end": 13736,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13693,
											"end": 13736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13693,
											"end": 13736,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13752,
											"end": 13765,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13752,
											"end": 13765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13636,
											"end": 13771,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13776,
											"end": 13888,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 13776,
											"end": 13888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13808,
											"end": 13809,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13834,
											"end": 13835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13824,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 13824,
											"end": 13859,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13776,
											"end": 13888,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13893,
											"end": 14020,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 13893,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13954,
											"end": 13964,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13942,
											"end": 13943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13935,
											"end": 13966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13985,
											"end": 13989,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 13982,
											"end": 13983,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13975,
											"end": 13990,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14013,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14006,
											"end": 14007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13999,
											"end": 14014,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14025,
											"end": 14152,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 14025,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14086,
											"end": 14096,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14077,
											"end": 14097,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 14074,
											"end": 14075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14067,
											"end": 14098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14117,
											"end": 14121,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14114,
											"end": 14115,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14107,
											"end": 14122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14141,
											"end": 14145,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14138,
											"end": 14139,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14131,
											"end": 14146,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14284,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 14157,
											"end": 14284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14218,
											"end": 14228,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 14213,
											"end": 14216,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14209,
											"end": 14229,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 14206,
											"end": 14207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14199,
											"end": 14230,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14253,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 14246,
											"end": 14247,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14239,
											"end": 14254,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14273,
											"end": 14277,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14270,
											"end": 14271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14263,
											"end": 14278,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14289,
											"end": 14416,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 14289,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14350,
											"end": 14360,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 14345,
											"end": 14348,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14341,
											"end": 14361,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14339,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14331,
											"end": 14362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14381,
											"end": 14385,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 14378,
											"end": 14379,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14371,
											"end": 14386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14405,
											"end": 14409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14402,
											"end": 14403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14410,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14552,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 14421,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14495,
											"end": 14527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14527,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14485,
											"end": 14528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14485,
											"end": 14528,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14542,
											"end": 14543,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14540,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14532,
											"end": 14544,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 14475,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14552,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"awardItem(address,string)": "cf378343",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"awardItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WavyNFT.sol\":\"WavyNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/WavyNFT.sol\":{\"keccak256\":\"0x93bba7f5c48e2f9da3592a87b3fe2c00b65ced6e6e2e60ea4805e227f6228924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45156a36ff63919a0d49b5f828b85232572b79e71dc88a2bde1be88735c96bcd\",\"dweb:/ipfs/QmQZi42e7WcSpzzoHhDanAdfdbpkrRYK26ypHv4aeJJZ7j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 977,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 1764,
								"contract": "contracts/WavyNFT.sol:WavyNFT",
								"label": "_tokenIds",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1444_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1444_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1443,
										"contract": "contracts/WavyNFT.sol:WavyNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1416
						],
						"Context": [
							1438
						],
						"ERC165": [
							1739
						],
						"ERC721": [
							830
						],
						"IERC165": [
							1751
						],
						"IERC721": [
							946
						],
						"IERC721Metadata": [
							1119
						],
						"IERC721Receiver": [
							964
						],
						"Strings": [
							1715
						]
					},
					"id": 831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 947,
							"src": "117:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 965,
							"src": "141:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 1120,
							"src": "173:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 1417,
							"src": "216:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 1439,
							"src": "250:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 1716,
							"src": "284:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 1740,
							"src": "318:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1438,
										"src": "632:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1739,
										"src": "641:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "641:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 946,
										"src": "649:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "649:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1119,
										"src": "658:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "658:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "366:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 830,
							"linearizedBaseContracts": [
								830,
								1119,
								946,
								1739,
								1751,
								1438
							],
							"name": "ERC721",
							"nameLocation": "622:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1416,
										"src": "686:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "680:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1715,
										"src": "717:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "711:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "729:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "776:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "761:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "761:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "823:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "808:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "808:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "919:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "883:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "883:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "902:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1013:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "977:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "977:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "996:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1114:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "1078:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 38,
										"keyType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1086:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1078:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1097:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1237:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "1184:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1192:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1184:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 43,
											"keyType": {
												"id": 41,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1211:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1203:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 42,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1222:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1431:57:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1441:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1449:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1441:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1441:13:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1464:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1464:17:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1262:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1401:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1387:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1422:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1408:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:44:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:0:0"
									},
									"scope": 830,
									"src": "1375:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1738,
										1750
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1663:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 73,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1692:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 75,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "1712:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$946_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$946_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 74,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1707:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1707:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$946",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1707:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1692:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 81,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "1768:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1119_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1119_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 80,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1763:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1763:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1119",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1763:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1748:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1692:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 88,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1836:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 86,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1812:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$830_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1738,
															"src": "1812:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1812:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1692:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 91,
												"nodeType": "Return",
												"src": "1673:175:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1494:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1564:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 67,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1739,
												"src": "1631:6:0"
											},
											{
												"id": 68,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1751,
												"src": "1639:7:0"
											}
										],
										"src": "1622:25:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1589:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1582:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1657:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1657:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:6:0"
									},
									"scope": 830,
									"src": "1555:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										871
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1995:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2013:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2030:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2022:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2022:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2022:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2013:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2034:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2005:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2005:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2005:74:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 112,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2096:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"id": 113,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2106:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2096:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 115,
												"nodeType": "Return",
												"src": "2089:23:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1861:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1923:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1968:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1941:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1933:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:15:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1986:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:9:0"
									},
									"scope": 830,
									"src": "1914:205:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										879
									],
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2257:154:0",
										"statements": [
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2275:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2267:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 126,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2267:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"baseExpression": {
														"id": 128,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 130,
													"indexExpression": {
														"id": 129,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2283:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2267:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2317:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2334:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2326:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2326:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2326:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2317:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2338:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2309:73:0"
											},
											{
												"expression": {
													"id": 142,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "2399:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 125,
												"id": 143,
												"nodeType": "Return",
												"src": "2392:12:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2125:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2185:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2230:8:0"
									},
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2201:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2193:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:17:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:0"
									},
									"scope": 830,
									"src": "2176:235:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1104
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2542:29:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2559:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "2552:12:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2417:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2482:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2509:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2527:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:15:0"
									},
									"scope": 830,
									"src": "2473:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2706:31:0",
										"statements": [
											{
												"expression": {
													"id": 162,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 161,
												"id": 163,
												"nodeType": "Return",
												"src": "2716:14:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2577:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2644:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2650:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2691:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:15:0"
									},
									"scope": 830,
									"src": "2635:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1118
									],
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2891:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 176,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "2917:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 175,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "2909:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2909:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2927:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2901:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2901:76:0"
											},
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3002:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "2988:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 181,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2988:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 183,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "3012:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2988:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 188,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "3045:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3039:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 186,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3039:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3039:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3039:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3063:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3039:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3123:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3039:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 197,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "3091:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 198,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "3100:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1597,
																			"src": "3100:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3100:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 195,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3074:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3074:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3074:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 193,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3067:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3067:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 205,
												"nodeType": "Return",
												"src": "3032:93:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2743:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2812:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2858:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2829:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2821:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:17:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2876:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:15:0"
									},
									"scope": 830,
									"src": "2803:329:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "3439:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3456:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 212,
												"id": 214,
												"nodeType": "Return",
												"src": "3449:9:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "3138:230:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3382:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:2:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3424:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3424:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3423:15:0"
									},
									"scope": 830,
									"src": "3373:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										907
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "3592:331:0",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3610:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "3602:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 225,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3602:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"arguments": [
														{
															"id": 229,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3633:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 227,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3618:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3618:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3618:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3602:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 233,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "3659:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 234,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "3665:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3659:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3672:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3651:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3651:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "3651:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 240,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "3740:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3740:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 242,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "3756:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3740:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 245,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "3782:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 246,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "3789:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3789:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 244,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "3765:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3765:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3740:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3816:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3719:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "3719:165:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3904:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3895:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3895:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3895:21:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3471:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3531:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3583:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3547:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3539:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3559:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3551:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:29:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3592:0:0"
									},
									"scope": 830,
									"src": "3522:401:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										915
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "4069:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 270,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "4095:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 269,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "4087:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4087:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4105:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4079:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "4079:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 275,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4170:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 277,
													"indexExpression": {
														"id": 276,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4170:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 267,
												"id": 278,
												"nodeType": "Return",
												"src": "4163:31:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "3929:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3993:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 264,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4042:8:0"
									},
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4013:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4005:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:17:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4060:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4059:9:0"
									},
									"scope": 830,
									"src": "3984:217:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										923
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "4352:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 290,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "4381:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4381:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4395:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4405:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 289,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "4362:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4362:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "4362:52:0"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "4207:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4277:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 287,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4343:8:0"
									},
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4303:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4295:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4313:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:33:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4352:0:0"
									},
									"scope": 830,
									"src": "4268:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										933
									],
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "4590:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 308,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4607:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 310,
														"indexExpression": {
															"id": 309,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4626:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4607:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 312,
													"indexExpression": {
														"id": 311,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "4633:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4607:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 307,
												"id": 313,
												"nodeType": "Return",
												"src": "4600:42:0"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "4427:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4496:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 304,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4566:8:0"
									},
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4513:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4536:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4528:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:33:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4584:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4584:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4583:6:0"
									},
									"scope": 830,
									"src": "4487:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "4830:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 328,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "4919:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4919:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 330,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "4933:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 327,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "4900:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4900:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4943:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "4892:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5016:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "5022:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5026:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5006:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "5006:28:0"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "4655:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4720:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4821:8:0"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4742:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4772:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4764:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4732:73:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4830:0:0"
									},
									"scope": 830,
									"src": "4711:330:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										889
									],
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "5230:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 354,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5257:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5263:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5276:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 353,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															361,
															391
														],
														"referencedDeclaration": 391,
														"src": "5240:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5240:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "5240:39:0"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "5047:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5116:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5221:8:0"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5150:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5142:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5172:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5164:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5132:73:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5230:0:0"
									},
									"scope": 830,
									"src": "5107:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										945
									],
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "5503:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 376,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "5540:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5540:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 378,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5554:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 375,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "5521:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5521:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5564:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5513:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "5513:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5646:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 387,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 383,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "5626:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5626:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5626:39:0"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5292:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5361:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5494:8:0"
									},
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5395:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5387:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5417:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5409:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5467:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5454:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5454:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5377:101:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5503:0:0"
									},
									"scope": 830,
									"src": "5352:320:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "6675:166:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6701:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6705:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 403,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6685:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6685:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "6685:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 411,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6754:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 412,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "6760:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "6764:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 414,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "6773:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 410,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "6731:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6731:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6781:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6723:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "6723:111:0"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "5678:851:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6543:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6574:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "6566:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6596:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "6588:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "6608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "6633:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6633:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6556:101:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6675:0:0"
									},
									"scope": 830,
									"src": "6534:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "7215:54:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 428,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "7232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 430,
														"indexExpression": {
															"id": 429,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7232:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7260:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7252:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7252:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7232:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 436,
												"nodeType": "Return",
												"src": "7225:37:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "6847:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7153:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7169:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "7161:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7160:17:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "7209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7208:6:0"
									},
									"scope": 830,
									"src": "7144:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "7526:245:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 450,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "7552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 449,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "7544:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7544:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7562:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7536:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7536:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "7536:73:0"
											},
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7627:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "7619:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7619:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"arguments": [
														{
															"id": 459,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "7650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 457,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "7635:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "7635:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7635:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7619:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 462,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "7676:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 463,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7687:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7676:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 466,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "7708:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 465,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "7696:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7696:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 468,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "7720:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7696:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7676:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 472,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7748:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 473,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "7755:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 471,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "7731:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7731:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7676:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 476,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7675:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 447,
												"id": 477,
												"nodeType": "Return",
												"src": "7668:96:0"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "7275:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7436:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7463:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7455:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7480:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7472:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7454:34:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7520:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:0"
									},
									"scope": 830,
									"src": "7427:344:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "8166:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "8186:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "8190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8199:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 487,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															494,
															523
														],
														"referencedDeclaration": 523,
														"src": "8176:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8176:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "8176:26:0"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "7777:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8110:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8120:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8140:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8132:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:29:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8166:0:0"
									},
									"scope": 830,
									"src": "8101:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "8545:196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8561:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "8565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "8555:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8555:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8555:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8635:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8627:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 511,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8627:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8627:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 515,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8639:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 516,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "8643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 517,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "8652:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 510,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "8604:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8604:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8672:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8583:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8583:151:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "8215:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8439:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8466:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8458:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8486:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8478:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8516:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8503:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8503:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8448:79:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8545:0:0"
									},
									"scope": 830,
									"src": "8430:311:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "9124:311:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "9142:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9156:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9148:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9148:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9148:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9142:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9160:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9134:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9134:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9213:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 543,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "9222:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 542,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "9214:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9214:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9232:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9205:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9205:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "9205:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9303:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9295:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 550,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9295:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9295:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9307:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "9274:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9274:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "9274:45:0"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 558,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "9330:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 560,
														"indexExpression": {
															"id": 559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9340:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9330:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9330:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "9330:18:0"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 564,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "9358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 566,
														"indexExpression": {
															"id": 565,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9358:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 567,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "9377:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9358:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "9358:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9404:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9404:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9404:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9416:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "9395:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9395:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "EmitStatement",
												"src": "9390:38:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "8747:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9072:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "9078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9098:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "9090:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9077:29:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9124:0:0"
									},
									"scope": 830,
									"src": "9063:372:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "9701:299:0",
										"statements": [
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9719:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 630,
														"src": "9711:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 586,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9711:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 592,
												"initialValue": {
													"arguments": [
														{
															"id": 590,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 588,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "9727:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "9727:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9727:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9711:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 594,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "9782:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9797:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 595,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9789:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9789:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "9761:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9761:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "9761:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9856:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 603,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9856:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9856:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9868:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "9847:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9847:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "9847:29:0"
											},
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 610,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "9887:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 612,
														"indexExpression": {
															"id": 611,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "9897:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9887:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9907:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9887:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "9887:21:0"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9918:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 616,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "9925:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 618,
														"indexExpression": {
															"id": 617,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9925:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "9918:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 622,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "9966:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9981:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9973:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 623,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9973:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9973:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "9957:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9957:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "EmitStatement",
												"src": "9952:41:0"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "9441:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9661:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "9667:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9666:17:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9701:0:0"
									},
									"scope": 830,
									"src": "9652:348:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "10433:451:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 644,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "10466:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 642,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "10451:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "10451:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10451:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 646,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "10478:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10451:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10484:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															},
															"value": "ERC721: transfer of token that is not own"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10443:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "10443:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 652,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "10546:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10560:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 653,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10552:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10552:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10546:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10564:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10538:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "10538:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "10635:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "10641:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "10645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 661,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "10614:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10614:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "10614:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10732:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10724:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 668,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10724:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10724:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "10736:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "10715:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10715:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "10715:29:0"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 675,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "10755:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 677,
														"indexExpression": {
															"id": 676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "10765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10755:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10755:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "10755:20:0"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 681,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "10785:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 683,
														"indexExpression": {
															"id": 682,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "10795:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10785:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10802:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10785:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "10785:18:0"
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "10813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "10821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10813:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "10832:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10813:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "10813:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "10859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "10865:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "10869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "10850:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10850:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "10845:32:0"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "10006:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10333:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "10352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "10374:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10402:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "10394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:73:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10433:0:0"
									},
									"scope": 830,
									"src": "10324:560:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "11059:107:0",
										"statements": [
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 708,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "11069:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 710,
														"indexExpression": {
															"id": 709,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "11085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11069:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 711,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "11096:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11069:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "11069:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 717,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "11137:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 715,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "11122:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "11122:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11122:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "11147:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "11151:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 714,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "11113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11113:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "EmitStatement",
												"src": "11108:51:0"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "10890:100:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11021:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "11013:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "11025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11012:29:0"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11059:0:0"
									},
									"scope": 830,
									"src": "10995:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "11424:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 735,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "11442:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 736,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "11451:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11442:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11461:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11434:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "11434:55:0"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 741,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "11499:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 744,
															"indexExpression": {
																"id": 742,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "11518:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11499:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 745,
														"indexExpression": {
															"id": 743,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "11525:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11499:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 746,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "11537:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11499:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "11499:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 750,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "11575:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "11582:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "11592:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 749,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "11560:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11560:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "EmitStatement",
												"src": "11555:46:0"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "11172:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "11310:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11346:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "11338:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11369:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "11361:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11392:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "11387:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11387:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11328:78:0"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11424:0:0"
									},
									"scope": 830,
									"src": "11301:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "12317:622:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 770,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "12331:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1139,
														"src": "12331:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12331:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 815,
													"nodeType": "Block",
													"src": "12897:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12918:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 769,
															"id": 814,
															"nodeType": "Return",
															"src": "12911:11:0"
														}
													]
												},
												"id": 816,
												"nodeType": "IfStatement",
												"src": "12327:606:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "12348:543:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 792,
																		"nodeType": "Block",
																		"src": "12463:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 790,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 786,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 784,
																						"src": "12488:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 787,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 964,
																								"src": "12498:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$964_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 788,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 963,
																							"src": "12498:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 789,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "12498:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12488:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 769,
																				"id": 791,
																				"nodeType": "Return",
																				"src": "12481:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 793,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 785,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 784,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12455:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 793,
																				"src": "12448:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 783,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12448:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12447:15:0"
																	},
																	"src": "12439:115:0"
																},
																{
																	"block": {
																		"id": 809,
																		"nodeType": "Block",
																		"src": "12583:298:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 797,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 795,
																							"src": "12605:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 798,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12605:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 799,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12622:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12605:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 807,
																					"nodeType": "Block",
																					"src": "12732:135:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "12763:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "12800:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12804:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "12796:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12796:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12819:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "12813:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12813:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "12789:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12789:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "12789:38:0"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 795,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12804:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 795,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12819:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 806,
																							"nodeType": "InlineAssembly",
																							"src": "12754:95:0"
																						}
																					]
																				},
																				"id": 808,
																				"nodeType": "IfStatement",
																				"src": "12601:266:0",
																				"trueBody": {
																					"id": 805,
																					"nodeType": "Block",
																					"src": "12625:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 802,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12654:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 801,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "12647:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 803,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12647:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 804,
																							"nodeType": "ExpressionStatement",
																							"src": "12647:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 810,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 796,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 795,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "12575:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 810,
																				"src": "12562:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 794,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "12562:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12561:21:0"
																	},
																	"src": "12555:326:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 777,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12403:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12403:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 779,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "12417:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 780,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "12423:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 781,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "12432:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 774,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 761,
																				"src": "12382:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 773,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "12366:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$964_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12366:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$964",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 963,
																	"src": "12366:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12366:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 811,
															"nodeType": "TryStatement",
															"src": "12362:519:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "11614:542:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12170:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12210:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "12202:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12232:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "12224:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12252:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "12244:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12282:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "12269:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12192:101:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "12311:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12310:6:0"
									},
									"scope": 830,
									"src": "12161:778:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "13615:2:0",
										"statements": []
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "12945:545:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13504:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "13534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13564:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "13556:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13584:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "13576:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13524:73:0"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13615:0:0"
									},
									"scope": 830,
									"src": "13495:122:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 831,
							"src": "613:13006:0",
							"usedErrors": []
						}
					],
					"src": "92:13528:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1751
						],
						"IERC721": [
							946
						]
					},
					"id": 947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 832,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 833,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 947,
							"sourceUnit": 1752,
							"src": "118:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 835,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "256:7:1"
									},
									"id": 836,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 834,
								"nodeType": "StructuredDocumentation",
								"src": "167:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 946,
							"linearizedBaseContracts": [
								946,
								1751
							],
							"name": "IERC721",
							"nameLocation": "245:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "270:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 845,
									"name": "Transfer",
									"nameLocation": "369:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "394:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "378:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "416:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "400:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "436:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "420:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:67:1"
									},
									"src": "363:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "451:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 854,
									"name": "Approval",
									"nameLocation": "556:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "581:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "565:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "604:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "588:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "630:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "614:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:74:1"
									},
									"src": "550:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "645:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 863,
									"name": "ApprovalForAll",
									"nameLocation": "773:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "804:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "788:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "827:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "811:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "837:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:64:1"
									},
									"src": "767:85:1"
								},
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "858:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "966:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "958:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:15:1"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:17:1"
									},
									"scope": 946,
									"src": "939:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1019:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1164:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1180:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1172:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:17:1"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1220:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1212:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:15:1"
									},
									"scope": 946,
									"src": "1155:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "1233:690:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1971:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1963:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1993:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1985:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2013:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2005:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:73:1"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:0:1"
									},
									"scope": 946,
									"src": "1928:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "2042:504:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2560:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2590:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2582:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2612:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2604:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2632:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2624:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:73:1"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:0:1"
									},
									"scope": 946,
									"src": "2551:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "2661:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3127:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3143:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3135:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3155:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3147:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:29:1"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3172:0:1"
									},
									"scope": 946,
									"src": "3118:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "3179:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3332:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3352:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3344:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:17:1"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3392:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3384:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:18:1"
									},
									"scope": 946,
									"src": "3323:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "3408:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3731:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3757:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3749:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3772:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3767:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 919,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:34:1"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:1"
									},
									"scope": 946,
									"src": "3722:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "3798:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3950:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3990:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3982:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:33:1"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4023:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4023:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:6:1"
									},
									"scope": 946,
									"src": "3941:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "4035:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4605:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4639:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "4631:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4661:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "4653:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4681:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "4673:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4713:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "4698:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4698:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:102:1"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4732:0:1"
									},
									"scope": 946,
									"src": "4596:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 947,
							"src": "235:4500:1",
							"usedErrors": []
						}
					],
					"src": "93:4643:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							964
						]
					},
					"id": 965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "126:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 964,
							"linearizedBaseContracts": [
								964
							],
							"name": "IERC721Receiver",
							"nameLocation": "289:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "311:485:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "810:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "844:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "836:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "870:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "862:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "892:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "884:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "924:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "909:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "909:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:108:2"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "953:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 960,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "953:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:8:2"
									},
									"scope": 964,
									"src": "801:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 965,
							"src": "279:684:2",
							"usedErrors": []
						}
					],
					"src": "101:863:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							1416
						],
						"Context": [
							1438
						],
						"ERC165": [
							1739
						],
						"ERC721": [
							830
						],
						"ERC721URIStorage": [
							1092
						],
						"IERC165": [
							1751
						],
						"IERC721": [
							946
						],
						"IERC721Metadata": [
							1119
						],
						"IERC721Receiver": [
							964
						],
						"Strings": [
							1715
						]
					},
					"id": 1093,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 966,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 967,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1093,
							"sourceUnit": 831,
							"src": "138:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 969,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 830,
										"src": "271:6:3"
									},
									"id": 970,
									"nodeType": "InheritanceSpecifier",
									"src": "271:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 968,
								"nodeType": "StructuredDocumentation",
								"src": "163:69:3",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 1092,
							"linearizedBaseContracts": [
								1092,
								830,
								1119,
								946,
								1739,
								1751,
								1438
							],
							"name": "ERC721URIStorage",
							"nameLocation": "251:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 973,
									"libraryName": {
										"id": 971,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1715,
										"src": "290:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "284:26:3",
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 977,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "390:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1092,
									"src": "355:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 976,
										"keyType": {
											"id": 974,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "363:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "355:26:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 975,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "374:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										207
									],
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "555:575:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 988,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "581:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 987,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "573:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "573:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "591:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															},
															"value": "ERC721URIStorage: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "565:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "565:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "565:78:3"
											},
											{
												"assignments": [
													994
												],
												"declarations": [
													{
														"constant": false,
														"id": 994,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "668:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "654:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 993,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "654:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"baseExpression": {
														"id": 995,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "680:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 997,
													"indexExpression": {
														"id": 996,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "691:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "680:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "654:45:3"
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "723:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "709:18:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 999,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "709:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1001,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "730:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "709:31:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1006,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "819:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "813:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "813:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "835:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "813:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "809:70:3",
												"trueBody": {
													"id": 1013,
													"nodeType": "Block",
													"src": "838:41:3",
													"statements": [
														{
															"expression": {
																"id": 1011,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "859:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 985,
															"id": 1012,
															"nodeType": "Return",
															"src": "852:16:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1017,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "987:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "981:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1015,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "981:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "981:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "981:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "977:106:3",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "1010:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1026,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "1055:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1027,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 994,
																				"src": "1061:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1024,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1038:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1038:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1038:33:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1031:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1022,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1031:6:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1031:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 985,
															"id": 1030,
															"nodeType": "Return",
															"src": "1024:48:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1033,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1100:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1092_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 207,
														"src": "1100:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 985,
												"id": 1037,
												"nodeType": "Return",
												"src": "1093:30:3"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "407:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "476:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 982,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "522:8:3"
									},
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "493:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "485:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:17:3"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 1092,
									"src": "467:663:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "1358:133:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1049,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "1384:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1048,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1376:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1368:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "1368:75:3"
											},
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1054,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1453:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1056,
														"indexExpression": {
															"id": 1055,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1464:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1453:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1057,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "1475:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1453:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "1453:31:3"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "1136:136:3",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1286:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1307:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1299:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1330:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1316:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1043,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1316:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:42:3"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:3"
									},
									"scope": 1092,
									"src": "1277:214:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1766:142:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1788:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1068,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1776:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1092_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "1776:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "1776:20:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1076,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "1817:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1078,
																	"indexExpression": {
																		"id": 1077,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "1828:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1817:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1811:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1074,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1811:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1811:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1811:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1848:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1089,
												"nodeType": "IfStatement",
												"src": "1807:95:3",
												"trueBody": {
													"id": 1088,
													"nodeType": "Block",
													"src": "1851:51:3",
													"statements": [
														{
															"expression": {
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "1865:26:3",
																"subExpression": {
																	"baseExpression": {
																		"id": 1083,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "1872:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1085,
																	"indexExpression": {
																		"id": 1084,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "1883:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1872:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1087,
															"nodeType": "ExpressionStatement",
															"src": "1865:26:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1497:206:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1717:5:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1066,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1757:8:3"
									},
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1731:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1723:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:17:3"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:0:3"
									},
									"scope": 1092,
									"src": "1708:200:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1093,
							"src": "233:1677:3",
							"usedErrors": []
						}
					],
					"src": "113:1798:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1751
						],
						"IERC721": [
							946
						],
						"IERC721Metadata": [
							1119
						]
					},
					"id": 1120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1094,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1095,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1120,
							"sourceUnit": 947,
							"src": "137:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1097,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 946,
										"src": "326:7:4"
									},
									"id": 1098,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1096,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1119,
							"linearizedBaseContracts": [
								1119,
								946,
								1751
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:4"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "442:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:4"
									},
									"scope": 1119,
									"src": "403:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:4"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "569:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:4"
									},
									"scope": 1119,
									"src": "528:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:4"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "743:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:4"
									},
									"scope": 1119,
									"src": "685:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1120,
							"src": "297:463:4",
							"usedErrors": []
						}
					],
					"src": "112:649:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1416
						]
					},
					"id": 1417,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1121,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1122,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1416,
							"linearizedBaseContracts": [
								1416
							],
							"name": "Address",
							"nameLocation": "187:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "837:311:5",
										"statements": [
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "1034:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1125,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:5",
														"valueSize": 1
													}
												],
												"id": 1133,
												"nodeType": "InlineAssembly",
												"src": "1056:61:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1134,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "1133:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1137,
												"nodeType": "Return",
												"src": "1126:15:5"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "791:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:5"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "831:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:5"
									},
									"scope": 1416,
									"src": "771:377:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "2136:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1150,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1416",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1416",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1148,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1153,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "2179:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:5"
											},
											{
												"assignments": [
													1159,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "2231:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1158,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1166,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1160,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "2249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1162,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "2271:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1168,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "2300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:5"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2084:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2111:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:5"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:5"
									},
									"scope": 1416,
									"src": "2065:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "3208:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3238:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "3246:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1183,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1190,
															1210
														],
														"referencedDeclaration": 1210,
														"src": "3225:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1182,
												"id": 1188,
												"nodeType": "Return",
												"src": "3218:67:5"
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3141:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3157:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:5"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3194:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:5"
									},
									"scope": 1416,
									"src": "3119:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "3661:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "3700:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1204,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "3708:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3717:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1202,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1230,
															1280
														],
														"referencedDeclaration": 1280,
														"src": "3678:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1201,
												"id": 1208,
												"nodeType": "Return",
												"src": "3671:59:5"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3569:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3596:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:5"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3647:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:5"
									},
									"scope": 1416,
									"src": "3514:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "4242:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "4281:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "4289:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1225,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "4295:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1222,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1230,
															1280
														],
														"referencedDeclaration": 1280,
														"src": "4259:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1228,
												"nodeType": "Return",
												"src": "4252:94:5"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4190:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:5"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4228:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:5"
									},
									"scope": 1416,
									"src": "4099:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "4780:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1247,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1416",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1416",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1245,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1250,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "4823:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1257,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "4900:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1256,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "4889:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:5"
											},
											{
												"assignments": [
													1263,
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "4953:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1262,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "4967:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"arguments": [
														{
															"id": 1270,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "5020:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1266,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "4994:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1268,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5013:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1274,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "5059:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1275,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "5068:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "5080:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1273,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "5042:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1278,
												"nodeType": "Return",
												"src": "5035:58:5"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4641:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4665:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4692:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4715:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:5"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4766:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:5"
									},
									"scope": 1416,
									"src": "4601:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "5377:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1291,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "5413:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "5421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1290,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1297,
															1332
														],
														"referencedDeclaration": 1332,
														"src": "5394:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1295,
												"nodeType": "Return",
												"src": "5387:80:5"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "5305:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "5321:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:5"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "5363:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:5"
									},
									"scope": 1416,
									"src": "5277:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "5816:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1311,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "5845:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1310,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "5834:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:5"
											},
											{
												"assignments": [
													1317,
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "5905:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1316,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "5919:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1318,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"arguments": [
														{
															"id": 1322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "5964:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "5946:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1326,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "6003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1327,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "6012:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1328,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "6024:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1325,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "5986:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1308,
												"id": 1330,
												"nodeType": "Return",
												"src": "5979:58:5"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "5695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "5719:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "5746:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:5"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "5802:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:5"
									},
									"scope": 1416,
									"src": "5658:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "6320:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1343,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "6358:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "6366:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1342,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1349,
															1384
														],
														"referencedDeclaration": 1384,
														"src": "6337:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1347,
												"nodeType": "Return",
												"src": "6330:84:5"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "6253:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "6269:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:5"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "6306:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:5"
									},
									"scope": 1416,
									"src": "6223:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "6762:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1363,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "6791:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1362,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "6780:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:5"
											},
											{
												"assignments": [
													1369,
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "6853:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1368,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "6867:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1370,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"initialValue": {
													"arguments": [
														{
															"id": 1374,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "6914:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1372,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "6894:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "6953:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1379,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "6962:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1380,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "6974:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1377,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "6936:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1382,
												"nodeType": "Return",
												"src": "6929:58:5"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6646:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6670:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6697:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:5"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6748:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:5"
									},
									"scope": 1416,
									"src": "6607:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "7374:532:5",
										"statements": [
											{
												"condition": {
													"id": 1396,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1387,
													"src": "7388:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1412,
													"nodeType": "Block",
													"src": "7445:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1400,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "7529:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1410,
																"nodeType": "Block",
																"src": "7837:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1407,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "7862:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1406,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1409,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:5"
																	}
																]
															},
															"id": 1411,
															"nodeType": "IfStatement",
															"src": "7525:365:5",
															"trueBody": {
																"id": 1405,
																"nodeType": "Block",
																"src": "7552:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1389,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1389,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1404,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1413,
												"nodeType": "IfStatement",
												"src": "7384:516:5",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "7397:42:5",
													"statements": [
														{
															"expression": {
																"id": 1397,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "7418:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1395,
															"id": 1398,
															"nodeType": "Return",
															"src": "7411:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "7249:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "7271:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "7304:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:5"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "7360:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:5"
									},
									"scope": 1416,
									"src": "7214:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1417,
							"src": "179:7729:5",
							"usedErrors": []
						}
					],
					"src": "86:7823:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1438
						]
					},
					"id": 1439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1419,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1438,
							"linearizedBaseContracts": [
								1438
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1424,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1426,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1438,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1433,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1432,
												"id": 1435,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1438,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1439,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1512
						]
					},
					"id": 1513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1441,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:7",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1512,
							"linearizedBaseContracts": [
								1512
							],
							"name": "Counters",
							"nameLocation": "432:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1444,
									"members": [
										{
											"constant": false,
											"id": 1443,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1444,
											"src": "786:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1442,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:7",
									"nodeType": "StructDefinition",
									"scope": 1512,
									"src": "447:374:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "901:38:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1452,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "918:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1443,
													"src": "918:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1454,
												"nodeType": "Return",
												"src": "911:21:7"
											}
										]
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "844:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1445,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1444,
														"src": "844:7:7"
													},
													"referencedDeclaration": 1444,
													"src": "844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:7"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "892:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:7"
									},
									"scope": 1512,
									"src": "827:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "998:70:7",
										"statements": [
											{
												"id": 1468,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:7",
												"statements": [
													{
														"expression": {
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1462,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "1032:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1443,
																"src": "1032:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1467,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:7"
													}
												]
											}
										]
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "964:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1458,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1457,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1444,
														"src": "964:7:7"
													},
													"referencedDeclaration": 1444,
													"src": "964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:7"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:7"
									},
									"scope": 1512,
									"src": "945:123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "1127:176:7",
										"statements": [
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1497,
														"src": "1137:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"expression": {
														"id": 1478,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "1153:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1443,
													"src": "1153:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1482,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "1185:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:7"
											},
											{
												"id": 1496,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:7",
												"statements": [
													{
														"expression": {
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1488,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "1260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1443,
																"src": "1260:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1491,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "1277:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1495,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:7"
													}
												]
											}
										]
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1093:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1471,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1444,
														"src": "1093:7:7"
													},
													"referencedDeclaration": 1444,
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:7"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:7"
									},
									"scope": 1512,
									"src": "1074:229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "1358:35:7",
										"statements": [
											{
												"expression": {
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1504,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "1368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1443,
														"src": "1368:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:7"
											}
										]
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1324:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1499,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1444,
														"src": "1324:7:7"
													},
													"referencedDeclaration": 1444,
													"src": "1324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:7"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:7"
									},
									"scope": 1512,
									"src": "1309:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1513,
							"src": "424:971:7",
							"usedErrors": []
						}
					],
					"src": "87:1309:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1715
						]
					},
					"id": 1716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1515,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1715,
							"linearizedBaseContracts": [
								1715
							],
							"name": "Strings",
							"nameLocation": "154:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1518,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1715,
									"src": "168:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1516,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1517,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "399:632:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1526,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "601:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1532,
												"nodeType": "IfStatement",
												"src": "597:51:8",
												"trueBody": {
													"id": 1531,
													"nodeType": "Block",
													"src": "613:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1525,
															"id": 1530,
															"nodeType": "Return",
															"src": "627:10:8"
														}
													]
												}
											},
											{
												"assignments": [
													1534
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "657:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"id": 1535,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1521,
													"src": "672:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:8"
											},
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "687:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:8"
											},
											{
												"body": {
													"id": 1550,
													"nodeType": "Block",
													"src": "729:57:8",
													"statements": [
														{
															"expression": {
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:8",
																"subExpression": {
																	"id": 1543,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "743:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1545,
															"nodeType": "ExpressionStatement",
															"src": "743:8:8"
														},
														{
															"expression": {
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1546,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "765:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1549,
															"nodeType": "ExpressionStatement",
															"src": "765:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1540,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "718:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1551,
												"nodeType": "WhileStatement",
												"src": "711:75:8"
											},
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "795:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1552,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1558,
												"initialValue": {
													"arguments": [
														{
															"id": 1556,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "827:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1554,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:8"
											},
											{
												"body": {
													"id": 1589,
													"nodeType": "Block",
													"src": "863:131:8",
													"statements": [
														{
															"expression": {
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1562,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "877:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1565,
															"nodeType": "ExpressionStatement",
															"src": "877:11:8"
														},
														{
															"expression": {
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1566,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "902:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1568,
																	"indexExpression": {
																		"id": 1567,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "909:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1580,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1578,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1576,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1521,
																									"src": "945:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1577,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1575,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1574,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1579,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1571,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1569,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1584,
															"nodeType": "ExpressionStatement",
															"src": "902:56:8"
														},
														{
															"expression": {
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "972:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1588,
															"nodeType": "ExpressionStatement",
															"src": "972:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1559,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "851:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1590,
												"nodeType": "WhileStatement",
												"src": "844:150:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "1017:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1591,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1525,
												"id": 1595,
												"nodeType": "Return",
												"src": "1003:21:8"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "346:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:8"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "384:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:8"
									},
									"scope": 1715,
									"src": "328:703:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "1210:255:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1605,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "1224:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1611,
												"nodeType": "IfStatement",
												"src": "1220:54:8",
												"trueBody": {
													"id": 1610,
													"nodeType": "Block",
													"src": "1236:38:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1604,
															"id": 1609,
															"nodeType": "Return",
															"src": "1250:13:8"
														}
													]
												}
											},
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "1283:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"id": 1614,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1600,
													"src": "1298:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:8"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "1313:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"hexValue": "30",
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:8"
											},
											{
												"body": {
													"id": 1630,
													"nodeType": "Block",
													"src": "1359:57:8",
													"statements": [
														{
															"expression": {
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:8",
																"subExpression": {
																	"id": 1623,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "1373:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1625,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:8"
														},
														{
															"expression": {
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1626,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "1395:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1629,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1620,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "1348:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1631,
												"nodeType": "WhileStatement",
												"src": "1341:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1633,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "1444:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1634,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "1451:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1632,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1638,
															1714
														],
														"referencedDeclaration": 1714,
														"src": "1432:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1604,
												"id": 1636,
												"nodeType": "Return",
												"src": "1425:33:8"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1157:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:8"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1195:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:8"
									},
									"scope": 1715,
									"src": "1136:329:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "1678:351:8",
										"statements": [
											{
												"assignments": [
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "1688:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1648,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1658,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1653,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "1724:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1650,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:8"
											},
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1659,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "1745:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1661,
														"indexExpression": {
															"hexValue": "30",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:8"
											},
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1665,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "1770:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1667,
														"indexExpression": {
															"hexValue": "31",
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:8"
											},
											{
												"body": {
													"id": 1699,
													"nodeType": "Block",
													"src": "1840:87:8",
													"statements": [
														{
															"expression": {
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1685,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "1854:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1687,
																	"indexExpression": {
																		"id": 1686,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "1861:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1688,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "1866:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1692,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1689,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "1879:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1694,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:8"
														},
														{
															"expression": {
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1695,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "1905:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1698,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "1828:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"initializationExpression": {
													"assignments": [
														1672
													],
													"declarations": [
														{
															"constant": false,
															"id": 1672,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1700,
															"src": "1800:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1671,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1678,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1674,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "1816:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:8",
														"subExpression": {
															"id": 1682,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "1837:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1684,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1702,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "1944:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "2015:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1708,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1647,
												"id": 1712,
												"nodeType": "Return",
												"src": "2001:21:8"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "1609:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "1624:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:8"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "1663:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:8"
									},
									"scope": 1715,
									"src": "1588:441:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1716,
							"src": "146:1885:8",
							"usedErrors": []
						}
					],
					"src": "86:1946:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1739
						],
						"IERC165": [
							1751
						]
					},
					"id": 1740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1717,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1740,
							"sourceUnit": 1752,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1720,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "754:7:9"
									},
									"id": 1721,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1719,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1739,
							"linearizedBaseContracts": [
								1739,
								1751
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1750
									],
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1730,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1732,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1751_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1751_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1731,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1751",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1729,
												"id": 1736,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1726,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1723,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 1739,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1740,
							"src": "726:260:9",
							"usedErrors": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1751
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1742,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1751,
							"linearizedBaseContracts": [
								1751
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 1751,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1752,
							"src": "405:447:10",
							"usedErrors": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			},
			"contracts/WavyNFT.sol": {
				"ast": {
					"absolutePath": "contracts/WavyNFT.sol",
					"exportedSymbols": {
						"Address": [
							1416
						],
						"Context": [
							1438
						],
						"Counters": [
							1512
						],
						"ERC165": [
							1739
						],
						"ERC721": [
							830
						],
						"ERC721URIStorage": [
							1092
						],
						"IERC165": [
							1751
						],
						"IERC721": [
							946
						],
						"IERC721Metadata": [
							1119
						],
						"IERC721Receiver": [
							964
						],
						"Strings": [
							1715
						],
						"WavyNFT": [
							1806
						]
					},
					"id": 1807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 1754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 1093,
							"src": "60:78:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 1513,
							"src": "140:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1756,
										"name": "ERC721URIStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1092,
										"src": "218:16:11"
									},
									"id": 1757,
									"nodeType": "InheritanceSpecifier",
									"src": "218:16:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1806,
							"linearizedBaseContracts": [
								1806,
								1092,
								830,
								1119,
								946,
								1739,
								1751,
								1438
							],
							"name": "WavyNFT",
							"nameLocation": "207:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1761,
									"libraryName": {
										"id": 1758,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "280:8:11"
									},
									"nodeType": "UsingForDirective",
									"src": "274:36:11",
									"typeName": {
										"id": 1760,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1759,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1444,
											"src": "293:16:11"
										},
										"referencedDeclaration": 1444,
										"src": "293:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1764,
									"mutability": "mutable",
									"name": "_tokenIds",
									"nameLocation": "341:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "316:34:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1444_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1763,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1762,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1444,
											"src": "316:16:11"
										},
										"referencedDeclaration": 1444,
										"src": "316:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1444_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "399:10:11",
										"statements": []
									},
									"id": 1772,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "576176794e4654",
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "380:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f0f5813641f4f81b1efe6754ac92263ea7d2709fc0d4b791598cb33f8574e950",
														"typeString": "literal_string \"WavyNFT\""
													},
													"value": "WavyNFT"
												},
												{
													"hexValue": "57415659",
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "391:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_67699929a5d7fef7321331e46ca37ddb06ba99c06ac5e6114b01ad39ac918943",
														"typeString": "literal_string \"WAVY\""
													},
													"value": "WAVY"
												}
											],
											"id": 1769,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1766,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 830,
												"src": "373:6:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "373:25:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "370:2:11"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:0:11"
									},
									"scope": 1806,
									"src": "359:50:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "539:343:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1781,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "581:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1444_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1470,
														"src": "581:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1444_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1444_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "581:21:11"
											},
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "newItemId",
														"nameLocation": "655:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1804,
														"src": "647:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "647:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1788,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "667:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1444_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1456,
														"src": "667:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1444_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1444_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "647:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1793,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "743:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1794,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "749:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1792,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "737:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "737:22:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "825:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1799,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "836:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1797,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "812:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1801,
												"nodeType": "ExpressionStatement",
												"src": "812:33:11"
											},
											{
												"expression": {
													"id": 1802,
													"name": "newItemId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1787,
													"src": "865:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1803,
												"nodeType": "Return",
												"src": "858:16:11"
											}
										]
									},
									"functionSelector": "cf378343",
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "awardItem",
									"nameLocation": "461:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "479:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "471:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "499:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "485:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1775,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "485:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:38:11"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "525:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:9:11"
									},
									"scope": 1806,
									"src": "452:430:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1807,
							"src": "198:687:11",
							"usedErrors": []
						}
					],
					"src": "33:854:11"
				},
				"id": 11
			}
		}
	}
}